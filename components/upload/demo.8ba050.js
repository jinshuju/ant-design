(window.webpackJsonp=window.webpackJsonp||[]).push([[208],{3925:function(Y,kn,g){Y.exports={avatar:g(4793),basic:g(4794),"crop-image":g(4795),"customize-progress-bar":g(4801),defaultFileList:g(4802),directory:g(4803),"drag-sorting":g(4804),drag:g(4805),"file-type":g(4806),fileList:g(4807),"max-count":g(4808),"picture-card":g(4809),"picture-style":g(4810),"preview-file":g(4811),"transform-file":g(4812),"upload-custom-action-icon":g(4813),"upload-manually":g(4814),"upload-png-only":g(4815),"upload-with-aliyun-oss":g(4816)}},4075:function(Y,kn,g){"use strict";(function(sn){Object.defineProperty(kn,"__esModule",{value:!0});function N(a){return typeof a=="object"&&!("toString"in a)?Object.prototype.toString.call(a).slice(8,-1):a}var H=typeof sn=="object"&&!0;function R(a,s){if(!a)throw H?new Error("Invariant failed"):new Error(s())}kn.invariant=R;var F=Object.prototype.hasOwnProperty,O=Array.prototype.splice,S=Object.prototype.toString;function D(a){return S.call(a).slice(8,-1)}var V=Object.assign||function(a,s){return M(s).forEach(function(u){F.call(s,u)&&(a[u]=s[u])}),a},M=typeof Object.getOwnPropertySymbols=="function"?function(a){return Object.keys(a).concat(Object.getOwnPropertySymbols(a))}:function(a){return Object.keys(a)};function C(a){return Array.isArray(a)?V(a.constructor(a.length),a):D(a)==="Map"?new Map(a):D(a)==="Set"?new Set(a):a&&typeof a=="object"?V(Object.create(Object.getPrototypeOf(a)),a):a}var W=function(){function a(){this.commands=V({},$),this.update=this.update.bind(this),this.update.extend=this.extend=this.extend.bind(this),this.update.isEquals=function(s,u){return s===u},this.update.newContext=function(){return new a().update}}return Object.defineProperty(a.prototype,"isEquals",{get:function(){return this.update.isEquals},set:function(s){this.update.isEquals=s},enumerable:!0,configurable:!0}),a.prototype.extend=function(s,u){this.commands[s]=u},a.prototype.update=function(s,u){var e=this,d=typeof u=="function"?{$apply:u}:u;Array.isArray(s)&&Array.isArray(d)||R(!Array.isArray(d),function(){return"update(): You provided an invalid spec to update(). The spec may not contain an array except as the value of $set, $push, $unshift, $splice or any custom command allowing an array value."}),R(typeof d=="object"&&d!==null,function(){return"update(): You provided an invalid spec to update(). The spec and every included key path must be plain objects containing one of the "+("following commands: "+Object.keys(e.commands).join(", ")+".")});var m=s;return M(d).forEach(function(b){if(F.call(e.commands,b)){var U=s===m;m=e.commands[b](d[b],m,d,s),U&&e.isEquals(m,s)&&(m=s)}else{var E=D(s)==="Map"?e.update(s.get(b),d[b]):e.update(s[b],d[b]),L=D(m)==="Map"?m.get(b):m[b];(!e.isEquals(E,L)||typeof E=="undefined"&&!F.call(s,b))&&(m===s&&(m=C(s)),D(m)==="Map"?m.set(b,E):m[b]=E)}}),m},a}();kn.Context=W;var $={$push:function(a,s,u){return hn(s,u,"$push"),a.length?s.concat(a):s},$unshift:function(a,s,u){return hn(s,u,"$unshift"),a.length?a.concat(s):s},$splice:function(a,s,u,e){return mn(s,u),a.forEach(function(d){pn(d),s===e&&d.length&&(s=C(e)),O.apply(s,d)}),s},$set:function(a,s,u){return z(u),a},$toggle:function(a,s){_(a,"$toggle");var u=a.length?C(s):s;return a.forEach(function(e){u[e]=!s[e]}),u},$unset:function(a,s,u,e){return _(a,"$unset"),a.forEach(function(d){Object.hasOwnProperty.call(s,d)&&(s===e&&(s=C(e)),delete s[d])}),s},$add:function(a,s,u,e){return t(s,"$add"),_(a,"$add"),D(s)==="Map"?a.forEach(function(d){var m=d[0],b=d[1];s===e&&s.get(m)!==b&&(s=C(e)),s.set(m,b)}):a.forEach(function(d){s===e&&!s.has(d)&&(s=C(e)),s.add(d)}),s},$remove:function(a,s,u,e){return t(s,"$remove"),_(a,"$remove"),a.forEach(function(d){s===e&&s.has(d)&&(s=C(e)),s.delete(d)}),s},$merge:function(a,s,u,e){return J(s,a),M(a).forEach(function(d){a[d]!==s[d]&&(s===e&&(s=C(e)),s[d]=a[d])}),s},$apply:function(a,s){return dn(a),a(s)}},nn=new W;kn.isEquals=nn.update.isEquals,kn.extend=nn.extend,kn.default=nn.update,kn.default.default=Y.exports=V(kn.default,kn);function hn(a,s,u){R(Array.isArray(a),function(){return"update(): expected target of "+N(u)+" to be an array; got "+N(a)+"."}),_(s[u],u)}function _(a,s){R(Array.isArray(a),function(){return"update(): expected spec of "+N(s)+" to be an array; got "+N(a)+". Did you forget to wrap your parameter in an array?"})}function mn(a,s){R(Array.isArray(a),function(){return"Expected $splice target to be an array; got "+N(a)}),pn(s.$splice)}function pn(a){R(Array.isArray(a),function(){return"update(): expected spec of $splice to be an array of arrays; got "+N(a)+". Did you forget to wrap your parameters in an array?"})}function dn(a){R(typeof a=="function",function(){return"update(): expected spec of $apply to be a function; got "+N(a)+"."})}function z(a){R(Object.keys(a).length===1,function(){return"Cannot have more than one key in an object with $set"})}function J(a,s){R(s&&typeof s=="object",function(){return"update(): $merge expects a spec of type 'object'; got "+N(s)}),R(a&&typeof a=="object",function(){return"update(): $merge expects a target of type 'object'; got "+N(a)})}function t(a,s){var u=D(a);R(u==="Map"||u==="Set",function(){return"update(): "+N(s)+" expects a target of type Set or Map; got "+N(u)})}}).call(this,g(496))},4793:function(Y,kn,g){Y.exports={content:{"zh-CN":[["p","\u70B9\u51FB\u4E0A\u4F20\u7528\u6237\u5934\u50CF\uFF0C\u5E76\u4F7F\u7528 ",["code","beforeUpload"]," \u9650\u5236\u7528\u6237\u4E0A\u4F20\u7684\u56FE\u7247\u683C\u5F0F\u548C\u5927\u5C0F\u3002"],["blockquote",["p",["code","beforeUpload"]," \u7684\u8FD4\u56DE\u503C\u53EF\u4EE5\u662F\u4E00\u4E2A Promise \u4EE5\u652F\u6301\u5F02\u6B65\u5904\u7406\uFF0C\u5982\u670D\u52A1\u7AEF\u6821\u9A8C\u7B49\uFF1A",["a",{title:null,href:"https://upload-react-component.vercel.app/demo/before-upload#beforeupload"},"\u793A\u4F8B"],"\u3002"]]],"en-US":[["p","Click to upload user's avatar, and validate size and format of picture with ",["code","beforeUpload"],"."],["blockquote",["p","The return value of function ",["code","beforeUpload"]," can be a Promise to check asynchronously. ",["a",{title:null,href:"https://upload-react-component.vercel.app/demo/before-upload#beforeupload"},"demo"]]]]},meta:{order:1,title:{"zh-CN":"\u7528\u6237\u5934\u50CF","en-US":"Avatar"},filename:"components/upload/demo/avatar.md",id:"components-upload-demo-avatar"},toc:["ul",["li",["a",{className:"bisheng-toc-h2",href:"#zh-CN",title:"zh-CN"},"zh-CN"]],["li",["a",{className:"bisheng-toc-h2",href:"#en-US",title:"en-US"},"en-US"]]],highlightedCode:["pre",{lang:"tsx",highlighted:`import { LoadingOutlined<span class="token punctuation">,</span> PlusOutlined } from <span class="token string">'@ant-design/icons'</span><span class="token comment" spellcheck="true">;</span>
import { message<span class="token punctuation">,</span> Upload } from <span class="token string">'antd'</span><span class="token comment" spellcheck="true">;</span>
import type { UploadChangeParam } from <span class="token string">'antd/es/upload'</span><span class="token comment" spellcheck="true">;</span>
import type { RcFile<span class="token punctuation">,</span> UploadFile<span class="token punctuation">,</span> UploadProps } from <span class="token string">'antd/es/upload/interface'</span><span class="token comment" spellcheck="true">;</span>
import React<span class="token punctuation">,</span> { useState } from <span class="token string">'react'</span><span class="token comment" spellcheck="true">;</span>

<span class="token keyword">const</span> getBase64 <span class="token operator">=</span> <span class="token punctuation">(</span>img<span class="token punctuation">:</span> RcFile<span class="token punctuation">,</span> callback<span class="token punctuation">:</span> <span class="token punctuation">(</span>url<span class="token punctuation">:</span> string<span class="token punctuation">)</span> <span class="token operator">=</span><span class="token operator">></span> void<span class="token punctuation">)</span> <span class="token operator">=</span><span class="token operator">></span> {
  <span class="token keyword">const</span> reader <span class="token operator">=</span> new <span class="token function">FileReader</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token comment" spellcheck="true">;</span>
  reader<span class="token punctuation">.</span><span class="token function">addEventListener</span><span class="token punctuation">(</span><span class="token string">'load'</span><span class="token punctuation">,</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=</span><span class="token operator">></span> <span class="token function">callback</span><span class="token punctuation">(</span>reader<span class="token punctuation">.</span>result as string<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token comment" spellcheck="true">;</span>
  reader<span class="token punctuation">.</span><span class="token function">readAsDataURL</span><span class="token punctuation">(</span>img<span class="token punctuation">)</span><span class="token comment" spellcheck="true">;</span>
}<span class="token comment" spellcheck="true">;</span>

<span class="token keyword">const</span> beforeUpload <span class="token operator">=</span> <span class="token punctuation">(</span>file<span class="token punctuation">:</span> RcFile<span class="token punctuation">)</span> <span class="token operator">=</span><span class="token operator">></span> {
  <span class="token keyword">const</span> isJpgOrPng <span class="token operator">=</span> file<span class="token punctuation">.</span>type <span class="token operator">==</span><span class="token operator">=</span> <span class="token string">'image/jpeg'</span> || file<span class="token punctuation">.</span>type <span class="token operator">==</span><span class="token operator">=</span> <span class="token string">'image/png'</span><span class="token comment" spellcheck="true">;</span>
  <span class="token keyword">if</span> <span class="token punctuation">(</span>!isJpgOrPng<span class="token punctuation">)</span> {
    message<span class="token punctuation">.</span><span class="token function">error</span><span class="token punctuation">(</span><span class="token string">'You can only upload JPG/PNG file!'</span><span class="token punctuation">)</span><span class="token comment" spellcheck="true">;</span>
  }
  <span class="token keyword">const</span> isLt2M <span class="token operator">=</span> file<span class="token punctuation">.</span>size <span class="token operator">/</span> <span class="token number">1024</span> <span class="token operator">/</span> <span class="token number">1024</span> <span class="token operator">&lt;</span> <span class="token number">2</span><span class="token comment" spellcheck="true">;</span>
  <span class="token keyword">if</span> <span class="token punctuation">(</span>!isLt2M<span class="token punctuation">)</span> {
    message<span class="token punctuation">.</span><span class="token function">error</span><span class="token punctuation">(</span><span class="token string">'Image must smaller than 2MB!'</span><span class="token punctuation">)</span><span class="token comment" spellcheck="true">;</span>
  }
  return isJpgOrPng <span class="token operator">&amp;</span><span class="token operator">&amp;</span> isLt2M<span class="token comment" spellcheck="true">;</span>
}<span class="token comment" spellcheck="true">;</span>

<span class="token keyword">const</span> App<span class="token punctuation">:</span> React<span class="token punctuation">.</span>FC <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=</span><span class="token operator">></span> {
  <span class="token keyword">const</span> <span class="token punctuation">[</span>loading<span class="token punctuation">,</span> setLoading<span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token function">useState</span><span class="token punctuation">(</span><span class="token boolean">false</span><span class="token punctuation">)</span><span class="token comment" spellcheck="true">;</span>
  <span class="token keyword">const</span> <span class="token punctuation">[</span>imageUrl<span class="token punctuation">,</span> setImageUrl<span class="token punctuation">]</span> <span class="token operator">=</span> useState<span class="token operator">&lt;</span>string<span class="token operator">></span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token comment" spellcheck="true">;</span>

  <span class="token keyword">const</span> handleChange<span class="token punctuation">:</span> UploadProps<span class="token punctuation">[</span><span class="token string">'onChange'</span><span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token punctuation">(</span>info<span class="token punctuation">:</span> UploadChangeParam<span class="token operator">&lt;</span>UploadFile<span class="token operator">></span><span class="token punctuation">)</span> <span class="token operator">=</span><span class="token operator">></span> {
    <span class="token keyword">if</span> <span class="token punctuation">(</span>info<span class="token punctuation">.</span>file<span class="token punctuation">.</span>status <span class="token operator">==</span><span class="token operator">=</span> <span class="token string">'uploading'</span><span class="token punctuation">)</span> {
      <span class="token function">setLoading</span><span class="token punctuation">(</span><span class="token boolean">true</span><span class="token punctuation">)</span><span class="token comment" spellcheck="true">;</span>
      return<span class="token comment" spellcheck="true">;</span>
    }
    <span class="token keyword">if</span> <span class="token punctuation">(</span>info<span class="token punctuation">.</span>file<span class="token punctuation">.</span>status <span class="token operator">==</span><span class="token operator">=</span> <span class="token string">'done'</span><span class="token punctuation">)</span> {
      <span class="token operator">/</span><span class="token operator">/</span> Get this url from response <span class="token keyword">in</span> real world<span class="token punctuation">.</span>
      <span class="token function">getBase64</span><span class="token punctuation">(</span>info<span class="token punctuation">.</span>file<span class="token punctuation">.</span>originFileObj as RcFile<span class="token punctuation">,</span> url <span class="token operator">=</span><span class="token operator">></span> {
        <span class="token function">setLoading</span><span class="token punctuation">(</span><span class="token boolean">false</span><span class="token punctuation">)</span><span class="token comment" spellcheck="true">;</span>
        <span class="token function">setImageUrl</span><span class="token punctuation">(</span>url<span class="token punctuation">)</span><span class="token comment" spellcheck="true">;</span>
      }<span class="token punctuation">)</span><span class="token comment" spellcheck="true">;</span>
    }
  }<span class="token comment" spellcheck="true">;</span>

  <span class="token keyword">const</span> uploadButton <span class="token operator">=</span> <span class="token punctuation">(</span>
    <span class="token operator">&lt;</span>div<span class="token operator">></span>
      {loading <span class="token operator">?</span> <span class="token operator">&lt;</span>LoadingOutlined <span class="token operator">/</span><span class="token operator">></span> <span class="token punctuation">:</span> <span class="token operator">&lt;</span>PlusOutlined <span class="token operator">/</span><span class="token operator">></span>}
      <span class="token operator">&lt;</span>div style<span class="token operator">=</span>{{ marginTop<span class="token punctuation">:</span> <span class="token number">8</span> }}<span class="token operator">></span>Upload<span class="token operator">&lt;</span><span class="token operator">/</span>div<span class="token operator">></span>
    <span class="token operator">&lt;</span><span class="token operator">/</span>div<span class="token operator">></span>
  <span class="token punctuation">)</span><span class="token comment" spellcheck="true">;</span>

  return <span class="token punctuation">(</span>
    <span class="token operator">&lt;</span>Upload
      name<span class="token operator">=</span><span class="token string">"avatar"</span>
      listType<span class="token operator">=</span><span class="token string">"picture-card"</span>
      className<span class="token operator">=</span><span class="token string">"avatar-uploader"</span>
      showUploadList<span class="token operator">=</span>{<span class="token boolean">false</span>}
      action<span class="token operator">=</span><span class="token string">"https://www.mocky.io/v2/5cc8019d300000980a055e76"</span>
      beforeUpload<span class="token operator">=</span>{beforeUpload}
      onChange<span class="token operator">=</span>{handleChange}
    <span class="token operator">></span>
      {imageUrl <span class="token operator">?</span> <span class="token operator">&lt;</span>img src<span class="token operator">=</span>{imageUrl} alt<span class="token operator">=</span><span class="token string">"avatar"</span> style<span class="token operator">=</span>{{ width<span class="token punctuation">:</span> <span class="token string">'100%'</span> }} <span class="token operator">/</span><span class="token operator">></span> <span class="token punctuation">:</span> uploadButton}
    <span class="token operator">&lt;</span><span class="token operator">/</span>Upload<span class="token operator">></span>
  <span class="token punctuation">)</span><span class="token comment" spellcheck="true">;</span>
}<span class="token comment" spellcheck="true">;</span>

export <span class="token keyword">default</span> App<span class="token comment" spellcheck="true">;</span>`}],highlightedCodes:{tsx:`<span class="token keyword">import</span> <span class="token punctuation">{</span> LoadingOutlined<span class="token punctuation">,</span> PlusOutlined <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">'@ant-design/icons'</span><span class="token punctuation">;</span>
<span class="token keyword">import</span> <span class="token punctuation">{</span> message<span class="token punctuation">,</span> Upload <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">'antd'</span><span class="token punctuation">;</span>
<span class="token keyword">import</span> type <span class="token punctuation">{</span> UploadChangeParam <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">'antd/es/upload'</span><span class="token punctuation">;</span>
<span class="token keyword">import</span> type <span class="token punctuation">{</span> RcFile<span class="token punctuation">,</span> UploadFile<span class="token punctuation">,</span> UploadProps <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">'antd/es/upload/interface'</span><span class="token punctuation">;</span>
<span class="token keyword">import</span> React<span class="token punctuation">,</span> <span class="token punctuation">{</span> useState <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">'react'</span><span class="token punctuation">;</span>

<span class="token keyword">const</span> <span class="token function-variable function">getBase64</span> <span class="token operator">=</span> <span class="token punctuation">(</span>img<span class="token operator">:</span> RcFile<span class="token punctuation">,</span> <span class="token function-variable function">callback</span><span class="token operator">:</span> <span class="token punctuation">(</span>url<span class="token operator">:</span> string<span class="token punctuation">)</span> <span class="token operator">=></span> <span class="token keyword">void</span><span class="token punctuation">)</span> <span class="token operator">=></span> <span class="token punctuation">{</span>
  <span class="token keyword">const</span> reader <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">FileReader</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
  reader<span class="token punctuation">.</span><span class="token function">addEventListener</span><span class="token punctuation">(</span><span class="token string">'load'</span><span class="token punctuation">,</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=></span> <span class="token function">callback</span><span class="token punctuation">(</span>reader<span class="token punctuation">.</span>result <span class="token keyword">as</span> string<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
  reader<span class="token punctuation">.</span><span class="token function">readAsDataURL</span><span class="token punctuation">(</span>img<span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span><span class="token punctuation">;</span>

<span class="token keyword">const</span> <span class="token function-variable function">beforeUpload</span> <span class="token operator">=</span> <span class="token punctuation">(</span>file<span class="token operator">:</span> RcFile<span class="token punctuation">)</span> <span class="token operator">=></span> <span class="token punctuation">{</span>
  <span class="token keyword">const</span> isJpgOrPng <span class="token operator">=</span> file<span class="token punctuation">.</span>type <span class="token operator">===</span> <span class="token string">'image/jpeg'</span> <span class="token operator">||</span> file<span class="token punctuation">.</span>type <span class="token operator">===</span> <span class="token string">'image/png'</span><span class="token punctuation">;</span>
  <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token operator">!</span>isJpgOrPng<span class="token punctuation">)</span> <span class="token punctuation">{</span>
    message<span class="token punctuation">.</span><span class="token function">error</span><span class="token punctuation">(</span><span class="token string">'You can only upload JPG/PNG file!'</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token punctuation">}</span>
  <span class="token keyword">const</span> isLt2M <span class="token operator">=</span> file<span class="token punctuation">.</span>size <span class="token operator">/</span> <span class="token number">1024</span> <span class="token operator">/</span> <span class="token number">1024</span> <span class="token operator">&lt;</span> <span class="token number">2</span><span class="token punctuation">;</span>
  <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token operator">!</span>isLt2M<span class="token punctuation">)</span> <span class="token punctuation">{</span>
    message<span class="token punctuation">.</span><span class="token function">error</span><span class="token punctuation">(</span><span class="token string">'Image must smaller than 2MB!'</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token punctuation">}</span>
  <span class="token keyword">return</span> isJpgOrPng <span class="token operator">&amp;&amp;</span> isLt2M<span class="token punctuation">;</span>
<span class="token punctuation">}</span><span class="token punctuation">;</span>

<span class="token keyword">const</span> App<span class="token operator">:</span> React<span class="token punctuation">.</span><span class="token function-variable function">FC</span> <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=></span> <span class="token punctuation">{</span>
  <span class="token keyword">const</span> <span class="token punctuation">[</span>loading<span class="token punctuation">,</span> setLoading<span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token function">useState</span><span class="token punctuation">(</span><span class="token boolean">false</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token keyword">const</span> <span class="token punctuation">[</span>imageUrl<span class="token punctuation">,</span> setImageUrl<span class="token punctuation">]</span> <span class="token operator">=</span> useState<span class="token operator">&lt;</span>string<span class="token operator">></span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

  <span class="token keyword">const</span> handleChange<span class="token operator">:</span> UploadProps<span class="token punctuation">[</span><span class="token string">'onChange'</span><span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token punctuation">(</span>info<span class="token operator">:</span> UploadChangeParam<span class="token operator">&lt;</span>UploadFile<span class="token operator">></span><span class="token punctuation">)</span> <span class="token operator">=></span> <span class="token punctuation">{</span>
    <span class="token keyword">if</span> <span class="token punctuation">(</span>info<span class="token punctuation">.</span>file<span class="token punctuation">.</span>status <span class="token operator">===</span> <span class="token string">'uploading'</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
      <span class="token function">setLoading</span><span class="token punctuation">(</span><span class="token boolean">true</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
      <span class="token keyword">return</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
    <span class="token keyword">if</span> <span class="token punctuation">(</span>info<span class="token punctuation">.</span>file<span class="token punctuation">.</span>status <span class="token operator">===</span> <span class="token string">'done'</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
      <span class="token comment">// Get this url from response in real world.</span>
      <span class="token function">getBase64</span><span class="token punctuation">(</span>info<span class="token punctuation">.</span>file<span class="token punctuation">.</span>originFileObj <span class="token keyword">as</span> RcFile<span class="token punctuation">,</span> url <span class="token operator">=></span> <span class="token punctuation">{</span>
        <span class="token function">setLoading</span><span class="token punctuation">(</span><span class="token boolean">false</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token function">setImageUrl</span><span class="token punctuation">(</span>url<span class="token punctuation">)</span><span class="token punctuation">;</span>
      <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
  <span class="token punctuation">}</span><span class="token punctuation">;</span>

  <span class="token keyword">const</span> uploadButton <span class="token operator">=</span> <span class="token punctuation">(</span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span><span class="token punctuation">></span></span>
      <span class="token punctuation">{</span>loading <span class="token operator">?</span> <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span><span class="token class-name">LoadingOutlined</span></span> <span class="token punctuation">/></span></span> <span class="token operator">:</span> <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span><span class="token class-name">PlusOutlined</span></span> <span class="token punctuation">/></span></span><span class="token punctuation">}</span>
      <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">style</span><span class="token script language-javascript"><span class="token script-punctuation punctuation">=</span><span class="token punctuation">{</span><span class="token punctuation">{</span> marginTop<span class="token operator">:</span> <span class="token number">8</span> <span class="token punctuation">}</span><span class="token punctuation">}</span></span><span class="token punctuation">></span></span>Upload<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">></span></span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">></span></span>
  <span class="token punctuation">)</span><span class="token punctuation">;</span>

  <span class="token keyword">return</span> <span class="token punctuation">(</span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span><span class="token class-name">Upload</span></span>
      <span class="token attr-name">name</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>avatar<span class="token punctuation">"</span></span>
      <span class="token attr-name">listType</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>picture-card<span class="token punctuation">"</span></span>
      <span class="token attr-name">className</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>avatar-uploader<span class="token punctuation">"</span></span>
      <span class="token attr-name">showUploadList</span><span class="token script language-javascript"><span class="token script-punctuation punctuation">=</span><span class="token punctuation">{</span><span class="token boolean">false</span><span class="token punctuation">}</span></span>
      <span class="token attr-name">action</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>https://www.mocky.io/v2/5cc8019d300000980a055e76<span class="token punctuation">"</span></span>
      <span class="token attr-name">beforeUpload</span><span class="token script language-javascript"><span class="token script-punctuation punctuation">=</span><span class="token punctuation">{</span>beforeUpload<span class="token punctuation">}</span></span>
      <span class="token attr-name">onChange</span><span class="token script language-javascript"><span class="token script-punctuation punctuation">=</span><span class="token punctuation">{</span>handleChange<span class="token punctuation">}</span></span>
    <span class="token punctuation">></span></span>
      <span class="token punctuation">{</span>imageUrl <span class="token operator">?</span> <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>img</span> <span class="token attr-name">src</span><span class="token script language-javascript"><span class="token script-punctuation punctuation">=</span><span class="token punctuation">{</span>imageUrl<span class="token punctuation">}</span></span> <span class="token attr-name">alt</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>avatar<span class="token punctuation">"</span></span> <span class="token attr-name">style</span><span class="token script language-javascript"><span class="token script-punctuation punctuation">=</span><span class="token punctuation">{</span><span class="token punctuation">{</span> width<span class="token operator">:</span> <span class="token string">'100%'</span> <span class="token punctuation">}</span><span class="token punctuation">}</span></span> <span class="token punctuation">/></span></span> <span class="token operator">:</span> uploadButton<span class="token punctuation">}</span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span><span class="token class-name">Upload</span></span><span class="token punctuation">></span></span>
  <span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span><span class="token punctuation">;</span>

<span class="token keyword">export</span> <span class="token keyword">default</span> App<span class="token punctuation">;</span>`,jsx:`<span class="token keyword">import</span> <span class="token punctuation">{</span> LoadingOutlined<span class="token punctuation">,</span> PlusOutlined <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">'@ant-design/icons'</span><span class="token punctuation">;</span>
<span class="token keyword">import</span> <span class="token punctuation">{</span> message<span class="token punctuation">,</span> Upload <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">'antd'</span><span class="token punctuation">;</span>
<span class="token keyword">import</span> React<span class="token punctuation">,</span> <span class="token punctuation">{</span> useState <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">'react'</span><span class="token punctuation">;</span>
<span class="token keyword">const</span> <span class="token function-variable function">getBase64</span> <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token parameter">img<span class="token punctuation">,</span> callback</span><span class="token punctuation">)</span> <span class="token operator">=></span> <span class="token punctuation">{</span>
  <span class="token keyword">const</span> reader <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">FileReader</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
  reader<span class="token punctuation">.</span><span class="token function">addEventListener</span><span class="token punctuation">(</span><span class="token string">'load'</span><span class="token punctuation">,</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=></span> <span class="token function">callback</span><span class="token punctuation">(</span>reader<span class="token punctuation">.</span>result<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
  reader<span class="token punctuation">.</span><span class="token function">readAsDataURL</span><span class="token punctuation">(</span>img<span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span><span class="token punctuation">;</span>
<span class="token keyword">const</span> <span class="token function-variable function">beforeUpload</span> <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token parameter">file</span><span class="token punctuation">)</span> <span class="token operator">=></span> <span class="token punctuation">{</span>
  <span class="token keyword">const</span> isJpgOrPng <span class="token operator">=</span> file<span class="token punctuation">.</span>type <span class="token operator">===</span> <span class="token string">'image/jpeg'</span> <span class="token operator">||</span> file<span class="token punctuation">.</span>type <span class="token operator">===</span> <span class="token string">'image/png'</span><span class="token punctuation">;</span>
  <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token operator">!</span>isJpgOrPng<span class="token punctuation">)</span> <span class="token punctuation">{</span>
    message<span class="token punctuation">.</span><span class="token function">error</span><span class="token punctuation">(</span><span class="token string">'You can only upload JPG/PNG file!'</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token punctuation">}</span>
  <span class="token keyword">const</span> isLt2M <span class="token operator">=</span> file<span class="token punctuation">.</span>size <span class="token operator">/</span> <span class="token number">1024</span> <span class="token operator">/</span> <span class="token number">1024</span> <span class="token operator">&lt;</span> <span class="token number">2</span><span class="token punctuation">;</span>
  <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token operator">!</span>isLt2M<span class="token punctuation">)</span> <span class="token punctuation">{</span>
    message<span class="token punctuation">.</span><span class="token function">error</span><span class="token punctuation">(</span><span class="token string">'Image must smaller than 2MB!'</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token punctuation">}</span>
  <span class="token keyword">return</span> isJpgOrPng <span class="token operator">&amp;&amp;</span> isLt2M<span class="token punctuation">;</span>
<span class="token punctuation">}</span><span class="token punctuation">;</span>
<span class="token keyword">const</span> <span class="token function-variable function">App</span> <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=></span> <span class="token punctuation">{</span>
  <span class="token keyword">const</span> <span class="token punctuation">[</span>loading<span class="token punctuation">,</span> setLoading<span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token function">useState</span><span class="token punctuation">(</span><span class="token boolean">false</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token keyword">const</span> <span class="token punctuation">[</span>imageUrl<span class="token punctuation">,</span> setImageUrl<span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token function">useState</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token keyword">const</span> <span class="token function-variable function">handleChange</span> <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token parameter">info</span><span class="token punctuation">)</span> <span class="token operator">=></span> <span class="token punctuation">{</span>
    <span class="token keyword">if</span> <span class="token punctuation">(</span>info<span class="token punctuation">.</span>file<span class="token punctuation">.</span>status <span class="token operator">===</span> <span class="token string">'uploading'</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
      <span class="token function">setLoading</span><span class="token punctuation">(</span><span class="token boolean">true</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
      <span class="token keyword">return</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
    <span class="token keyword">if</span> <span class="token punctuation">(</span>info<span class="token punctuation">.</span>file<span class="token punctuation">.</span>status <span class="token operator">===</span> <span class="token string">'done'</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
      <span class="token comment">// Get this url from response in real world.</span>
      <span class="token function">getBase64</span><span class="token punctuation">(</span>info<span class="token punctuation">.</span>file<span class="token punctuation">.</span>originFileObj<span class="token punctuation">,</span> <span class="token punctuation">(</span><span class="token parameter">url</span><span class="token punctuation">)</span> <span class="token operator">=></span> <span class="token punctuation">{</span>
        <span class="token function">setLoading</span><span class="token punctuation">(</span><span class="token boolean">false</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token function">setImageUrl</span><span class="token punctuation">(</span>url<span class="token punctuation">)</span><span class="token punctuation">;</span>
      <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
  <span class="token punctuation">}</span><span class="token punctuation">;</span>
  <span class="token keyword">const</span> uploadButton <span class="token operator">=</span> <span class="token punctuation">(</span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span><span class="token punctuation">></span></span>
      <span class="token punctuation">{</span>loading <span class="token operator">?</span> <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span><span class="token class-name">LoadingOutlined</span></span> <span class="token punctuation">/></span></span> <span class="token operator">:</span> <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span><span class="token class-name">PlusOutlined</span></span> <span class="token punctuation">/></span></span><span class="token punctuation">}</span>
      <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span>
        <span class="token attr-name">style</span><span class="token script language-javascript"><span class="token script-punctuation punctuation">=</span><span class="token punctuation">{</span><span class="token punctuation">{</span>
          <span class="token literal-property property">marginTop</span><span class="token operator">:</span> <span class="token number">8</span><span class="token punctuation">,</span>
        <span class="token punctuation">}</span><span class="token punctuation">}</span></span>
      <span class="token punctuation">></span></span>
        Upload
      <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">></span></span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">></span></span>
  <span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token keyword">return</span> <span class="token punctuation">(</span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span><span class="token class-name">Upload</span></span>
      <span class="token attr-name">name</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>avatar<span class="token punctuation">"</span></span>
      <span class="token attr-name">listType</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>picture-card<span class="token punctuation">"</span></span>
      <span class="token attr-name">className</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>avatar-uploader<span class="token punctuation">"</span></span>
      <span class="token attr-name">showUploadList</span><span class="token script language-javascript"><span class="token script-punctuation punctuation">=</span><span class="token punctuation">{</span><span class="token boolean">false</span><span class="token punctuation">}</span></span>
      <span class="token attr-name">action</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>https://www.mocky.io/v2/5cc8019d300000980a055e76<span class="token punctuation">"</span></span>
      <span class="token attr-name">beforeUpload</span><span class="token script language-javascript"><span class="token script-punctuation punctuation">=</span><span class="token punctuation">{</span>beforeUpload<span class="token punctuation">}</span></span>
      <span class="token attr-name">onChange</span><span class="token script language-javascript"><span class="token script-punctuation punctuation">=</span><span class="token punctuation">{</span>handleChange<span class="token punctuation">}</span></span>
    <span class="token punctuation">></span></span>
      <span class="token punctuation">{</span>imageUrl <span class="token operator">?</span> <span class="token punctuation">(</span>
        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>img</span>
          <span class="token attr-name">src</span><span class="token script language-javascript"><span class="token script-punctuation punctuation">=</span><span class="token punctuation">{</span>imageUrl<span class="token punctuation">}</span></span>
          <span class="token attr-name">alt</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>avatar<span class="token punctuation">"</span></span>
          <span class="token attr-name">style</span><span class="token script language-javascript"><span class="token script-punctuation punctuation">=</span><span class="token punctuation">{</span><span class="token punctuation">{</span>
            <span class="token literal-property property">width</span><span class="token operator">:</span> <span class="token string">'100%'</span><span class="token punctuation">,</span>
          <span class="token punctuation">}</span><span class="token punctuation">}</span></span>
        <span class="token punctuation">/></span></span>
      <span class="token punctuation">)</span> <span class="token operator">:</span> <span class="token punctuation">(</span>
        uploadButton
      <span class="token punctuation">)</span><span class="token punctuation">}</span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span><span class="token class-name">Upload</span></span><span class="token punctuation">></span></span>
  <span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span><span class="token punctuation">;</span>
<span class="token keyword">export</span> <span class="token keyword">default</span> App<span class="token punctuation">;</span>
`},preview:function(){var N=g(0),H=g(47);function R(z){return R=typeof Symbol=="function"&&typeof Symbol.iterator=="symbol"?function(J){return typeof J}:function(J){return J&&typeof Symbol=="function"&&J.constructor===Symbol&&J!==Symbol.prototype?"symbol":typeof J},R(z)}var F=g(61),O=g(12),S=V(g(0));function D(z){if(typeof WeakMap!="function")return null;var J=new WeakMap,t=new WeakMap;return(D=function(s){return s?t:J})(z)}function V(z,J){if(!J&&z&&z.__esModule)return z;if(z===null||R(z)!=="object"&&typeof z!="function")return{default:z};var t=D(J);if(t&&t.has(z))return t.get(z);var a={},s=Object.defineProperty&&Object.getOwnPropertyDescriptor;for(var u in z)if(u!=="default"&&Object.prototype.hasOwnProperty.call(z,u)){var e=s?Object.getOwnPropertyDescriptor(z,u):null;e&&(e.get||e.set)?Object.defineProperty(a,u,e):a[u]=z[u]}return a.default=z,t&&t.set(z,a),a}function M(z,J){return hn(z)||nn(z,J)||W(z,J)||C()}function C(){throw new TypeError(`Invalid attempt to destructure non-iterable instance.
In order to be iterable, non-array objects must have a [Symbol.iterator]() method.`)}function W(z,J){if(z){if(typeof z=="string")return $(z,J);var t=Object.prototype.toString.call(z).slice(8,-1);if(t==="Object"&&z.constructor&&(t=z.constructor.name),t==="Map"||t==="Set")return Array.from(z);if(t==="Arguments"||/^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(t))return $(z,J)}}function $(z,J){(J==null||J>z.length)&&(J=z.length);for(var t=0,a=new Array(J);t<J;t++)a[t]=z[t];return a}function nn(z,J){var t=z==null?null:typeof Symbol!="undefined"&&z[Symbol.iterator]||z["@@iterator"];if(t!=null){var a,s,u,e,d=[],m=!0,b=!1;try{if(u=(t=t.call(z)).next,J===0){if(Object(t)!==t)return;m=!1}else for(;!(m=(a=u.call(t)).done)&&(d.push(a.value),d.length!==J);m=!0);}catch(U){b=!0,s=U}finally{try{if(!m&&t.return!=null&&(e=t.return(),Object(e)!==e))return}finally{if(b)throw s}}return d}}function hn(z){if(Array.isArray(z))return z}var _=function(J,t){var a=new FileReader;a.addEventListener("load",function(){return t(a.result)}),a.readAsDataURL(J)},mn=function(J){var t=J.type==="image/jpeg"||J.type==="image/png";t||O.message.error("You can only upload JPG/PNG file!");var a=J.size/1024/1024<2;return a||O.message.error("Image must smaller than 2MB!"),t&&a},pn=function(){var J=(0,S.useState)(!1),t=M(J,2),a=t[0],s=t[1],u=(0,S.useState)(),e=M(u,2),d=e[0],m=e[1],b=function(L){if(L.file.status==="uploading"){s(!0);return}L.file.status==="done"&&_(L.file.originFileObj,function(I){s(!1),m(I)})},U=S.default.createElement("div",null,a?S.default.createElement(F.LoadingOutlined,null):S.default.createElement(F.PlusOutlined,null),S.default.createElement("div",{style:{marginTop:8}},"Upload"));return S.default.createElement(O.Upload,{name:"avatar",listType:"picture-card",className:"avatar-uploader",showUploadList:!1,action:"https://www.mocky.io/v2/5cc8019d300000980a055e76",beforeUpload:mn,onChange:b},d?S.default.createElement("img",{src:d,alt:"avatar",style:{width:"100%"}}):U)},dn=pn;return N.createElement(dn)}}},4794:function(Y,kn,g){Y.exports={content:{"zh-CN":[["p","\u7ECF\u5178\u6B3E\u5F0F\uFF0C\u7528\u6237\u70B9\u51FB\u6309\u94AE\u5F39\u51FA\u6587\u4EF6\u9009\u62E9\u6846\u3002"]],"en-US":[["p","Classic mode. File selection dialog pops up when upload button is clicked."]]},meta:{order:0,title:{"zh-CN":"\u70B9\u51FB\u4E0A\u4F20","en-US":"Upload by clicking"},filename:"components/upload/demo/basic.md",id:"components-upload-demo-basic"},toc:["ul",["li",["a",{className:"bisheng-toc-h2",href:"#zh-CN",title:"zh-CN"},"zh-CN"]],["li",["a",{className:"bisheng-toc-h2",href:"#en-US",title:"en-US"},"en-US"]]],highlightedCode:["pre",{lang:"tsx",highlighted:`import { UploadOutlined } from <span class="token string">'@ant-design/icons'</span><span class="token comment" spellcheck="true">;</span>
import type { UploadProps } from <span class="token string">'antd'</span><span class="token comment" spellcheck="true">;</span>
import { Button<span class="token punctuation">,</span> message<span class="token punctuation">,</span> Upload } from <span class="token string">'antd'</span><span class="token comment" spellcheck="true">;</span>
import React from <span class="token string">'react'</span><span class="token comment" spellcheck="true">;</span>

<span class="token keyword">const</span> props<span class="token punctuation">:</span> UploadProps <span class="token operator">=</span> {
  name<span class="token punctuation">:</span> <span class="token string">'file'</span><span class="token punctuation">,</span>
  action<span class="token punctuation">:</span> <span class="token string">'https://www.mocky.io/v2/5cc8019d300000980a055e76'</span><span class="token punctuation">,</span>
  headers<span class="token punctuation">:</span> {
    authorization<span class="token punctuation">:</span> <span class="token string">'authorization-text'</span><span class="token punctuation">,</span>
  }<span class="token punctuation">,</span>
  <span class="token function">onChange</span><span class="token punctuation">(</span>info<span class="token punctuation">)</span> {
    <span class="token keyword">if</span> <span class="token punctuation">(</span>info<span class="token punctuation">.</span>file<span class="token punctuation">.</span>status !<span class="token operator">==</span> <span class="token string">'uploading'</span><span class="token punctuation">)</span> {
      console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>info<span class="token punctuation">.</span>file<span class="token punctuation">,</span> info<span class="token punctuation">.</span>fileList<span class="token punctuation">)</span><span class="token comment" spellcheck="true">;</span>
    }
    <span class="token keyword">if</span> <span class="token punctuation">(</span>info<span class="token punctuation">.</span>file<span class="token punctuation">.</span>status <span class="token operator">==</span><span class="token operator">=</span> <span class="token string">'done'</span><span class="token punctuation">)</span> {
      message<span class="token punctuation">.</span><span class="token function">success</span><span class="token punctuation">(</span>\`\${info<span class="token punctuation">.</span>file<span class="token punctuation">.</span>name} file uploaded successfully\`<span class="token punctuation">)</span><span class="token comment" spellcheck="true">;</span>
    } <span class="token keyword">else</span> <span class="token keyword">if</span> <span class="token punctuation">(</span>info<span class="token punctuation">.</span>file<span class="token punctuation">.</span>status <span class="token operator">==</span><span class="token operator">=</span> <span class="token string">'error'</span><span class="token punctuation">)</span> {
      message<span class="token punctuation">.</span><span class="token function">error</span><span class="token punctuation">(</span>\`\${info<span class="token punctuation">.</span>file<span class="token punctuation">.</span>name} file upload failed<span class="token punctuation">.</span>\`<span class="token punctuation">)</span><span class="token comment" spellcheck="true">;</span>
    }
  }<span class="token punctuation">,</span>
}<span class="token comment" spellcheck="true">;</span>

<span class="token keyword">const</span> App<span class="token punctuation">:</span> React<span class="token punctuation">.</span>FC <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=</span><span class="token operator">></span> <span class="token punctuation">(</span>
  <span class="token operator">&lt;</span>Upload {<span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token punctuation">.</span>props}<span class="token operator">></span>
    <span class="token operator">&lt;</span>Button icon<span class="token operator">=</span>{<span class="token operator">&lt;</span>UploadOutlined <span class="token operator">/</span><span class="token operator">></span>}<span class="token operator">></span>Click <span class="token keyword">to</span> Upload<span class="token operator">&lt;</span><span class="token operator">/</span>Button<span class="token operator">></span>
  <span class="token operator">&lt;</span><span class="token operator">/</span>Upload<span class="token operator">></span>
<span class="token punctuation">)</span><span class="token comment" spellcheck="true">;</span>

export <span class="token keyword">default</span> App<span class="token comment" spellcheck="true">;</span>`}],highlightedCodes:{tsx:`<span class="token keyword">import</span> <span class="token punctuation">{</span> UploadOutlined <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">'@ant-design/icons'</span><span class="token punctuation">;</span>
<span class="token keyword">import</span> type <span class="token punctuation">{</span> UploadProps <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">'antd'</span><span class="token punctuation">;</span>
<span class="token keyword">import</span> <span class="token punctuation">{</span> Button<span class="token punctuation">,</span> message<span class="token punctuation">,</span> Upload <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">'antd'</span><span class="token punctuation">;</span>
<span class="token keyword">import</span> React <span class="token keyword">from</span> <span class="token string">'react'</span><span class="token punctuation">;</span>

<span class="token keyword">const</span> props<span class="token operator">:</span> UploadProps <span class="token operator">=</span> <span class="token punctuation">{</span>
  name<span class="token operator">:</span> <span class="token string">'file'</span><span class="token punctuation">,</span>
  action<span class="token operator">:</span> <span class="token string">'https://www.mocky.io/v2/5cc8019d300000980a055e76'</span><span class="token punctuation">,</span>
  headers<span class="token operator">:</span> <span class="token punctuation">{</span>
    authorization<span class="token operator">:</span> <span class="token string">'authorization-text'</span><span class="token punctuation">,</span>
  <span class="token punctuation">}</span><span class="token punctuation">,</span>
  <span class="token function">onChange</span><span class="token punctuation">(</span>info<span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">if</span> <span class="token punctuation">(</span>info<span class="token punctuation">.</span>file<span class="token punctuation">.</span>status <span class="token operator">!==</span> <span class="token string">'uploading'</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
      console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>info<span class="token punctuation">.</span>file<span class="token punctuation">,</span> info<span class="token punctuation">.</span>fileList<span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
    <span class="token keyword">if</span> <span class="token punctuation">(</span>info<span class="token punctuation">.</span>file<span class="token punctuation">.</span>status <span class="token operator">===</span> <span class="token string">'done'</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
      message<span class="token punctuation">.</span><span class="token function">success</span><span class="token punctuation">(</span><span class="token template-string"><span class="token template-punctuation string">\`</span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">\${</span>info<span class="token punctuation">.</span>file<span class="token punctuation">.</span>name<span class="token interpolation-punctuation punctuation">}</span></span><span class="token string"> file uploaded successfully</span><span class="token template-punctuation string">\`</span></span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token keyword">if</span> <span class="token punctuation">(</span>info<span class="token punctuation">.</span>file<span class="token punctuation">.</span>status <span class="token operator">===</span> <span class="token string">'error'</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
      message<span class="token punctuation">.</span><span class="token function">error</span><span class="token punctuation">(</span><span class="token template-string"><span class="token template-punctuation string">\`</span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">\${</span>info<span class="token punctuation">.</span>file<span class="token punctuation">.</span>name<span class="token interpolation-punctuation punctuation">}</span></span><span class="token string"> file upload failed.</span><span class="token template-punctuation string">\`</span></span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
  <span class="token punctuation">}</span><span class="token punctuation">,</span>
<span class="token punctuation">}</span><span class="token punctuation">;</span>

<span class="token keyword">const</span> App<span class="token operator">:</span> React<span class="token punctuation">.</span><span class="token function-variable function">FC</span> <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=></span> <span class="token punctuation">(</span>
  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span><span class="token class-name">Upload</span></span> <span class="token spread"><span class="token punctuation">{</span><span class="token operator">...</span>props<span class="token punctuation">}</span></span><span class="token punctuation">></span></span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span><span class="token class-name">Button</span></span> <span class="token attr-name">icon</span><span class="token script language-javascript"><span class="token script-punctuation punctuation">=</span><span class="token punctuation">{</span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span><span class="token class-name">UploadOutlined</span></span> <span class="token punctuation">/></span></span><span class="token punctuation">}</span></span><span class="token punctuation">></span></span>Click to Upload<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span><span class="token class-name">Button</span></span><span class="token punctuation">></span></span>
  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span><span class="token class-name">Upload</span></span><span class="token punctuation">></span></span>
<span class="token punctuation">)</span><span class="token punctuation">;</span>

<span class="token keyword">export</span> <span class="token keyword">default</span> App<span class="token punctuation">;</span>`,jsx:`<span class="token keyword">import</span> <span class="token punctuation">{</span> UploadOutlined <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">'@ant-design/icons'</span><span class="token punctuation">;</span>
<span class="token keyword">import</span> <span class="token punctuation">{</span> Button<span class="token punctuation">,</span> message<span class="token punctuation">,</span> Upload <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">'antd'</span><span class="token punctuation">;</span>
<span class="token keyword">import</span> React <span class="token keyword">from</span> <span class="token string">'react'</span><span class="token punctuation">;</span>
<span class="token keyword">const</span> props <span class="token operator">=</span> <span class="token punctuation">{</span>
  <span class="token literal-property property">name</span><span class="token operator">:</span> <span class="token string">'file'</span><span class="token punctuation">,</span>
  <span class="token literal-property property">action</span><span class="token operator">:</span> <span class="token string">'https://www.mocky.io/v2/5cc8019d300000980a055e76'</span><span class="token punctuation">,</span>
  <span class="token literal-property property">headers</span><span class="token operator">:</span> <span class="token punctuation">{</span>
    <span class="token literal-property property">authorization</span><span class="token operator">:</span> <span class="token string">'authorization-text'</span><span class="token punctuation">,</span>
  <span class="token punctuation">}</span><span class="token punctuation">,</span>
  <span class="token function">onChange</span><span class="token punctuation">(</span><span class="token parameter">info</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">if</span> <span class="token punctuation">(</span>info<span class="token punctuation">.</span>file<span class="token punctuation">.</span>status <span class="token operator">!==</span> <span class="token string">'uploading'</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
      console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>info<span class="token punctuation">.</span>file<span class="token punctuation">,</span> info<span class="token punctuation">.</span>fileList<span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
    <span class="token keyword">if</span> <span class="token punctuation">(</span>info<span class="token punctuation">.</span>file<span class="token punctuation">.</span>status <span class="token operator">===</span> <span class="token string">'done'</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
      message<span class="token punctuation">.</span><span class="token function">success</span><span class="token punctuation">(</span><span class="token template-string"><span class="token template-punctuation string">\`</span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">\${</span>info<span class="token punctuation">.</span>file<span class="token punctuation">.</span>name<span class="token interpolation-punctuation punctuation">}</span></span><span class="token string"> file uploaded successfully</span><span class="token template-punctuation string">\`</span></span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token keyword">if</span> <span class="token punctuation">(</span>info<span class="token punctuation">.</span>file<span class="token punctuation">.</span>status <span class="token operator">===</span> <span class="token string">'error'</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
      message<span class="token punctuation">.</span><span class="token function">error</span><span class="token punctuation">(</span><span class="token template-string"><span class="token template-punctuation string">\`</span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">\${</span>info<span class="token punctuation">.</span>file<span class="token punctuation">.</span>name<span class="token interpolation-punctuation punctuation">}</span></span><span class="token string"> file upload failed.</span><span class="token template-punctuation string">\`</span></span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
  <span class="token punctuation">}</span><span class="token punctuation">,</span>
<span class="token punctuation">}</span><span class="token punctuation">;</span>
<span class="token keyword">const</span> <span class="token function-variable function">App</span> <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=></span> <span class="token punctuation">(</span>
  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span><span class="token class-name">Upload</span></span> <span class="token spread"><span class="token punctuation">{</span><span class="token operator">...</span>props<span class="token punctuation">}</span></span><span class="token punctuation">></span></span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span><span class="token class-name">Button</span></span> <span class="token attr-name">icon</span><span class="token script language-javascript"><span class="token script-punctuation punctuation">=</span><span class="token punctuation">{</span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span><span class="token class-name">UploadOutlined</span></span> <span class="token punctuation">/></span></span><span class="token punctuation">}</span></span><span class="token punctuation">></span></span>Click to Upload<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span><span class="token class-name">Button</span></span><span class="token punctuation">></span></span>
  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span><span class="token class-name">Upload</span></span><span class="token punctuation">></span></span>
<span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token keyword">export</span> <span class="token keyword">default</span> App<span class="token punctuation">;</span>
`},preview:function(){var N=g(0),H=g(47),R=g(61),F=g(12),O=S(g(0));function S(C){return C&&C.__esModule?C:{default:C}}var D={name:"file",action:"https://www.mocky.io/v2/5cc8019d300000980a055e76",headers:{authorization:"authorization-text"},onChange:function(W){W.file.status!=="uploading"&&console.log(W.file,W.fileList),W.file.status==="done"?F.message.success("".concat(W.file.name," file uploaded successfully")):W.file.status==="error"&&F.message.error("".concat(W.file.name," file upload failed."))}},V=function(){return O.default.createElement(F.Upload,D,O.default.createElement(F.Button,{icon:O.default.createElement(R.UploadOutlined,null)},"Click to Upload"))},M=V;return N.createElement(M)}}},4795:function(Y,kn,g){Y.exports={content:{"zh-CN":[["p","\u914D\u5408 ",["a",{title:null,href:"https://github.com/nanxiaobei/antd-img-crop"},"antd-img-crop"]," \u5B9E\u73B0\u4E0A\u4F20\u524D\u88C1\u5207\u56FE\u7247\u3002"]],"en-US":[["p","Use ",["a",{title:null,href:"https://github.com/nanxiaobei/antd-img-crop"},"antd-img-crop"]," to crop image before uploading."]]},meta:{order:14,title:{"zh-CN":"\u4E0A\u4F20\u524D\u88C1\u5207\u56FE\u7247","en-US":"Crop image before uploading"},filename:"components/upload/demo/crop-image.md",id:"components-upload-demo-crop-image"},toc:["ul",["li",["a",{className:"bisheng-toc-h2",href:"#zh-CN",title:"zh-CN"},"zh-CN"]],["li",["a",{className:"bisheng-toc-h2",href:"#en-US",title:"en-US"},"en-US"]]],highlightedCode:["pre",{lang:"tsx",highlighted:`import { Upload } from <span class="token string">'antd'</span><span class="token comment" spellcheck="true">;</span>
import ImgCrop from <span class="token string">'antd-img-crop'</span><span class="token comment" spellcheck="true">;</span>
import type { RcFile<span class="token punctuation">,</span> UploadFile<span class="token punctuation">,</span> UploadProps } from <span class="token string">'antd/es/upload/interface'</span><span class="token comment" spellcheck="true">;</span>
import React<span class="token punctuation">,</span> { useState } from <span class="token string">'react'</span><span class="token comment" spellcheck="true">;</span>

<span class="token keyword">const</span> App<span class="token punctuation">:</span> React<span class="token punctuation">.</span>FC <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=</span><span class="token operator">></span> {
  <span class="token keyword">const</span> <span class="token punctuation">[</span>fileList<span class="token punctuation">,</span> setFileList<span class="token punctuation">]</span> <span class="token operator">=</span> useState<span class="token operator">&lt;</span>UploadFile<span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token operator">></span><span class="token punctuation">(</span><span class="token punctuation">[</span>
    {
      uid<span class="token punctuation">:</span> <span class="token string">'-1'</span><span class="token punctuation">,</span>
      name<span class="token punctuation">:</span> <span class="token string">'image.png'</span><span class="token punctuation">,</span>
      status<span class="token punctuation">:</span> <span class="token string">'done'</span><span class="token punctuation">,</span>
      url<span class="token punctuation">:</span> <span class="token string">'https://zos.alipayobjects.com/rmsportal/jkjgkEfvpUPVyRjUImniVslZfWPnJuuZ.png'</span><span class="token punctuation">,</span>
    }<span class="token punctuation">,</span>
  <span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token comment" spellcheck="true">;</span>

  <span class="token keyword">const</span> onChange<span class="token punctuation">:</span> UploadProps<span class="token punctuation">[</span><span class="token string">'onChange'</span><span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token punctuation">(</span>{ fileList<span class="token punctuation">:</span> newFileList }<span class="token punctuation">)</span> <span class="token operator">=</span><span class="token operator">></span> {
    <span class="token function">setFileList</span><span class="token punctuation">(</span>newFileList<span class="token punctuation">)</span><span class="token comment" spellcheck="true">;</span>
  }<span class="token comment" spellcheck="true">;</span>

  <span class="token keyword">const</span> onPreview <span class="token operator">=</span> async <span class="token punctuation">(</span>file<span class="token punctuation">:</span> UploadFile<span class="token punctuation">)</span> <span class="token operator">=</span><span class="token operator">></span> {
    let src <span class="token operator">=</span> file<span class="token punctuation">.</span>url as string<span class="token comment" spellcheck="true">;</span>
    <span class="token keyword">if</span> <span class="token punctuation">(</span>!src<span class="token punctuation">)</span> {
      src <span class="token operator">=</span> await new <span class="token function">Promise</span><span class="token punctuation">(</span>resolve <span class="token operator">=</span><span class="token operator">></span> {
        <span class="token keyword">const</span> reader <span class="token operator">=</span> new <span class="token function">FileReader</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token comment" spellcheck="true">;</span>
        reader<span class="token punctuation">.</span><span class="token function">readAsDataURL</span><span class="token punctuation">(</span>file<span class="token punctuation">.</span>originFileObj as RcFile<span class="token punctuation">)</span><span class="token comment" spellcheck="true">;</span>
        reader<span class="token punctuation">.</span>onload <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=</span><span class="token operator">></span> <span class="token function">resolve</span><span class="token punctuation">(</span>reader<span class="token punctuation">.</span>result as string<span class="token punctuation">)</span><span class="token comment" spellcheck="true">;</span>
      }<span class="token punctuation">)</span><span class="token comment" spellcheck="true">;</span>
    }
    <span class="token keyword">const</span> image <span class="token operator">=</span> new <span class="token function">Image</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token comment" spellcheck="true">;</span>
    image<span class="token punctuation">.</span>src <span class="token operator">=</span> src<span class="token comment" spellcheck="true">;</span>
    <span class="token keyword">const</span> imgWindow <span class="token operator">=</span> window<span class="token punctuation">.</span><span class="token function">open</span><span class="token punctuation">(</span>src<span class="token punctuation">)</span><span class="token comment" spellcheck="true">;</span>
    imgWindow<span class="token operator">?</span><span class="token punctuation">.</span>document<span class="token punctuation">.</span><span class="token function">write</span><span class="token punctuation">(</span>image<span class="token punctuation">.</span>outerHTML<span class="token punctuation">)</span><span class="token comment" spellcheck="true">;</span>
  }<span class="token comment" spellcheck="true">;</span>

  return <span class="token punctuation">(</span>
    <span class="token operator">&lt;</span>ImgCrop rotate<span class="token operator">></span>
      <span class="token operator">&lt;</span>Upload
        action<span class="token operator">=</span><span class="token string">"https://www.mocky.io/v2/5cc8019d300000980a055e76"</span>
        listType<span class="token operator">=</span><span class="token string">"picture-card"</span>
        fileList<span class="token operator">=</span>{fileList}
        onChange<span class="token operator">=</span>{onChange}
        onPreview<span class="token operator">=</span>{onPreview}
      <span class="token operator">></span>
        {fileList<span class="token punctuation">.</span>length <span class="token operator">&lt;</span> <span class="token number">5</span> <span class="token operator">&amp;</span><span class="token operator">&amp;</span> <span class="token string">'+ Upload'</span>}
      <span class="token operator">&lt;</span><span class="token operator">/</span>Upload<span class="token operator">></span>
    <span class="token operator">&lt;</span><span class="token operator">/</span>ImgCrop<span class="token operator">></span>
  <span class="token punctuation">)</span><span class="token comment" spellcheck="true">;</span>
}<span class="token comment" spellcheck="true">;</span>

export <span class="token keyword">default</span> App<span class="token comment" spellcheck="true">;</span>`}],highlightedCodes:{tsx:`<span class="token keyword">import</span> <span class="token punctuation">{</span> Upload <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">'antd'</span><span class="token punctuation">;</span>
<span class="token keyword">import</span> ImgCrop <span class="token keyword">from</span> <span class="token string">'antd-img-crop'</span><span class="token punctuation">;</span>
<span class="token keyword">import</span> type <span class="token punctuation">{</span> RcFile<span class="token punctuation">,</span> UploadFile<span class="token punctuation">,</span> UploadProps <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">'antd/es/upload/interface'</span><span class="token punctuation">;</span>
<span class="token keyword">import</span> React<span class="token punctuation">,</span> <span class="token punctuation">{</span> useState <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">'react'</span><span class="token punctuation">;</span>

<span class="token keyword">const</span> App<span class="token operator">:</span> React<span class="token punctuation">.</span><span class="token function-variable function">FC</span> <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=></span> <span class="token punctuation">{</span>
  <span class="token keyword">const</span> <span class="token punctuation">[</span>fileList<span class="token punctuation">,</span> setFileList<span class="token punctuation">]</span> <span class="token operator">=</span> useState<span class="token operator">&lt;</span>UploadFile<span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token operator">></span><span class="token punctuation">(</span><span class="token punctuation">[</span>
    <span class="token punctuation">{</span>
      uid<span class="token operator">:</span> <span class="token string">'-1'</span><span class="token punctuation">,</span>
      name<span class="token operator">:</span> <span class="token string">'image.png'</span><span class="token punctuation">,</span>
      status<span class="token operator">:</span> <span class="token string">'done'</span><span class="token punctuation">,</span>
      url<span class="token operator">:</span> <span class="token string">'https://zos.alipayobjects.com/rmsportal/jkjgkEfvpUPVyRjUImniVslZfWPnJuuZ.png'</span><span class="token punctuation">,</span>
    <span class="token punctuation">}</span><span class="token punctuation">,</span>
  <span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

  <span class="token keyword">const</span> onChange<span class="token operator">:</span> UploadProps<span class="token punctuation">[</span><span class="token string">'onChange'</span><span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token punctuation">{</span> fileList<span class="token operator">:</span> newFileList <span class="token punctuation">}</span><span class="token punctuation">)</span> <span class="token operator">=></span> <span class="token punctuation">{</span>
    <span class="token function">setFileList</span><span class="token punctuation">(</span>newFileList<span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token punctuation">}</span><span class="token punctuation">;</span>

  <span class="token keyword">const</span> <span class="token function-variable function">onPreview</span> <span class="token operator">=</span> <span class="token keyword">async</span> <span class="token punctuation">(</span>file<span class="token operator">:</span> UploadFile<span class="token punctuation">)</span> <span class="token operator">=></span> <span class="token punctuation">{</span>
    <span class="token keyword">let</span> src <span class="token operator">=</span> file<span class="token punctuation">.</span>url <span class="token keyword">as</span> string<span class="token punctuation">;</span>
    <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token operator">!</span>src<span class="token punctuation">)</span> <span class="token punctuation">{</span>
      src <span class="token operator">=</span> <span class="token keyword">await</span> <span class="token keyword">new</span> <span class="token class-name">Promise</span><span class="token punctuation">(</span>resolve <span class="token operator">=></span> <span class="token punctuation">{</span>
        <span class="token keyword">const</span> reader <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">FileReader</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        reader<span class="token punctuation">.</span><span class="token function">readAsDataURL</span><span class="token punctuation">(</span>file<span class="token punctuation">.</span>originFileObj <span class="token keyword">as</span> RcFile<span class="token punctuation">)</span><span class="token punctuation">;</span>
        reader<span class="token punctuation">.</span><span class="token function-variable function">onload</span> <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=></span> <span class="token function">resolve</span><span class="token punctuation">(</span>reader<span class="token punctuation">.</span>result <span class="token keyword">as</span> string<span class="token punctuation">)</span><span class="token punctuation">;</span>
      <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
    <span class="token keyword">const</span> image <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Image</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    image<span class="token punctuation">.</span>src <span class="token operator">=</span> src<span class="token punctuation">;</span>
    <span class="token keyword">const</span> imgWindow <span class="token operator">=</span> window<span class="token punctuation">.</span><span class="token function">open</span><span class="token punctuation">(</span>src<span class="token punctuation">)</span><span class="token punctuation">;</span>
    imgWindow<span class="token operator">?.</span>document<span class="token punctuation">.</span><span class="token function">write</span><span class="token punctuation">(</span>image<span class="token punctuation">.</span>outerHTML<span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token punctuation">}</span><span class="token punctuation">;</span>

  <span class="token keyword">return</span> <span class="token punctuation">(</span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span><span class="token class-name">ImgCrop</span></span> <span class="token attr-name">rotate</span><span class="token punctuation">></span></span>
      <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span><span class="token class-name">Upload</span></span>
        <span class="token attr-name">action</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>https://www.mocky.io/v2/5cc8019d300000980a055e76<span class="token punctuation">"</span></span>
        <span class="token attr-name">listType</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>picture-card<span class="token punctuation">"</span></span>
        <span class="token attr-name">fileList</span><span class="token script language-javascript"><span class="token script-punctuation punctuation">=</span><span class="token punctuation">{</span>fileList<span class="token punctuation">}</span></span>
        <span class="token attr-name">onChange</span><span class="token script language-javascript"><span class="token script-punctuation punctuation">=</span><span class="token punctuation">{</span>onChange<span class="token punctuation">}</span></span>
        <span class="token attr-name">onPreview</span><span class="token script language-javascript"><span class="token script-punctuation punctuation">=</span><span class="token punctuation">{</span>onPreview<span class="token punctuation">}</span></span>
      <span class="token punctuation">></span></span>
        <span class="token punctuation">{</span>fileList<span class="token punctuation">.</span>length <span class="token operator">&lt;</span> <span class="token number">5</span> <span class="token operator">&amp;&amp;</span> <span class="token string">'+ Upload'</span><span class="token punctuation">}</span>
      <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span><span class="token class-name">Upload</span></span><span class="token punctuation">></span></span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span><span class="token class-name">ImgCrop</span></span><span class="token punctuation">></span></span>
  <span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span><span class="token punctuation">;</span>

<span class="token keyword">export</span> <span class="token keyword">default</span> App<span class="token punctuation">;</span>`,jsx:`<span class="token keyword">import</span> <span class="token punctuation">{</span> Upload <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">'antd'</span><span class="token punctuation">;</span>
<span class="token keyword">import</span> ImgCrop <span class="token keyword">from</span> <span class="token string">'antd-img-crop'</span><span class="token punctuation">;</span>
<span class="token keyword">import</span> React<span class="token punctuation">,</span> <span class="token punctuation">{</span> useState <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">'react'</span><span class="token punctuation">;</span>
<span class="token keyword">const</span> <span class="token function-variable function">App</span> <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=></span> <span class="token punctuation">{</span>
  <span class="token keyword">const</span> <span class="token punctuation">[</span>fileList<span class="token punctuation">,</span> setFileList<span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token function">useState</span><span class="token punctuation">(</span><span class="token punctuation">[</span>
    <span class="token punctuation">{</span>
      <span class="token literal-property property">uid</span><span class="token operator">:</span> <span class="token string">'-1'</span><span class="token punctuation">,</span>
      <span class="token literal-property property">name</span><span class="token operator">:</span> <span class="token string">'image.png'</span><span class="token punctuation">,</span>
      <span class="token literal-property property">status</span><span class="token operator">:</span> <span class="token string">'done'</span><span class="token punctuation">,</span>
      <span class="token literal-property property">url</span><span class="token operator">:</span> <span class="token string">'https://zos.alipayobjects.com/rmsportal/jkjgkEfvpUPVyRjUImniVslZfWPnJuuZ.png'</span><span class="token punctuation">,</span>
    <span class="token punctuation">}</span><span class="token punctuation">,</span>
  <span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token keyword">const</span> <span class="token function-variable function">onChange</span> <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token parameter"><span class="token punctuation">{</span> <span class="token literal-property property">fileList</span><span class="token operator">:</span> newFileList <span class="token punctuation">}</span></span><span class="token punctuation">)</span> <span class="token operator">=></span> <span class="token punctuation">{</span>
    <span class="token function">setFileList</span><span class="token punctuation">(</span>newFileList<span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token punctuation">}</span><span class="token punctuation">;</span>
  <span class="token keyword">const</span> <span class="token function-variable function">onPreview</span> <span class="token operator">=</span> <span class="token keyword">async</span> <span class="token punctuation">(</span><span class="token parameter">file</span><span class="token punctuation">)</span> <span class="token operator">=></span> <span class="token punctuation">{</span>
    <span class="token keyword">let</span> src <span class="token operator">=</span> file<span class="token punctuation">.</span>url<span class="token punctuation">;</span>
    <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token operator">!</span>src<span class="token punctuation">)</span> <span class="token punctuation">{</span>
      src <span class="token operator">=</span> <span class="token keyword">await</span> <span class="token keyword">new</span> <span class="token class-name">Promise</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token parameter">resolve</span><span class="token punctuation">)</span> <span class="token operator">=></span> <span class="token punctuation">{</span>
        <span class="token keyword">const</span> reader <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">FileReader</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        reader<span class="token punctuation">.</span><span class="token function">readAsDataURL</span><span class="token punctuation">(</span>file<span class="token punctuation">.</span>originFileObj<span class="token punctuation">)</span><span class="token punctuation">;</span>
        reader<span class="token punctuation">.</span><span class="token function-variable function">onload</span> <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=></span> <span class="token function">resolve</span><span class="token punctuation">(</span>reader<span class="token punctuation">.</span>result<span class="token punctuation">)</span><span class="token punctuation">;</span>
      <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
    <span class="token keyword">const</span> image <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Image</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    image<span class="token punctuation">.</span>src <span class="token operator">=</span> src<span class="token punctuation">;</span>
    <span class="token keyword">const</span> imgWindow <span class="token operator">=</span> window<span class="token punctuation">.</span><span class="token function">open</span><span class="token punctuation">(</span>src<span class="token punctuation">)</span><span class="token punctuation">;</span>
    imgWindow<span class="token operator">?.</span>document<span class="token punctuation">.</span><span class="token function">write</span><span class="token punctuation">(</span>image<span class="token punctuation">.</span>outerHTML<span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token punctuation">}</span><span class="token punctuation">;</span>
  <span class="token keyword">return</span> <span class="token punctuation">(</span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span><span class="token class-name">ImgCrop</span></span> <span class="token attr-name">rotate</span><span class="token punctuation">></span></span>
      <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span><span class="token class-name">Upload</span></span>
        <span class="token attr-name">action</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>https://www.mocky.io/v2/5cc8019d300000980a055e76<span class="token punctuation">"</span></span>
        <span class="token attr-name">listType</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>picture-card<span class="token punctuation">"</span></span>
        <span class="token attr-name">fileList</span><span class="token script language-javascript"><span class="token script-punctuation punctuation">=</span><span class="token punctuation">{</span>fileList<span class="token punctuation">}</span></span>
        <span class="token attr-name">onChange</span><span class="token script language-javascript"><span class="token script-punctuation punctuation">=</span><span class="token punctuation">{</span>onChange<span class="token punctuation">}</span></span>
        <span class="token attr-name">onPreview</span><span class="token script language-javascript"><span class="token script-punctuation punctuation">=</span><span class="token punctuation">{</span>onPreview<span class="token punctuation">}</span></span>
      <span class="token punctuation">></span></span>
        <span class="token punctuation">{</span>fileList<span class="token punctuation">.</span>length <span class="token operator">&lt;</span> <span class="token number">5</span> <span class="token operator">&amp;&amp;</span> <span class="token string">'+ Upload'</span><span class="token punctuation">}</span>
      <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span><span class="token class-name">Upload</span></span><span class="token punctuation">></span></span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span><span class="token class-name">ImgCrop</span></span><span class="token punctuation">></span></span>
  <span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span><span class="token punctuation">;</span>
<span class="token keyword">export</span> <span class="token keyword">default</span> App<span class="token punctuation">;</span>
`},preview:function(){var N=g(0),H=g(47);function R(t){return R=typeof Symbol=="function"&&typeof Symbol.iterator=="symbol"?function(a){return typeof a}:function(a){return a&&typeof Symbol=="function"&&a.constructor===Symbol&&a!==Symbol.prototype?"symbol":typeof a},R(t)}var F=g(12),O=M(g(4863)),S=V(g(0));function D(t){if(typeof WeakMap!="function")return null;var a=new WeakMap,s=new WeakMap;return(D=function(e){return e?s:a})(t)}function V(t,a){if(!a&&t&&t.__esModule)return t;if(t===null||R(t)!=="object"&&typeof t!="function")return{default:t};var s=D(a);if(s&&s.has(t))return s.get(t);var u={},e=Object.defineProperty&&Object.getOwnPropertyDescriptor;for(var d in t)if(d!=="default"&&Object.prototype.hasOwnProperty.call(t,d)){var m=e?Object.getOwnPropertyDescriptor(t,d):null;m&&(m.get||m.set)?Object.defineProperty(u,d,m):u[d]=t[d]}return u.default=t,s&&s.set(t,u),u}function M(t){return t&&t.__esModule?t:{default:t}}function C(){"use strict";/*! regenerator-runtime -- Copyright (c) 2014-present, Facebook, Inc. -- license (MIT): https://github.com/facebook/regenerator/blob/main/LICENSE */C=function(){return t};var t={},a=Object.prototype,s=a.hasOwnProperty,u=Object.defineProperty||function(i,p,o){i[p]=o.value},e=typeof Symbol=="function"?Symbol:{},d=e.iterator||"@@iterator",m=e.asyncIterator||"@@asyncIterator",b=e.toStringTag||"@@toStringTag";function U(i,p,o){return Object.defineProperty(i,p,{value:o,enumerable:!0,configurable:!0,writable:!0}),i[p]}try{U({},"")}catch(i){U=function(o,h,k){return o[h]=k}}function E(i,p,o,h){var k=p&&p.prototype instanceof Z?p:Z,c=Object.create(k.prototype),y=new On(h||[]);return u(c,"_invoke",{value:ln(i,o,y)}),c}function L(i,p,o){try{return{type:"normal",arg:i.call(p,o)}}catch(h){return{type:"throw",arg:h}}}t.wrap=E;var I={};function Z(){}function cn(){}function K(){}var rn={};U(rn,d,function(){return this});var yn=Object.getPrototypeOf,wn=yn&&yn(yn(vn([])));wn&&wn!==a&&s.call(wn,d)&&(rn=wn);var on=K.prototype=Z.prototype=Object.create(rn);function fn(i){["next","throw","return"].forEach(function(p){U(i,p,function(o){return this._invoke(p,o)})})}function X(i,p){function o(k,c,y,P){var j=L(i[k],i,c);if(j.type!=="throw"){var B=j.arg,q=B.value;return q&&R(q)=="object"&&s.call(q,"__await")?p.resolve(q.__await).then(function(tn){o("next",tn,y,P)},function(tn){o("throw",tn,y,P)}):p.resolve(q).then(function(tn){B.value=tn,y(B)},function(tn){return o("throw",tn,y,P)})}P(j.arg)}var h;u(this,"_invoke",{value:function(c,y){function P(){return new p(function(j,B){o(c,y,j,B)})}return h=h?h.then(P,P):P()}})}function ln(i,p,o){var h="suspendedStart";return function(k,c){if(h==="executing")throw new Error("Generator is already running");if(h==="completed"){if(k==="throw")throw c;return Tn()}for(o.method=k,o.arg=c;;){var y=o.delegate;if(y){var P=en(y,o);if(P){if(P===I)continue;return P}}if(o.method==="next")o.sent=o._sent=o.arg;else if(o.method==="throw"){if(h==="suspendedStart")throw h="completed",o.arg;o.dispatchException(o.arg)}else o.method==="return"&&o.abrupt("return",o.arg);h="executing";var j=L(i,p,o);if(j.type==="normal"){if(h=o.done?"completed":"suspendedYield",j.arg===I)continue;return{value:j.arg,done:o.done}}j.type==="throw"&&(h="completed",o.method="throw",o.arg=j.arg)}}}function en(i,p){var o=p.method,h=i.iterator[o];if(h===void 0)return p.delegate=null,o==="throw"&&i.iterator.return&&(p.method="return",p.arg=void 0,en(i,p),p.method==="throw")||o!=="return"&&(p.method="throw",p.arg=new TypeError("The iterator does not provide a '"+o+"' method")),I;var k=L(h,i.iterator,p.arg);if(k.type==="throw")return p.method="throw",p.arg=k.arg,p.delegate=null,I;var c=k.arg;return c?c.done?(p[i.resultName]=c.value,p.next=i.nextLoc,p.method!=="return"&&(p.method="next",p.arg=void 0),p.delegate=null,I):c:(p.method="throw",p.arg=new TypeError("iterator result is not an object"),p.delegate=null,I)}function an(i){var p={tryLoc:i[0]};1 in i&&(p.catchLoc=i[1]),2 in i&&(p.finallyLoc=i[2],p.afterLoc=i[3]),this.tryEntries.push(p)}function Pn(i){var p=i.completion||{};p.type="normal",delete p.arg,i.completion=p}function On(i){this.tryEntries=[{tryLoc:"root"}],i.forEach(an,this),this.reset(!0)}function vn(i){if(i){var p=i[d];if(p)return p.call(i);if(typeof i.next=="function")return i;if(!isNaN(i.length)){var o=-1,h=function k(){for(;++o<i.length;)if(s.call(i,o))return k.value=i[o],k.done=!1,k;return k.value=void 0,k.done=!0,k};return h.next=h}}return{next:Tn}}function Tn(){return{value:void 0,done:!0}}return cn.prototype=K,u(on,"constructor",{value:K,configurable:!0}),u(K,"constructor",{value:cn,configurable:!0}),cn.displayName=U(K,b,"GeneratorFunction"),t.isGeneratorFunction=function(i){var p=typeof i=="function"&&i.constructor;return!!p&&(p===cn||(p.displayName||p.name)==="GeneratorFunction")},t.mark=function(i){return Object.setPrototypeOf?Object.setPrototypeOf(i,K):(i.__proto__=K,U(i,b,"GeneratorFunction")),i.prototype=Object.create(on),i},t.awrap=function(i){return{__await:i}},fn(X.prototype),U(X.prototype,m,function(){return this}),t.AsyncIterator=X,t.async=function(i,p,o,h,k){k===void 0&&(k=Promise);var c=new X(E(i,p,o,h),k);return t.isGeneratorFunction(p)?c:c.next().then(function(y){return y.done?y.value:c.next()})},fn(on),U(on,b,"Generator"),U(on,d,function(){return this}),U(on,"toString",function(){return"[object Generator]"}),t.keys=function(i){var p=Object(i),o=[];for(var h in p)o.push(h);return o.reverse(),function k(){for(;o.length;){var c=o.pop();if(c in p)return k.value=c,k.done=!1,k}return k.done=!0,k}},t.values=vn,On.prototype={constructor:On,reset:function(p){if(this.prev=0,this.next=0,this.sent=this._sent=void 0,this.done=!1,this.delegate=null,this.method="next",this.arg=void 0,this.tryEntries.forEach(Pn),!p)for(var o in this)o.charAt(0)==="t"&&s.call(this,o)&&!isNaN(+o.slice(1))&&(this[o]=void 0)},stop:function(){this.done=!0;var p=this.tryEntries[0].completion;if(p.type==="throw")throw p.arg;return this.rval},dispatchException:function(p){if(this.done)throw p;var o=this;function h(B,q){return y.type="throw",y.arg=p,o.next=B,q&&(o.method="next",o.arg=void 0),!!q}for(var k=this.tryEntries.length-1;k>=0;--k){var c=this.tryEntries[k],y=c.completion;if(c.tryLoc==="root")return h("end");if(c.tryLoc<=this.prev){var P=s.call(c,"catchLoc"),j=s.call(c,"finallyLoc");if(P&&j){if(this.prev<c.catchLoc)return h(c.catchLoc,!0);if(this.prev<c.finallyLoc)return h(c.finallyLoc)}else if(P){if(this.prev<c.catchLoc)return h(c.catchLoc,!0)}else{if(!j)throw new Error("try statement without catch or finally");if(this.prev<c.finallyLoc)return h(c.finallyLoc)}}}},abrupt:function(p,o){for(var h=this.tryEntries.length-1;h>=0;--h){var k=this.tryEntries[h];if(k.tryLoc<=this.prev&&s.call(k,"finallyLoc")&&this.prev<k.finallyLoc){var c=k;break}}c&&(p==="break"||p==="continue")&&c.tryLoc<=o&&o<=c.finallyLoc&&(c=null);var y=c?c.completion:{};return y.type=p,y.arg=o,c?(this.method="next",this.next=c.finallyLoc,I):this.complete(y)},complete:function(p,o){if(p.type==="throw")throw p.arg;return p.type==="break"||p.type==="continue"?this.next=p.arg:p.type==="return"?(this.rval=this.arg=p.arg,this.method="return",this.next="end"):p.type==="normal"&&o&&(this.next=o),I},finish:function(p){for(var o=this.tryEntries.length-1;o>=0;--o){var h=this.tryEntries[o];if(h.finallyLoc===p)return this.complete(h.completion,h.afterLoc),Pn(h),I}},catch:function(p){for(var o=this.tryEntries.length-1;o>=0;--o){var h=this.tryEntries[o];if(h.tryLoc===p){var k=h.completion;if(k.type==="throw"){var c=k.arg;Pn(h)}return c}}throw new Error("illegal catch attempt")},delegateYield:function(p,o,h){return this.delegate={iterator:vn(p),resultName:o,nextLoc:h},this.method==="next"&&(this.arg=void 0),I}},t}function W(t,a,s,u,e,d,m){try{var b=t[d](m),U=b.value}catch(E){s(E);return}b.done?a(U):Promise.resolve(U).then(u,e)}function $(t){return function(){var a=this,s=arguments;return new Promise(function(u,e){var d=t.apply(a,s);function m(U){W(d,u,e,m,b,"next",U)}function b(U){W(d,u,e,m,b,"throw",U)}m(void 0)})}}function nn(t,a){return dn(t)||pn(t,a)||_(t,a)||hn()}function hn(){throw new TypeError(`Invalid attempt to destructure non-iterable instance.
In order to be iterable, non-array objects must have a [Symbol.iterator]() method.`)}function _(t,a){if(t){if(typeof t=="string")return mn(t,a);var s=Object.prototype.toString.call(t).slice(8,-1);if(s==="Object"&&t.constructor&&(s=t.constructor.name),s==="Map"||s==="Set")return Array.from(t);if(s==="Arguments"||/^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(s))return mn(t,a)}}function mn(t,a){(a==null||a>t.length)&&(a=t.length);for(var s=0,u=new Array(a);s<a;s++)u[s]=t[s];return u}function pn(t,a){var s=t==null?null:typeof Symbol!="undefined"&&t[Symbol.iterator]||t["@@iterator"];if(s!=null){var u,e,d,m,b=[],U=!0,E=!1;try{if(d=(s=s.call(t)).next,a===0){if(Object(s)!==s)return;U=!1}else for(;!(U=(u=d.call(s)).done)&&(b.push(u.value),b.length!==a);U=!0);}catch(L){E=!0,e=L}finally{try{if(!U&&s.return!=null&&(m=s.return(),Object(m)!==m))return}finally{if(E)throw e}}return b}}function dn(t){if(Array.isArray(t))return t}var z=function(){var a=(0,S.useState)([{uid:"-1",name:"image.png",status:"done",url:"https://zos.alipayobjects.com/rmsportal/jkjgkEfvpUPVyRjUImniVslZfWPnJuuZ.png"}]),s=nn(a,2),u=s[0],e=s[1],d=function(U){var E=U.fileList;e(E)},m=function(){var b=$(C().mark(function U(E){var L,I,Z;return C().wrap(function(K){for(;;)switch(K.prev=K.next){case 0:if(L=E.url,L){K.next=5;break}return K.next=4,new Promise(function(rn){var yn=new FileReader;yn.readAsDataURL(E.originFileObj),yn.onload=function(){return rn(yn.result)}});case 4:L=K.sent;case 5:I=new Image,I.src=L,Z=window.open(L),Z==null||Z.document.write(I.outerHTML);case 9:case"end":return K.stop()}},U)}));return function(E){return b.apply(this,arguments)}}();return S.default.createElement(O.default,{rotate:!0},S.default.createElement(F.Upload,{action:"https://www.mocky.io/v2/5cc8019d300000980a055e76",listType:"picture-card",fileList:u,onChange:d,onPreview:m},u.length<5&&"+ Upload"))},J=z;return N.createElement(J)}}},4796:function(Y,kn,g){Y.exports=g(4797)},4797:function(Y,kn,g){"use strict";var sn=g(4798),N=g(4799),H=10,R=40,F=800;function O(S){var D=0,V=0,M=0,C=0;return"detail"in S&&(V=S.detail),"wheelDelta"in S&&(V=-S.wheelDelta/120),"wheelDeltaY"in S&&(V=-S.wheelDeltaY/120),"wheelDeltaX"in S&&(D=-S.wheelDeltaX/120),"axis"in S&&S.axis===S.HORIZONTAL_AXIS&&(D=V,V=0),M=D*H,C=V*H,"deltaY"in S&&(C=S.deltaY),"deltaX"in S&&(M=S.deltaX),(M||C)&&S.deltaMode&&(S.deltaMode==1?(M*=R,C*=R):(M*=F,C*=F)),M&&!D&&(D=M<1?-1:1),C&&!V&&(V=C<1?-1:1),{spinX:D,spinY:V,pixelX:M,pixelY:C}}O.getEventType=function(){return sn.firefox()?"DOMMouseScroll":N("wheel")?"wheel":"mousewheel"},Y.exports=O},4798:function(Y,kn){var g=!1,sn,N,H,R,F,O,S,D,V,M,C,W,$,nn,hn;function _(){if(!g){g=!0;var pn=navigator.userAgent,dn=/(?:MSIE.(\d+\.\d+))|(?:(?:Firefox|GranParadiso|Iceweasel).(\d+\.\d+))|(?:Opera(?:.+Version.|.)(\d+\.\d+))|(?:AppleWebKit.(\d+(?:\.\d+)?))|(?:Trident\/\d+\.\d+.*rv:(\d+\.\d+))/.exec(pn),z=/(Mac OS X)|(Windows)|(Linux)/.exec(pn);if(W=/\b(iPhone|iP[ao]d)/.exec(pn),$=/\b(iP[ao]d)/.exec(pn),M=/Android/i.exec(pn),nn=/FBAN\/\w+;/i.exec(pn),hn=/Mobile/i.exec(pn),C=!!/Win64/.exec(pn),dn){sn=dn[1]?parseFloat(dn[1]):dn[5]?parseFloat(dn[5]):NaN,sn&&document&&document.documentMode&&(sn=document.documentMode);var J=/(?:Trident\/(\d+.\d+))/.exec(pn);O=J?parseFloat(J[1])+4:sn,N=dn[2]?parseFloat(dn[2]):NaN,H=dn[3]?parseFloat(dn[3]):NaN,R=dn[4]?parseFloat(dn[4]):NaN,R?(dn=/(?:Chrome\/(\d+\.\d+))/.exec(pn),F=dn&&dn[1]?parseFloat(dn[1]):NaN):F=NaN}else sn=N=H=F=R=NaN;if(z){if(z[1]){var t=/(?:Mac OS X (\d+(?:[._]\d+)?))/.exec(pn);S=t?parseFloat(t[1].replace("_",".")):!0}else S=!1;D=!!z[2],V=!!z[3]}else S=D=V=!1}}var mn={ie:function(){return _()||sn},ieCompatibilityMode:function(){return _()||O>sn},ie64:function(){return mn.ie()&&C},firefox:function(){return _()||N},opera:function(){return _()||H},webkit:function(){return _()||R},safari:function(){return mn.webkit()},chrome:function(){return _()||F},windows:function(){return _()||D},osx:function(){return _()||S},linux:function(){return _()||V},iphone:function(){return _()||W},mobile:function(){return _()||W||$||M||hn},nativeApp:function(){return _()||nn},android:function(){return _()||M},ipad:function(){return _()||$}};Y.exports=mn},4799:function(Y,kn,g){"use strict";var sn=g(4800),N;sn.canUseDOM&&(N=document.implementation&&document.implementation.hasFeature&&document.implementation.hasFeature("","")!==!0);/**
 * Checks if an event is supported in the current execution environment.
 *
 * NOTE: This will not work correctly for non-generic events such as `change`,
 * `reset`, `load`, `error`, and `select`.
 *
 * Borrows from Modernizr.
 *
 * @param {string} eventNameSuffix Event name, e.g. "click".
 * @param {?boolean} capture Check if the capture phase is supported.
 * @return {boolean} True if the event is supported.
 * @internal
 * @license Modernizr 3.0.0pre (Custom Build) | MIT
 */function H(R,F){if(!sn.canUseDOM||F&&!("addEventListener"in document))return!1;var O="on"+R,S=O in document;if(!S){var D=document.createElement("div");D.setAttribute(O,"return;"),S=typeof D[O]=="function"}return!S&&N&&R==="wheel"&&(S=document.implementation.hasFeature("Events.wheel","3.0")),S}Y.exports=H},4800:function(Y,kn,g){"use strict";var sn=!!(typeof window!="undefined"&&window.document&&window.document.createElement),N={canUseDOM:sn,canUseWorkers:typeof Worker!="undefined",canUseEventListeners:sn&&!!(window.addEventListener||window.attachEvent),canUseViewport:sn&&!!window.screen,isInWorker:!sn};Y.exports=N},4801:function(Y,kn,g){Y.exports={content:{"zh-CN":[["p","\u4F7F\u7528 ",["code","progress"]," \u5C5E\u6027\u81EA\u5B9A\u4E49\u8FDB\u5EA6\u6761\u6837\u5F0F\u3002"]],"en-US":[["p","Use ",["code","progress"]," for customize progress bar."]]},meta:{order:15,title:{"zh-CN":"\u81EA\u5B9A\u4E49\u8FDB\u5EA6\u6761\u6837\u5F0F","en-US":"Customize Progress Bar"},filename:"components/upload/demo/customize-progress-bar.md",id:"components-upload-demo-customize-progress-bar"},toc:["ul",["li",["a",{className:"bisheng-toc-h2",href:"#zh-CN",title:"zh-CN"},"zh-CN"]],["li",["a",{className:"bisheng-toc-h2",href:"#en-US",title:"en-US"},"en-US"]]],highlightedCode:["pre",{lang:"tsx",highlighted:`import { UploadOutlined } from <span class="token string">'@ant-design/icons'</span><span class="token comment" spellcheck="true">;</span>
import type { UploadProps } from <span class="token string">'antd'</span><span class="token comment" spellcheck="true">;</span>
import { Button<span class="token punctuation">,</span> message<span class="token punctuation">,</span> Upload } from <span class="token string">'antd'</span><span class="token comment" spellcheck="true">;</span>
import React from <span class="token string">'react'</span><span class="token comment" spellcheck="true">;</span>

<span class="token keyword">const</span> props<span class="token punctuation">:</span> UploadProps <span class="token operator">=</span> {
  name<span class="token punctuation">:</span> <span class="token string">'file'</span><span class="token punctuation">,</span>
  action<span class="token punctuation">:</span> <span class="token string">'https://www.mocky.io/v2/5cc8019d300000980a055e76'</span><span class="token punctuation">,</span>
  headers<span class="token punctuation">:</span> {
    authorization<span class="token punctuation">:</span> <span class="token string">'authorization-text'</span><span class="token punctuation">,</span>
  }<span class="token punctuation">,</span>
  <span class="token function">onChange</span><span class="token punctuation">(</span>info<span class="token punctuation">)</span> {
    <span class="token keyword">if</span> <span class="token punctuation">(</span>info<span class="token punctuation">.</span>file<span class="token punctuation">.</span>status !<span class="token operator">==</span> <span class="token string">'uploading'</span><span class="token punctuation">)</span> {
      console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>info<span class="token punctuation">.</span>file<span class="token punctuation">,</span> info<span class="token punctuation">.</span>fileList<span class="token punctuation">)</span><span class="token comment" spellcheck="true">;</span>
    }
    <span class="token keyword">if</span> <span class="token punctuation">(</span>info<span class="token punctuation">.</span>file<span class="token punctuation">.</span>status <span class="token operator">==</span><span class="token operator">=</span> <span class="token string">'done'</span><span class="token punctuation">)</span> {
      message<span class="token punctuation">.</span><span class="token function">success</span><span class="token punctuation">(</span>\`\${info<span class="token punctuation">.</span>file<span class="token punctuation">.</span>name} file uploaded successfully\`<span class="token punctuation">)</span><span class="token comment" spellcheck="true">;</span>
    } <span class="token keyword">else</span> <span class="token keyword">if</span> <span class="token punctuation">(</span>info<span class="token punctuation">.</span>file<span class="token punctuation">.</span>status <span class="token operator">==</span><span class="token operator">=</span> <span class="token string">'error'</span><span class="token punctuation">)</span> {
      message<span class="token punctuation">.</span><span class="token function">error</span><span class="token punctuation">(</span>\`\${info<span class="token punctuation">.</span>file<span class="token punctuation">.</span>name} file upload failed<span class="token punctuation">.</span>\`<span class="token punctuation">)</span><span class="token comment" spellcheck="true">;</span>
    }
  }<span class="token punctuation">,</span>
  progress<span class="token punctuation">:</span> {
    strokeColor<span class="token punctuation">:</span> {
      <span class="token string">'0%'</span><span class="token punctuation">:</span> <span class="token string">'#108ee9'</span><span class="token punctuation">,</span>
      <span class="token string">'100%'</span><span class="token punctuation">:</span> <span class="token string">'#87d068'</span><span class="token punctuation">,</span>
    }<span class="token punctuation">,</span>
    strokeWidth<span class="token punctuation">:</span> <span class="token number">3</span><span class="token punctuation">,</span>
    format<span class="token punctuation">:</span> percent <span class="token operator">=</span><span class="token operator">></span> percent <span class="token operator">&amp;</span><span class="token operator">&amp;</span> \`\${<span class="token function">parseFloat</span><span class="token punctuation">(</span>percent<span class="token punctuation">.</span><span class="token function">toFixed</span><span class="token punctuation">(</span><span class="token number">2</span><span class="token punctuation">)</span><span class="token punctuation">)</span>}%\`<span class="token punctuation">,</span>
  }<span class="token punctuation">,</span>
}<span class="token comment" spellcheck="true">;</span>

<span class="token keyword">const</span> App<span class="token punctuation">:</span> React<span class="token punctuation">.</span>FC <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=</span><span class="token operator">></span> <span class="token punctuation">(</span>
  <span class="token operator">&lt;</span>Upload {<span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token punctuation">.</span>props}<span class="token operator">></span>
    <span class="token operator">&lt;</span>Button icon<span class="token operator">=</span>{<span class="token operator">&lt;</span>UploadOutlined <span class="token operator">/</span><span class="token operator">></span>}<span class="token operator">></span>Click <span class="token keyword">to</span> Upload<span class="token operator">&lt;</span><span class="token operator">/</span>Button<span class="token operator">></span>
  <span class="token operator">&lt;</span><span class="token operator">/</span>Upload<span class="token operator">></span>
<span class="token punctuation">)</span><span class="token comment" spellcheck="true">;</span>

export <span class="token keyword">default</span> App<span class="token comment" spellcheck="true">;</span>`}],highlightedCodes:{tsx:`<span class="token keyword">import</span> <span class="token punctuation">{</span> UploadOutlined <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">'@ant-design/icons'</span><span class="token punctuation">;</span>
<span class="token keyword">import</span> type <span class="token punctuation">{</span> UploadProps <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">'antd'</span><span class="token punctuation">;</span>
<span class="token keyword">import</span> <span class="token punctuation">{</span> Button<span class="token punctuation">,</span> message<span class="token punctuation">,</span> Upload <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">'antd'</span><span class="token punctuation">;</span>
<span class="token keyword">import</span> React <span class="token keyword">from</span> <span class="token string">'react'</span><span class="token punctuation">;</span>

<span class="token keyword">const</span> props<span class="token operator">:</span> UploadProps <span class="token operator">=</span> <span class="token punctuation">{</span>
  name<span class="token operator">:</span> <span class="token string">'file'</span><span class="token punctuation">,</span>
  action<span class="token operator">:</span> <span class="token string">'https://www.mocky.io/v2/5cc8019d300000980a055e76'</span><span class="token punctuation">,</span>
  headers<span class="token operator">:</span> <span class="token punctuation">{</span>
    authorization<span class="token operator">:</span> <span class="token string">'authorization-text'</span><span class="token punctuation">,</span>
  <span class="token punctuation">}</span><span class="token punctuation">,</span>
  <span class="token function">onChange</span><span class="token punctuation">(</span>info<span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">if</span> <span class="token punctuation">(</span>info<span class="token punctuation">.</span>file<span class="token punctuation">.</span>status <span class="token operator">!==</span> <span class="token string">'uploading'</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
      console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>info<span class="token punctuation">.</span>file<span class="token punctuation">,</span> info<span class="token punctuation">.</span>fileList<span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
    <span class="token keyword">if</span> <span class="token punctuation">(</span>info<span class="token punctuation">.</span>file<span class="token punctuation">.</span>status <span class="token operator">===</span> <span class="token string">'done'</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
      message<span class="token punctuation">.</span><span class="token function">success</span><span class="token punctuation">(</span><span class="token template-string"><span class="token template-punctuation string">\`</span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">\${</span>info<span class="token punctuation">.</span>file<span class="token punctuation">.</span>name<span class="token interpolation-punctuation punctuation">}</span></span><span class="token string"> file uploaded successfully</span><span class="token template-punctuation string">\`</span></span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token keyword">if</span> <span class="token punctuation">(</span>info<span class="token punctuation">.</span>file<span class="token punctuation">.</span>status <span class="token operator">===</span> <span class="token string">'error'</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
      message<span class="token punctuation">.</span><span class="token function">error</span><span class="token punctuation">(</span><span class="token template-string"><span class="token template-punctuation string">\`</span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">\${</span>info<span class="token punctuation">.</span>file<span class="token punctuation">.</span>name<span class="token interpolation-punctuation punctuation">}</span></span><span class="token string"> file upload failed.</span><span class="token template-punctuation string">\`</span></span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
  <span class="token punctuation">}</span><span class="token punctuation">,</span>
  progress<span class="token operator">:</span> <span class="token punctuation">{</span>
    strokeColor<span class="token operator">:</span> <span class="token punctuation">{</span>
      <span class="token string-property property">'0%'</span><span class="token operator">:</span> <span class="token string">'#108ee9'</span><span class="token punctuation">,</span>
      <span class="token string-property property">'100%'</span><span class="token operator">:</span> <span class="token string">'#87d068'</span><span class="token punctuation">,</span>
    <span class="token punctuation">}</span><span class="token punctuation">,</span>
    strokeWidth<span class="token operator">:</span> <span class="token number">3</span><span class="token punctuation">,</span>
    <span class="token function-variable function">format</span><span class="token operator">:</span> percent <span class="token operator">=></span> percent <span class="token operator">&amp;&amp;</span> <span class="token template-string"><span class="token template-punctuation string">\`</span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">\${</span><span class="token function">parseFloat</span><span class="token punctuation">(</span>percent<span class="token punctuation">.</span><span class="token function">toFixed</span><span class="token punctuation">(</span><span class="token number">2</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token interpolation-punctuation punctuation">}</span></span><span class="token string">%</span><span class="token template-punctuation string">\`</span></span><span class="token punctuation">,</span>
  <span class="token punctuation">}</span><span class="token punctuation">,</span>
<span class="token punctuation">}</span><span class="token punctuation">;</span>

<span class="token keyword">const</span> App<span class="token operator">:</span> React<span class="token punctuation">.</span><span class="token function-variable function">FC</span> <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=></span> <span class="token punctuation">(</span>
  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span><span class="token class-name">Upload</span></span> <span class="token spread"><span class="token punctuation">{</span><span class="token operator">...</span>props<span class="token punctuation">}</span></span><span class="token punctuation">></span></span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span><span class="token class-name">Button</span></span> <span class="token attr-name">icon</span><span class="token script language-javascript"><span class="token script-punctuation punctuation">=</span><span class="token punctuation">{</span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span><span class="token class-name">UploadOutlined</span></span> <span class="token punctuation">/></span></span><span class="token punctuation">}</span></span><span class="token punctuation">></span></span>Click to Upload<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span><span class="token class-name">Button</span></span><span class="token punctuation">></span></span>
  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span><span class="token class-name">Upload</span></span><span class="token punctuation">></span></span>
<span class="token punctuation">)</span><span class="token punctuation">;</span>

<span class="token keyword">export</span> <span class="token keyword">default</span> App<span class="token punctuation">;</span>`,jsx:`<span class="token keyword">import</span> <span class="token punctuation">{</span> UploadOutlined <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">'@ant-design/icons'</span><span class="token punctuation">;</span>
<span class="token keyword">import</span> <span class="token punctuation">{</span> Button<span class="token punctuation">,</span> message<span class="token punctuation">,</span> Upload <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">'antd'</span><span class="token punctuation">;</span>
<span class="token keyword">import</span> React <span class="token keyword">from</span> <span class="token string">'react'</span><span class="token punctuation">;</span>
<span class="token keyword">const</span> props <span class="token operator">=</span> <span class="token punctuation">{</span>
  <span class="token literal-property property">name</span><span class="token operator">:</span> <span class="token string">'file'</span><span class="token punctuation">,</span>
  <span class="token literal-property property">action</span><span class="token operator">:</span> <span class="token string">'https://www.mocky.io/v2/5cc8019d300000980a055e76'</span><span class="token punctuation">,</span>
  <span class="token literal-property property">headers</span><span class="token operator">:</span> <span class="token punctuation">{</span>
    <span class="token literal-property property">authorization</span><span class="token operator">:</span> <span class="token string">'authorization-text'</span><span class="token punctuation">,</span>
  <span class="token punctuation">}</span><span class="token punctuation">,</span>
  <span class="token function">onChange</span><span class="token punctuation">(</span><span class="token parameter">info</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">if</span> <span class="token punctuation">(</span>info<span class="token punctuation">.</span>file<span class="token punctuation">.</span>status <span class="token operator">!==</span> <span class="token string">'uploading'</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
      console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>info<span class="token punctuation">.</span>file<span class="token punctuation">,</span> info<span class="token punctuation">.</span>fileList<span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
    <span class="token keyword">if</span> <span class="token punctuation">(</span>info<span class="token punctuation">.</span>file<span class="token punctuation">.</span>status <span class="token operator">===</span> <span class="token string">'done'</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
      message<span class="token punctuation">.</span><span class="token function">success</span><span class="token punctuation">(</span><span class="token template-string"><span class="token template-punctuation string">\`</span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">\${</span>info<span class="token punctuation">.</span>file<span class="token punctuation">.</span>name<span class="token interpolation-punctuation punctuation">}</span></span><span class="token string"> file uploaded successfully</span><span class="token template-punctuation string">\`</span></span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token keyword">if</span> <span class="token punctuation">(</span>info<span class="token punctuation">.</span>file<span class="token punctuation">.</span>status <span class="token operator">===</span> <span class="token string">'error'</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
      message<span class="token punctuation">.</span><span class="token function">error</span><span class="token punctuation">(</span><span class="token template-string"><span class="token template-punctuation string">\`</span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">\${</span>info<span class="token punctuation">.</span>file<span class="token punctuation">.</span>name<span class="token interpolation-punctuation punctuation">}</span></span><span class="token string"> file upload failed.</span><span class="token template-punctuation string">\`</span></span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
  <span class="token punctuation">}</span><span class="token punctuation">,</span>
  <span class="token literal-property property">progress</span><span class="token operator">:</span> <span class="token punctuation">{</span>
    <span class="token literal-property property">strokeColor</span><span class="token operator">:</span> <span class="token punctuation">{</span>
      <span class="token string-property property">'0%'</span><span class="token operator">:</span> <span class="token string">'#108ee9'</span><span class="token punctuation">,</span>
      <span class="token string-property property">'100%'</span><span class="token operator">:</span> <span class="token string">'#87d068'</span><span class="token punctuation">,</span>
    <span class="token punctuation">}</span><span class="token punctuation">,</span>
    <span class="token literal-property property">strokeWidth</span><span class="token operator">:</span> <span class="token number">3</span><span class="token punctuation">,</span>
    <span class="token function-variable function">format</span><span class="token operator">:</span> <span class="token punctuation">(</span><span class="token parameter">percent</span><span class="token punctuation">)</span> <span class="token operator">=></span> percent <span class="token operator">&amp;&amp;</span> <span class="token template-string"><span class="token template-punctuation string">\`</span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">\${</span><span class="token function">parseFloat</span><span class="token punctuation">(</span>percent<span class="token punctuation">.</span><span class="token function">toFixed</span><span class="token punctuation">(</span><span class="token number">2</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token interpolation-punctuation punctuation">}</span></span><span class="token string">%</span><span class="token template-punctuation string">\`</span></span><span class="token punctuation">,</span>
  <span class="token punctuation">}</span><span class="token punctuation">,</span>
<span class="token punctuation">}</span><span class="token punctuation">;</span>
<span class="token keyword">const</span> <span class="token function-variable function">App</span> <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=></span> <span class="token punctuation">(</span>
  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span><span class="token class-name">Upload</span></span> <span class="token spread"><span class="token punctuation">{</span><span class="token operator">...</span>props<span class="token punctuation">}</span></span><span class="token punctuation">></span></span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span><span class="token class-name">Button</span></span> <span class="token attr-name">icon</span><span class="token script language-javascript"><span class="token script-punctuation punctuation">=</span><span class="token punctuation">{</span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span><span class="token class-name">UploadOutlined</span></span> <span class="token punctuation">/></span></span><span class="token punctuation">}</span></span><span class="token punctuation">></span></span>Click to Upload<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span><span class="token class-name">Button</span></span><span class="token punctuation">></span></span>
  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span><span class="token class-name">Upload</span></span><span class="token punctuation">></span></span>
<span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token keyword">export</span> <span class="token keyword">default</span> App<span class="token punctuation">;</span>
`},preview:function(){var N=g(0),H=g(47),R=g(61),F=g(12),O=S(g(0));function S(C){return C&&C.__esModule?C:{default:C}}var D={name:"file",action:"https://www.mocky.io/v2/5cc8019d300000980a055e76",headers:{authorization:"authorization-text"},onChange:function(W){W.file.status!=="uploading"&&console.log(W.file,W.fileList),W.file.status==="done"?F.message.success("".concat(W.file.name," file uploaded successfully")):W.file.status==="error"&&F.message.error("".concat(W.file.name," file upload failed."))},progress:{strokeColor:{"0%":"#108ee9","100%":"#87d068"},strokeWidth:3,format:function(W){return W&&"".concat(parseFloat(W.toFixed(2)),"%")}}},V=function(){return O.default.createElement(F.Upload,D,O.default.createElement(F.Button,{icon:O.default.createElement(R.UploadOutlined,null)},"Click to Upload"))},M=V;return N.createElement(M)}}},4802:function(Y,kn,g){Y.exports={content:{"zh-CN":[["p","\u4F7F\u7528 ",["code","defaultFileList"]," \u8BBE\u7F6E\u5DF2\u4E0A\u4F20\u7684\u5185\u5BB9\u3002"]],"en-US":[["p","Use ",["code","defaultFileList"]," for uploaded files when page init."]]},meta:{order:2,title:{"zh-CN":"\u5DF2\u4E0A\u4F20\u7684\u6587\u4EF6\u5217\u8868","en-US":"Default Files"},filename:"components/upload/demo/defaultFileList.md",id:"components-upload-demo-defaultFileList"},toc:["ul",["li",["a",{className:"bisheng-toc-h2",href:"#zh-CN",title:"zh-CN"},"zh-CN"]],["li",["a",{className:"bisheng-toc-h2",href:"#en-US",title:"en-US"},"en-US"]]],highlightedCode:["pre",{lang:"tsx",highlighted:`import { UploadOutlined } from <span class="token string">'@ant-design/icons'</span><span class="token comment" spellcheck="true">;</span>
import type { UploadProps } from <span class="token string">'antd'</span><span class="token comment" spellcheck="true">;</span>
import { Button<span class="token punctuation">,</span> Upload } from <span class="token string">'antd'</span><span class="token comment" spellcheck="true">;</span>
import React from <span class="token string">'react'</span><span class="token comment" spellcheck="true">;</span>

<span class="token keyword">const</span> props<span class="token punctuation">:</span> UploadProps <span class="token operator">=</span> {
  action<span class="token punctuation">:</span> <span class="token string">'https://www.mocky.io/v2/5cc8019d300000980a055e76'</span><span class="token punctuation">,</span>
  <span class="token function">onChange</span><span class="token punctuation">(</span>{ file<span class="token punctuation">,</span> fileList }<span class="token punctuation">)</span> {
    <span class="token keyword">if</span> <span class="token punctuation">(</span>file<span class="token punctuation">.</span>status !<span class="token operator">==</span> <span class="token string">'uploading'</span><span class="token punctuation">)</span> {
      console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>file<span class="token punctuation">,</span> fileList<span class="token punctuation">)</span><span class="token comment" spellcheck="true">;</span>
    }
  }<span class="token punctuation">,</span>
  defaultFileList<span class="token punctuation">:</span> <span class="token punctuation">[</span>
    {
      uid<span class="token punctuation">:</span> <span class="token string">'1'</span><span class="token punctuation">,</span>
      name<span class="token punctuation">:</span> <span class="token string">'xxx.png'</span><span class="token punctuation">,</span>
      status<span class="token punctuation">:</span> <span class="token string">'done'</span><span class="token punctuation">,</span>
      response<span class="token punctuation">:</span> <span class="token string">'Server Error 500'</span><span class="token punctuation">,</span> <span class="token operator">/</span><span class="token operator">/</span> custom error message <span class="token keyword">to</span> show
      url<span class="token punctuation">:</span> <span class="token string">'http://www.baidu.com/xxx.png'</span><span class="token punctuation">,</span>
    }<span class="token punctuation">,</span>
    {
      uid<span class="token punctuation">:</span> <span class="token string">'2'</span><span class="token punctuation">,</span>
      name<span class="token punctuation">:</span> <span class="token string">'yyy.png'</span><span class="token punctuation">,</span>
      status<span class="token punctuation">:</span> <span class="token string">'done'</span><span class="token punctuation">,</span>
      url<span class="token punctuation">:</span> <span class="token string">'http://www.baidu.com/yyy.png'</span><span class="token punctuation">,</span>
    }<span class="token punctuation">,</span>
    {
      uid<span class="token punctuation">:</span> <span class="token string">'3'</span><span class="token punctuation">,</span>
      name<span class="token punctuation">:</span> <span class="token string">'zzz.png'</span><span class="token punctuation">,</span>
      status<span class="token punctuation">:</span> <span class="token string">'error'</span><span class="token punctuation">,</span>
      response<span class="token punctuation">:</span> <span class="token string">'Server Error 500'</span><span class="token punctuation">,</span> <span class="token operator">/</span><span class="token operator">/</span> custom error message <span class="token keyword">to</span> show
      url<span class="token punctuation">:</span> <span class="token string">'http://www.baidu.com/zzz.png'</span><span class="token punctuation">,</span>
    }<span class="token punctuation">,</span>
  <span class="token punctuation">]</span><span class="token punctuation">,</span>
}<span class="token comment" spellcheck="true">;</span>

<span class="token keyword">const</span> App<span class="token punctuation">:</span> React<span class="token punctuation">.</span>FC <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=</span><span class="token operator">></span> <span class="token punctuation">(</span>
  <span class="token operator">&lt;</span>Upload {<span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token punctuation">.</span>props}<span class="token operator">></span>
    <span class="token operator">&lt;</span>Button icon<span class="token operator">=</span>{<span class="token operator">&lt;</span>UploadOutlined <span class="token operator">/</span><span class="token operator">></span>}<span class="token operator">></span>Upload<span class="token operator">&lt;</span><span class="token operator">/</span>Button<span class="token operator">></span>
  <span class="token operator">&lt;</span><span class="token operator">/</span>Upload<span class="token operator">></span>
<span class="token punctuation">)</span><span class="token comment" spellcheck="true">;</span>

export <span class="token keyword">default</span> App<span class="token comment" spellcheck="true">;</span>`}],highlightedCodes:{tsx:`<span class="token keyword">import</span> <span class="token punctuation">{</span> UploadOutlined <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">'@ant-design/icons'</span><span class="token punctuation">;</span>
<span class="token keyword">import</span> type <span class="token punctuation">{</span> UploadProps <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">'antd'</span><span class="token punctuation">;</span>
<span class="token keyword">import</span> <span class="token punctuation">{</span> Button<span class="token punctuation">,</span> Upload <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">'antd'</span><span class="token punctuation">;</span>
<span class="token keyword">import</span> React <span class="token keyword">from</span> <span class="token string">'react'</span><span class="token punctuation">;</span>

<span class="token keyword">const</span> props<span class="token operator">:</span> UploadProps <span class="token operator">=</span> <span class="token punctuation">{</span>
  action<span class="token operator">:</span> <span class="token string">'https://www.mocky.io/v2/5cc8019d300000980a055e76'</span><span class="token punctuation">,</span>
  <span class="token function">onChange</span><span class="token punctuation">(</span><span class="token punctuation">{</span> file<span class="token punctuation">,</span> fileList <span class="token punctuation">}</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">if</span> <span class="token punctuation">(</span>file<span class="token punctuation">.</span>status <span class="token operator">!==</span> <span class="token string">'uploading'</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
      console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>file<span class="token punctuation">,</span> fileList<span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
  <span class="token punctuation">}</span><span class="token punctuation">,</span>
  defaultFileList<span class="token operator">:</span> <span class="token punctuation">[</span>
    <span class="token punctuation">{</span>
      uid<span class="token operator">:</span> <span class="token string">'1'</span><span class="token punctuation">,</span>
      name<span class="token operator">:</span> <span class="token string">'xxx.png'</span><span class="token punctuation">,</span>
      status<span class="token operator">:</span> <span class="token string">'done'</span><span class="token punctuation">,</span>
      response<span class="token operator">:</span> <span class="token string">'Server Error 500'</span><span class="token punctuation">,</span> <span class="token comment">// custom error message to show</span>
      url<span class="token operator">:</span> <span class="token string">'http://www.baidu.com/xxx.png'</span><span class="token punctuation">,</span>
    <span class="token punctuation">}</span><span class="token punctuation">,</span>
    <span class="token punctuation">{</span>
      uid<span class="token operator">:</span> <span class="token string">'2'</span><span class="token punctuation">,</span>
      name<span class="token operator">:</span> <span class="token string">'yyy.png'</span><span class="token punctuation">,</span>
      status<span class="token operator">:</span> <span class="token string">'done'</span><span class="token punctuation">,</span>
      url<span class="token operator">:</span> <span class="token string">'http://www.baidu.com/yyy.png'</span><span class="token punctuation">,</span>
    <span class="token punctuation">}</span><span class="token punctuation">,</span>
    <span class="token punctuation">{</span>
      uid<span class="token operator">:</span> <span class="token string">'3'</span><span class="token punctuation">,</span>
      name<span class="token operator">:</span> <span class="token string">'zzz.png'</span><span class="token punctuation">,</span>
      status<span class="token operator">:</span> <span class="token string">'error'</span><span class="token punctuation">,</span>
      response<span class="token operator">:</span> <span class="token string">'Server Error 500'</span><span class="token punctuation">,</span> <span class="token comment">// custom error message to show</span>
      url<span class="token operator">:</span> <span class="token string">'http://www.baidu.com/zzz.png'</span><span class="token punctuation">,</span>
    <span class="token punctuation">}</span><span class="token punctuation">,</span>
  <span class="token punctuation">]</span><span class="token punctuation">,</span>
<span class="token punctuation">}</span><span class="token punctuation">;</span>

<span class="token keyword">const</span> App<span class="token operator">:</span> React<span class="token punctuation">.</span><span class="token function-variable function">FC</span> <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=></span> <span class="token punctuation">(</span>
  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span><span class="token class-name">Upload</span></span> <span class="token spread"><span class="token punctuation">{</span><span class="token operator">...</span>props<span class="token punctuation">}</span></span><span class="token punctuation">></span></span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span><span class="token class-name">Button</span></span> <span class="token attr-name">icon</span><span class="token script language-javascript"><span class="token script-punctuation punctuation">=</span><span class="token punctuation">{</span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span><span class="token class-name">UploadOutlined</span></span> <span class="token punctuation">/></span></span><span class="token punctuation">}</span></span><span class="token punctuation">></span></span>Upload<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span><span class="token class-name">Button</span></span><span class="token punctuation">></span></span>
  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span><span class="token class-name">Upload</span></span><span class="token punctuation">></span></span>
<span class="token punctuation">)</span><span class="token punctuation">;</span>

<span class="token keyword">export</span> <span class="token keyword">default</span> App<span class="token punctuation">;</span>`,jsx:`<span class="token keyword">import</span> <span class="token punctuation">{</span> UploadOutlined <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">'@ant-design/icons'</span><span class="token punctuation">;</span>
<span class="token keyword">import</span> <span class="token punctuation">{</span> Button<span class="token punctuation">,</span> Upload <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">'antd'</span><span class="token punctuation">;</span>
<span class="token keyword">import</span> React <span class="token keyword">from</span> <span class="token string">'react'</span><span class="token punctuation">;</span>
<span class="token keyword">const</span> props <span class="token operator">=</span> <span class="token punctuation">{</span>
  <span class="token literal-property property">action</span><span class="token operator">:</span> <span class="token string">'https://www.mocky.io/v2/5cc8019d300000980a055e76'</span><span class="token punctuation">,</span>
  <span class="token function">onChange</span><span class="token punctuation">(</span><span class="token parameter"><span class="token punctuation">{</span> file<span class="token punctuation">,</span> fileList <span class="token punctuation">}</span></span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">if</span> <span class="token punctuation">(</span>file<span class="token punctuation">.</span>status <span class="token operator">!==</span> <span class="token string">'uploading'</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
      console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>file<span class="token punctuation">,</span> fileList<span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
  <span class="token punctuation">}</span><span class="token punctuation">,</span>
  <span class="token literal-property property">defaultFileList</span><span class="token operator">:</span> <span class="token punctuation">[</span>
    <span class="token punctuation">{</span>
      <span class="token literal-property property">uid</span><span class="token operator">:</span> <span class="token string">'1'</span><span class="token punctuation">,</span>
      <span class="token literal-property property">name</span><span class="token operator">:</span> <span class="token string">'xxx.png'</span><span class="token punctuation">,</span>
      <span class="token literal-property property">status</span><span class="token operator">:</span> <span class="token string">'done'</span><span class="token punctuation">,</span>
      <span class="token literal-property property">response</span><span class="token operator">:</span> <span class="token string">'Server Error 500'</span><span class="token punctuation">,</span>
      <span class="token comment">// custom error message to show</span>
      <span class="token literal-property property">url</span><span class="token operator">:</span> <span class="token string">'http://www.baidu.com/xxx.png'</span><span class="token punctuation">,</span>
    <span class="token punctuation">}</span><span class="token punctuation">,</span>
    <span class="token punctuation">{</span>
      <span class="token literal-property property">uid</span><span class="token operator">:</span> <span class="token string">'2'</span><span class="token punctuation">,</span>
      <span class="token literal-property property">name</span><span class="token operator">:</span> <span class="token string">'yyy.png'</span><span class="token punctuation">,</span>
      <span class="token literal-property property">status</span><span class="token operator">:</span> <span class="token string">'done'</span><span class="token punctuation">,</span>
      <span class="token literal-property property">url</span><span class="token operator">:</span> <span class="token string">'http://www.baidu.com/yyy.png'</span><span class="token punctuation">,</span>
    <span class="token punctuation">}</span><span class="token punctuation">,</span>
    <span class="token punctuation">{</span>
      <span class="token literal-property property">uid</span><span class="token operator">:</span> <span class="token string">'3'</span><span class="token punctuation">,</span>
      <span class="token literal-property property">name</span><span class="token operator">:</span> <span class="token string">'zzz.png'</span><span class="token punctuation">,</span>
      <span class="token literal-property property">status</span><span class="token operator">:</span> <span class="token string">'error'</span><span class="token punctuation">,</span>
      <span class="token literal-property property">response</span><span class="token operator">:</span> <span class="token string">'Server Error 500'</span><span class="token punctuation">,</span>
      <span class="token comment">// custom error message to show</span>
      <span class="token literal-property property">url</span><span class="token operator">:</span> <span class="token string">'http://www.baidu.com/zzz.png'</span><span class="token punctuation">,</span>
    <span class="token punctuation">}</span><span class="token punctuation">,</span>
  <span class="token punctuation">]</span><span class="token punctuation">,</span>
<span class="token punctuation">}</span><span class="token punctuation">;</span>
<span class="token keyword">const</span> <span class="token function-variable function">App</span> <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=></span> <span class="token punctuation">(</span>
  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span><span class="token class-name">Upload</span></span> <span class="token spread"><span class="token punctuation">{</span><span class="token operator">...</span>props<span class="token punctuation">}</span></span><span class="token punctuation">></span></span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span><span class="token class-name">Button</span></span> <span class="token attr-name">icon</span><span class="token script language-javascript"><span class="token script-punctuation punctuation">=</span><span class="token punctuation">{</span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span><span class="token class-name">UploadOutlined</span></span> <span class="token punctuation">/></span></span><span class="token punctuation">}</span></span><span class="token punctuation">></span></span>Upload<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span><span class="token class-name">Button</span></span><span class="token punctuation">></span></span>
  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span><span class="token class-name">Upload</span></span><span class="token punctuation">></span></span>
<span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token keyword">export</span> <span class="token keyword">default</span> App<span class="token punctuation">;</span>
`},preview:function(){var N=g(0),H=g(47),R=g(61),F=g(12),O=S(g(0));function S(C){return C&&C.__esModule?C:{default:C}}var D={action:"https://www.mocky.io/v2/5cc8019d300000980a055e76",onChange:function(W){var $=W.file,nn=W.fileList;$.status!=="uploading"&&console.log($,nn)},defaultFileList:[{uid:"1",name:"xxx.png",status:"done",response:"Server Error 500",url:"http://www.baidu.com/xxx.png"},{uid:"2",name:"yyy.png",status:"done",url:"http://www.baidu.com/yyy.png"},{uid:"3",name:"zzz.png",status:"error",response:"Server Error 500",url:"http://www.baidu.com/zzz.png"}]},V=function(){return O.default.createElement(F.Upload,D,O.default.createElement(F.Button,{icon:O.default.createElement(R.UploadOutlined,null)},"Upload"))},M=V;return N.createElement(M)}}},4803:function(Y,kn,g){Y.exports={content:{"zh-CN":[["p","\u652F\u6301\u4E0A\u4F20\u4E00\u4E2A\u6587\u4EF6\u5939\u91CC\u7684\u6240\u6709\u6587\u4EF6\u3002"]],"en-US":[["p","You can select and upload a whole directory."]]},meta:{order:6,title:{"zh-CN":"\u6587\u4EF6\u5939\u4E0A\u4F20","en-US":"Upload directory"},filename:"components/upload/demo/directory.md",id:"components-upload-demo-directory"},toc:["ul",["li",["a",{className:"bisheng-toc-h2",href:"#zh-CN",title:"zh-CN"},"zh-CN"]],["li",["a",{className:"bisheng-toc-h2",href:"#en-US",title:"en-US"},"en-US"]]],highlightedCode:["pre",{lang:"tsx",highlighted:`import { UploadOutlined } from <span class="token string">'@ant-design/icons'</span><span class="token comment" spellcheck="true">;</span>
import { Button<span class="token punctuation">,</span> Upload } from <span class="token string">'antd'</span><span class="token comment" spellcheck="true">;</span>
import React from <span class="token string">'react'</span><span class="token comment" spellcheck="true">;</span>

<span class="token keyword">const</span> App<span class="token punctuation">:</span> React<span class="token punctuation">.</span>FC <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=</span><span class="token operator">></span> <span class="token punctuation">(</span>
  <span class="token operator">&lt;</span>Upload action<span class="token operator">=</span><span class="token string">"https://www.mocky.io/v2/5cc8019d300000980a055e76"</span> directory<span class="token operator">></span>
    <span class="token operator">&lt;</span>Button icon<span class="token operator">=</span>{<span class="token operator">&lt;</span>UploadOutlined <span class="token operator">/</span><span class="token operator">></span>}<span class="token operator">></span>Upload Directory<span class="token operator">&lt;</span><span class="token operator">/</span>Button<span class="token operator">></span>
  <span class="token operator">&lt;</span><span class="token operator">/</span>Upload<span class="token operator">></span>
<span class="token punctuation">)</span><span class="token comment" spellcheck="true">;</span>

export <span class="token keyword">default</span> App<span class="token comment" spellcheck="true">;</span>`}],highlightedCodes:{tsx:`<span class="token keyword">import</span> <span class="token punctuation">{</span> UploadOutlined <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">'@ant-design/icons'</span><span class="token punctuation">;</span>
<span class="token keyword">import</span> <span class="token punctuation">{</span> Button<span class="token punctuation">,</span> Upload <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">'antd'</span><span class="token punctuation">;</span>
<span class="token keyword">import</span> React <span class="token keyword">from</span> <span class="token string">'react'</span><span class="token punctuation">;</span>

<span class="token keyword">const</span> App<span class="token operator">:</span> React<span class="token punctuation">.</span><span class="token function-variable function">FC</span> <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=></span> <span class="token punctuation">(</span>
  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span><span class="token class-name">Upload</span></span> <span class="token attr-name">action</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>https://www.mocky.io/v2/5cc8019d300000980a055e76<span class="token punctuation">"</span></span> <span class="token attr-name">directory</span><span class="token punctuation">></span></span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span><span class="token class-name">Button</span></span> <span class="token attr-name">icon</span><span class="token script language-javascript"><span class="token script-punctuation punctuation">=</span><span class="token punctuation">{</span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span><span class="token class-name">UploadOutlined</span></span> <span class="token punctuation">/></span></span><span class="token punctuation">}</span></span><span class="token punctuation">></span></span>Upload Directory<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span><span class="token class-name">Button</span></span><span class="token punctuation">></span></span>
  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span><span class="token class-name">Upload</span></span><span class="token punctuation">></span></span>
<span class="token punctuation">)</span><span class="token punctuation">;</span>

<span class="token keyword">export</span> <span class="token keyword">default</span> App<span class="token punctuation">;</span>`,jsx:`<span class="token keyword">import</span> <span class="token punctuation">{</span> UploadOutlined <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">'@ant-design/icons'</span><span class="token punctuation">;</span>
<span class="token keyword">import</span> <span class="token punctuation">{</span> Button<span class="token punctuation">,</span> Upload <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">'antd'</span><span class="token punctuation">;</span>
<span class="token keyword">import</span> React <span class="token keyword">from</span> <span class="token string">'react'</span><span class="token punctuation">;</span>
<span class="token keyword">const</span> <span class="token function-variable function">App</span> <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=></span> <span class="token punctuation">(</span>
  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span><span class="token class-name">Upload</span></span> <span class="token attr-name">action</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>https://www.mocky.io/v2/5cc8019d300000980a055e76<span class="token punctuation">"</span></span> <span class="token attr-name">directory</span><span class="token punctuation">></span></span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span><span class="token class-name">Button</span></span> <span class="token attr-name">icon</span><span class="token script language-javascript"><span class="token script-punctuation punctuation">=</span><span class="token punctuation">{</span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span><span class="token class-name">UploadOutlined</span></span> <span class="token punctuation">/></span></span><span class="token punctuation">}</span></span><span class="token punctuation">></span></span>Upload Directory<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span><span class="token class-name">Button</span></span><span class="token punctuation">></span></span>
  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span><span class="token class-name">Upload</span></span><span class="token punctuation">></span></span>
<span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token keyword">export</span> <span class="token keyword">default</span> App<span class="token punctuation">;</span>
`},preview:function(){var N=g(0),H=g(47),R=g(61),F=g(12),O=S(g(0));function S(M){return M&&M.__esModule?M:{default:M}}var D=function(){return O.default.createElement(F.Upload,{action:"https://www.mocky.io/v2/5cc8019d300000980a055e76",directory:!0},O.default.createElement(F.Button,{icon:O.default.createElement(R.UploadOutlined,null)},"Upload Directory"))},V=D;return N.createElement(V)}}},4804:function(Y,kn,g){Y.exports={content:{"zh-CN":[["p","\u4F7F\u7528 ",["code","itemRender"]," \uFF0C\u6211\u4EEC\u53EF\u4EE5\u96C6\u6210 react-dnd \u6765\u5B9E\u73B0\u5BF9\u4E0A\u4F20\u5217\u8868\u62D6\u62FD\u6392\u5E8F\u3002"]],"en-US":[["p","By using ",["code","itemRender"],", we can integrate upload with react-dnd to implement drag sorting of uploadList."]]},meta:{order:13,title:{"zh-CN":"\u4E0A\u4F20\u5217\u8868\u62D6\u62FD\u6392\u5E8F","en-US":"Drag sorting of uploadList"},filename:"components/upload/demo/drag-sorting.md",id:"components-upload-demo-drag-sorting"},toc:["ul",["li",["a",{className:"bisheng-toc-h2",href:"#zh-CN",title:"zh-CN"},"zh-CN"]],["li",["a",{className:"bisheng-toc-h2",href:"#en-US",title:"en-US"},"en-US"]]],highlightedCode:["pre",{lang:"tsx",highlighted:`import { UploadOutlined } from <span class="token string">'@ant-design/icons'</span><span class="token comment" spellcheck="true">;</span>
import { Button<span class="token punctuation">,</span> Tooltip<span class="token punctuation">,</span> Upload } from <span class="token string">'antd'</span><span class="token comment" spellcheck="true">;</span>
import type { UploadFile<span class="token punctuation">,</span> UploadProps } from <span class="token string">'antd/es/upload/interface'</span><span class="token comment" spellcheck="true">;</span>
import update from <span class="token string">'immutability-helper'</span><span class="token comment" spellcheck="true">;</span>
import React<span class="token punctuation">,</span> { useCallback<span class="token punctuation">,</span> useRef<span class="token punctuation">,</span> useState } from <span class="token string">'react'</span><span class="token comment" spellcheck="true">;</span>
import { DndProvider<span class="token punctuation">,</span> useDrag<span class="token punctuation">,</span> useDrop } from <span class="token string">'react-dnd'</span><span class="token comment" spellcheck="true">;</span>
import { HTML5Backend } from <span class="token string">'react-dnd-html5-backend'</span><span class="token comment" spellcheck="true">;</span>

<span class="token keyword">const</span> type <span class="token operator">=</span> <span class="token string">'DragableUploadList'</span><span class="token comment" spellcheck="true">;</span>

interface DragableUploadListItemProps {
  originNode<span class="token punctuation">:</span> React<span class="token punctuation">.</span>ReactElement<span class="token operator">&lt;</span>any<span class="token punctuation">,</span> string | React<span class="token punctuation">.</span>JSXElementConstructor<span class="token operator">&lt;</span>any<span class="token operator">></span><span class="token operator">></span><span class="token comment" spellcheck="true">;</span>
  file<span class="token punctuation">:</span> UploadFile<span class="token comment" spellcheck="true">;</span>
  fileList<span class="token punctuation">:</span> UploadFile<span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token comment" spellcheck="true">;</span>
  moveRow<span class="token punctuation">:</span> <span class="token punctuation">(</span>dragIndex<span class="token punctuation">:</span> any<span class="token punctuation">,</span> hoverIndex<span class="token punctuation">:</span> any<span class="token punctuation">)</span> <span class="token operator">=</span><span class="token operator">></span> void<span class="token comment" spellcheck="true">;</span>
}

<span class="token keyword">const</span> DragableUploadListItem <span class="token operator">=</span> <span class="token punctuation">(</span>{
  originNode<span class="token punctuation">,</span>
  moveRow<span class="token punctuation">,</span>
  file<span class="token punctuation">,</span>
  fileList<span class="token punctuation">,</span>
}<span class="token punctuation">:</span> DragableUploadListItemProps<span class="token punctuation">)</span> <span class="token operator">=</span><span class="token operator">></span> {
  <span class="token keyword">const</span> ref <span class="token operator">=</span> useRef<span class="token operator">&lt;</span>HTMLDivElement<span class="token operator">></span><span class="token punctuation">(</span><span class="token keyword">null</span><span class="token punctuation">)</span><span class="token comment" spellcheck="true">;</span>
  <span class="token keyword">const</span> index <span class="token operator">=</span> fileList<span class="token punctuation">.</span><span class="token function">indexOf</span><span class="token punctuation">(</span>file<span class="token punctuation">)</span><span class="token comment" spellcheck="true">;</span>
  <span class="token keyword">const</span> <span class="token punctuation">[</span>{ isOver<span class="token punctuation">,</span> dropClassName }<span class="token punctuation">,</span> drop<span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token function">useDrop</span><span class="token punctuation">(</span>{
    accept<span class="token punctuation">:</span> type<span class="token punctuation">,</span>
    collect<span class="token punctuation">:</span> monitor <span class="token operator">=</span><span class="token operator">></span> {
      <span class="token keyword">const</span> { index<span class="token punctuation">:</span> dragIndex } <span class="token operator">=</span> monitor<span class="token punctuation">.</span><span class="token function">getItem</span><span class="token punctuation">(</span><span class="token punctuation">)</span> || {}<span class="token comment" spellcheck="true">;</span>
      <span class="token keyword">if</span> <span class="token punctuation">(</span>dragIndex <span class="token operator">==</span><span class="token operator">=</span> index<span class="token punctuation">)</span> {
        return {}<span class="token comment" spellcheck="true">;</span>
      }
      return {
        isOver<span class="token punctuation">:</span> monitor<span class="token punctuation">.</span><span class="token function">isOver</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span>
        dropClassName<span class="token punctuation">:</span> dragIndex <span class="token operator">&lt;</span> index <span class="token operator">?</span> <span class="token string">' drop-over-downward'</span> <span class="token punctuation">:</span> <span class="token string">' drop-over-upward'</span><span class="token punctuation">,</span>
      }<span class="token comment" spellcheck="true">;</span>
    }<span class="token punctuation">,</span>
    drop<span class="token punctuation">:</span> <span class="token punctuation">(</span>item<span class="token punctuation">:</span> any<span class="token punctuation">)</span> <span class="token operator">=</span><span class="token operator">></span> {
      <span class="token function">moveRow</span><span class="token punctuation">(</span>item<span class="token punctuation">.</span>index<span class="token punctuation">,</span> index<span class="token punctuation">)</span><span class="token comment" spellcheck="true">;</span>
    }<span class="token punctuation">,</span>
  }<span class="token punctuation">)</span><span class="token comment" spellcheck="true">;</span>
  <span class="token keyword">const</span> <span class="token punctuation">[</span><span class="token punctuation">,</span> drag<span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token function">useDrag</span><span class="token punctuation">(</span>{
    type<span class="token punctuation">,</span>
    item<span class="token punctuation">:</span> { index }<span class="token punctuation">,</span>
    collect<span class="token punctuation">:</span> monitor <span class="token operator">=</span><span class="token operator">></span> <span class="token punctuation">(</span>{
      isDragging<span class="token punctuation">:</span> monitor<span class="token punctuation">.</span><span class="token function">isDragging</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span>
    }<span class="token punctuation">)</span><span class="token punctuation">,</span>
  }<span class="token punctuation">)</span><span class="token comment" spellcheck="true">;</span>
  <span class="token function">drop</span><span class="token punctuation">(</span><span class="token function">drag</span><span class="token punctuation">(</span>ref<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token comment" spellcheck="true">;</span>
  <span class="token keyword">const</span> errorNode <span class="token operator">=</span> <span class="token operator">&lt;</span>Tooltip title<span class="token operator">=</span><span class="token string">"Upload Error"</span><span class="token operator">></span>{originNode<span class="token punctuation">.</span>props<span class="token punctuation">.</span>children}<span class="token operator">&lt;</span><span class="token operator">/</span>Tooltip<span class="token operator">></span><span class="token comment" spellcheck="true">;</span>
  return <span class="token punctuation">(</span>
    <span class="token operator">&lt;</span>div
      ref<span class="token operator">=</span>{ref}
      className<span class="token operator">=</span>{\`ant<span class="token operator">-</span>upload<span class="token operator">-</span>draggable<span class="token operator">-</span>list<span class="token operator">-</span>item \${isOver <span class="token operator">?</span> dropClassName <span class="token punctuation">:</span> <span class="token string">''</span>}\`}
      style<span class="token operator">=</span>{{ cursor<span class="token punctuation">:</span> <span class="token string">'move'</span> }}
    <span class="token operator">></span>
      {file<span class="token punctuation">.</span>status <span class="token operator">==</span><span class="token operator">=</span> <span class="token string">'error'</span> <span class="token operator">?</span> errorNode <span class="token punctuation">:</span> originNode}
    <span class="token operator">&lt;</span><span class="token operator">/</span>div<span class="token operator">></span>
  <span class="token punctuation">)</span><span class="token comment" spellcheck="true">;</span>
}<span class="token comment" spellcheck="true">;</span>

<span class="token keyword">const</span> App<span class="token punctuation">:</span> React<span class="token punctuation">.</span>FC <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=</span><span class="token operator">></span> {
  <span class="token keyword">const</span> <span class="token punctuation">[</span>fileList<span class="token punctuation">,</span> setFileList<span class="token punctuation">]</span> <span class="token operator">=</span> useState<span class="token operator">&lt;</span>UploadFile<span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token operator">></span><span class="token punctuation">(</span><span class="token punctuation">[</span>
    {
      uid<span class="token punctuation">:</span> <span class="token string">'-1'</span><span class="token punctuation">,</span>
      name<span class="token punctuation">:</span> <span class="token string">'image1.png'</span><span class="token punctuation">,</span>
      status<span class="token punctuation">:</span> <span class="token string">'done'</span><span class="token punctuation">,</span>
      url<span class="token punctuation">:</span> <span class="token string">'https://zos.alipayobjects.com/rmsportal/jkjgkEfvpUPVyRjUImniVslZfWPnJuuZ.png'</span><span class="token punctuation">,</span>
    }<span class="token punctuation">,</span>
    {
      uid<span class="token punctuation">:</span> <span class="token string">'-2'</span><span class="token punctuation">,</span>
      name<span class="token punctuation">:</span> <span class="token string">'image2.png'</span><span class="token punctuation">,</span>
      status<span class="token punctuation">:</span> <span class="token string">'done'</span><span class="token punctuation">,</span>
      url<span class="token punctuation">:</span> <span class="token string">'https://zos.alipayobjects.com/rmsportal/jkjgkEfvpUPVyRjUImniVslZfWPnJuuZ.png'</span><span class="token punctuation">,</span>
    }<span class="token punctuation">,</span>
    {
      uid<span class="token punctuation">:</span> <span class="token string">'-3'</span><span class="token punctuation">,</span>
      name<span class="token punctuation">:</span> <span class="token string">'image3.png'</span><span class="token punctuation">,</span>
      status<span class="token punctuation">:</span> <span class="token string">'done'</span><span class="token punctuation">,</span>
      url<span class="token punctuation">:</span> <span class="token string">'https://zos.alipayobjects.com/rmsportal/jkjgkEfvpUPVyRjUImniVslZfWPnJuuZ.png'</span><span class="token punctuation">,</span>
    }<span class="token punctuation">,</span>
    {
      uid<span class="token punctuation">:</span> <span class="token string">'-4'</span><span class="token punctuation">,</span>
      name<span class="token punctuation">:</span> <span class="token string">'image4.png'</span><span class="token punctuation">,</span>
      status<span class="token punctuation">:</span> <span class="token string">'done'</span><span class="token punctuation">,</span>
      url<span class="token punctuation">:</span> <span class="token string">'https://zos.alipayobjects.com/rmsportal/jkjgkEfvpUPVyRjUImniVslZfWPnJuuZ.png'</span><span class="token punctuation">,</span>
    }<span class="token punctuation">,</span>
    {
      uid<span class="token punctuation">:</span> <span class="token string">'-5'</span><span class="token punctuation">,</span>
      name<span class="token punctuation">:</span> <span class="token string">'image.png'</span><span class="token punctuation">,</span>
      status<span class="token punctuation">:</span> <span class="token string">'error'</span><span class="token punctuation">,</span>
    }<span class="token punctuation">,</span>
  <span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token comment" spellcheck="true">;</span>

  <span class="token keyword">const</span> moveRow <span class="token operator">=</span> <span class="token function">useCallback</span><span class="token punctuation">(</span>
    <span class="token punctuation">(</span>dragIndex<span class="token punctuation">:</span> number<span class="token punctuation">,</span> hoverIndex<span class="token punctuation">:</span> number<span class="token punctuation">)</span> <span class="token operator">=</span><span class="token operator">></span> {
      <span class="token keyword">const</span> dragRow <span class="token operator">=</span> fileList<span class="token punctuation">[</span>dragIndex<span class="token punctuation">]</span><span class="token comment" spellcheck="true">;</span>
      <span class="token function">setFileList</span><span class="token punctuation">(</span>
        <span class="token function">update</span><span class="token punctuation">(</span>fileList<span class="token punctuation">,</span> {
          <span class="token variable">$splice</span><span class="token punctuation">:</span> <span class="token punctuation">[</span>
            <span class="token punctuation">[</span>dragIndex<span class="token punctuation">,</span> <span class="token number">1</span><span class="token punctuation">]</span><span class="token punctuation">,</span>
            <span class="token punctuation">[</span>hoverIndex<span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">,</span> dragRow<span class="token punctuation">]</span><span class="token punctuation">,</span>
          <span class="token punctuation">]</span><span class="token punctuation">,</span>
        }<span class="token punctuation">)</span><span class="token punctuation">,</span>
      <span class="token punctuation">)</span><span class="token comment" spellcheck="true">;</span>
    }<span class="token punctuation">,</span>
    <span class="token punctuation">[</span>fileList<span class="token punctuation">]</span><span class="token punctuation">,</span>
  <span class="token punctuation">)</span><span class="token comment" spellcheck="true">;</span>

  <span class="token keyword">const</span> onChange<span class="token punctuation">:</span> UploadProps<span class="token punctuation">[</span><span class="token string">'onChange'</span><span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token punctuation">(</span>{ fileList<span class="token punctuation">:</span> newFileList }<span class="token punctuation">)</span> <span class="token operator">=</span><span class="token operator">></span> {
    <span class="token function">setFileList</span><span class="token punctuation">(</span>newFileList<span class="token punctuation">)</span><span class="token comment" spellcheck="true">;</span>
  }<span class="token comment" spellcheck="true">;</span>

  return <span class="token punctuation">(</span>
    <span class="token operator">&lt;</span>DndProvider backend<span class="token operator">=</span>{HTML5Backend}<span class="token operator">></span>
      <span class="token operator">&lt;</span>Upload
        action<span class="token operator">=</span><span class="token string">"https://www.mocky.io/v2/5cc8019d300000980a055e76"</span>
        fileList<span class="token operator">=</span>{fileList}
        onChange<span class="token operator">=</span>{onChange}
        itemRender<span class="token operator">=</span>{<span class="token punctuation">(</span>originNode<span class="token punctuation">,</span> file<span class="token punctuation">,</span> currFileList<span class="token punctuation">)</span> <span class="token operator">=</span><span class="token operator">></span> <span class="token punctuation">(</span>
          <span class="token operator">&lt;</span>DragableUploadListItem
            originNode<span class="token operator">=</span>{originNode}
            file<span class="token operator">=</span>{file}
            fileList<span class="token operator">=</span>{currFileList}
            moveRow<span class="token operator">=</span>{moveRow}
          <span class="token operator">/</span><span class="token operator">></span>
        <span class="token punctuation">)</span>}
      <span class="token operator">></span>
        <span class="token operator">&lt;</span>Button icon<span class="token operator">=</span>{<span class="token operator">&lt;</span>UploadOutlined <span class="token operator">/</span><span class="token operator">></span>}<span class="token operator">></span>Click <span class="token keyword">to</span> Upload<span class="token operator">&lt;</span><span class="token operator">/</span>Button<span class="token operator">></span>
      <span class="token operator">&lt;</span><span class="token operator">/</span>Upload<span class="token operator">></span>
    <span class="token operator">&lt;</span><span class="token operator">/</span>DndProvider<span class="token operator">></span>
  <span class="token punctuation">)</span><span class="token comment" spellcheck="true">;</span>
}<span class="token comment" spellcheck="true">;</span>

export <span class="token keyword">default</span> App<span class="token comment" spellcheck="true">;</span>`}],highlightedCodes:{tsx:`<span class="token keyword">import</span> <span class="token punctuation">{</span> UploadOutlined <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">'@ant-design/icons'</span><span class="token punctuation">;</span>
<span class="token keyword">import</span> <span class="token punctuation">{</span> Button<span class="token punctuation">,</span> Tooltip<span class="token punctuation">,</span> Upload <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">'antd'</span><span class="token punctuation">;</span>
<span class="token keyword">import</span> type <span class="token punctuation">{</span> UploadFile<span class="token punctuation">,</span> UploadProps <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">'antd/es/upload/interface'</span><span class="token punctuation">;</span>
<span class="token keyword">import</span> update <span class="token keyword">from</span> <span class="token string">'immutability-helper'</span><span class="token punctuation">;</span>
<span class="token keyword">import</span> React<span class="token punctuation">,</span> <span class="token punctuation">{</span> useCallback<span class="token punctuation">,</span> useRef<span class="token punctuation">,</span> useState <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">'react'</span><span class="token punctuation">;</span>
<span class="token keyword">import</span> <span class="token punctuation">{</span> DndProvider<span class="token punctuation">,</span> useDrag<span class="token punctuation">,</span> useDrop <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">'react-dnd'</span><span class="token punctuation">;</span>
<span class="token keyword">import</span> <span class="token punctuation">{</span> HTML5Backend <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">'react-dnd-html5-backend'</span><span class="token punctuation">;</span>

<span class="token keyword">const</span> type <span class="token operator">=</span> <span class="token string">'DragableUploadList'</span><span class="token punctuation">;</span>

<span class="token keyword">interface</span> <span class="token class-name">DragableUploadListItemProps</span> <span class="token punctuation">{</span>
  originNode<span class="token operator">:</span> React<span class="token punctuation">.</span>ReactElement<span class="token operator">&lt;</span>any<span class="token punctuation">,</span> string <span class="token operator">|</span> React<span class="token punctuation">.</span>JSXElementConstructor<span class="token operator">&lt;</span>any<span class="token operator">>></span><span class="token punctuation">;</span>
  file<span class="token operator">:</span> UploadFile<span class="token punctuation">;</span>
  fileList<span class="token operator">:</span> UploadFile<span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">;</span>
  <span class="token function-variable function">moveRow</span><span class="token operator">:</span> <span class="token punctuation">(</span>dragIndex<span class="token operator">:</span> any<span class="token punctuation">,</span> hoverIndex<span class="token operator">:</span> any<span class="token punctuation">)</span> <span class="token operator">=></span> <span class="token keyword">void</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>

<span class="token keyword">const</span> <span class="token function-variable function">DragableUploadListItem</span> <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token punctuation">{</span>
  originNode<span class="token punctuation">,</span>
  moveRow<span class="token punctuation">,</span>
  file<span class="token punctuation">,</span>
  fileList<span class="token punctuation">,</span>
<span class="token punctuation">}</span><span class="token operator">:</span> DragableUploadListItemProps<span class="token punctuation">)</span> <span class="token operator">=></span> <span class="token punctuation">{</span>
  <span class="token keyword">const</span> ref <span class="token operator">=</span> useRef<span class="token operator">&lt;</span>HTMLDivElement<span class="token operator">></span><span class="token punctuation">(</span><span class="token keyword">null</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token keyword">const</span> index <span class="token operator">=</span> fileList<span class="token punctuation">.</span><span class="token function">indexOf</span><span class="token punctuation">(</span>file<span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token keyword">const</span> <span class="token punctuation">[</span><span class="token punctuation">{</span> isOver<span class="token punctuation">,</span> dropClassName <span class="token punctuation">}</span><span class="token punctuation">,</span> drop<span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token function">useDrop</span><span class="token punctuation">(</span><span class="token punctuation">{</span>
    accept<span class="token operator">:</span> type<span class="token punctuation">,</span>
    <span class="token function-variable function">collect</span><span class="token operator">:</span> monitor <span class="token operator">=></span> <span class="token punctuation">{</span>
      <span class="token keyword">const</span> <span class="token punctuation">{</span> index<span class="token operator">:</span> dragIndex <span class="token punctuation">}</span> <span class="token operator">=</span> monitor<span class="token punctuation">.</span><span class="token function">getItem</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">||</span> <span class="token punctuation">{</span><span class="token punctuation">}</span><span class="token punctuation">;</span>
      <span class="token keyword">if</span> <span class="token punctuation">(</span>dragIndex <span class="token operator">===</span> index<span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token keyword">return</span> <span class="token punctuation">{</span><span class="token punctuation">}</span><span class="token punctuation">;</span>
      <span class="token punctuation">}</span>
      <span class="token keyword">return</span> <span class="token punctuation">{</span>
        isOver<span class="token operator">:</span> monitor<span class="token punctuation">.</span><span class="token function">isOver</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span>
        dropClassName<span class="token operator">:</span> dragIndex <span class="token operator">&lt;</span> index <span class="token operator">?</span> <span class="token string">' drop-over-downward'</span> <span class="token operator">:</span> <span class="token string">' drop-over-upward'</span><span class="token punctuation">,</span>
      <span class="token punctuation">}</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span><span class="token punctuation">,</span>
    <span class="token function-variable function">drop</span><span class="token operator">:</span> <span class="token punctuation">(</span>item<span class="token operator">:</span> any<span class="token punctuation">)</span> <span class="token operator">=></span> <span class="token punctuation">{</span>
      <span class="token function">moveRow</span><span class="token punctuation">(</span>item<span class="token punctuation">.</span>index<span class="token punctuation">,</span> index<span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span><span class="token punctuation">,</span>
  <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token keyword">const</span> <span class="token punctuation">[</span><span class="token punctuation">,</span> drag<span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token function">useDrag</span><span class="token punctuation">(</span><span class="token punctuation">{</span>
    type<span class="token punctuation">,</span>
    item<span class="token operator">:</span> <span class="token punctuation">{</span> index <span class="token punctuation">}</span><span class="token punctuation">,</span>
    <span class="token function-variable function">collect</span><span class="token operator">:</span> monitor <span class="token operator">=></span> <span class="token punctuation">(</span><span class="token punctuation">{</span>
      isDragging<span class="token operator">:</span> monitor<span class="token punctuation">.</span><span class="token function">isDragging</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span>
    <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">,</span>
  <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token function">drop</span><span class="token punctuation">(</span><span class="token function">drag</span><span class="token punctuation">(</span>ref<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token keyword">const</span> errorNode <span class="token operator">=</span> <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span><span class="token class-name">Tooltip</span></span> <span class="token attr-name">title</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>Upload Error<span class="token punctuation">"</span></span><span class="token punctuation">></span></span><span class="token punctuation">{</span>originNode<span class="token punctuation">.</span>props<span class="token punctuation">.</span>children<span class="token punctuation">}</span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span><span class="token class-name">Tooltip</span></span><span class="token punctuation">></span></span><span class="token punctuation">;</span>
  <span class="token keyword">return</span> <span class="token punctuation">(</span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span>
      <span class="token attr-name">ref</span><span class="token script language-javascript"><span class="token script-punctuation punctuation">=</span><span class="token punctuation">{</span>ref<span class="token punctuation">}</span></span>
      <span class="token attr-name">className</span><span class="token script language-javascript"><span class="token script-punctuation punctuation">=</span><span class="token punctuation">{</span><span class="token template-string"><span class="token template-punctuation string">\`</span><span class="token string">ant-upload-draggable-list-item </span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">\${</span>isOver <span class="token operator">?</span> dropClassName <span class="token operator">:</span> <span class="token string">''</span><span class="token interpolation-punctuation punctuation">}</span></span><span class="token template-punctuation string">\`</span></span><span class="token punctuation">}</span></span>
      <span class="token attr-name">style</span><span class="token script language-javascript"><span class="token script-punctuation punctuation">=</span><span class="token punctuation">{</span><span class="token punctuation">{</span> cursor<span class="token operator">:</span> <span class="token string">'move'</span> <span class="token punctuation">}</span><span class="token punctuation">}</span></span>
    <span class="token punctuation">></span></span>
      <span class="token punctuation">{</span>file<span class="token punctuation">.</span>status <span class="token operator">===</span> <span class="token string">'error'</span> <span class="token operator">?</span> errorNode <span class="token operator">:</span> originNode<span class="token punctuation">}</span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">></span></span>
  <span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span><span class="token punctuation">;</span>

<span class="token keyword">const</span> App<span class="token operator">:</span> React<span class="token punctuation">.</span><span class="token function-variable function">FC</span> <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=></span> <span class="token punctuation">{</span>
  <span class="token keyword">const</span> <span class="token punctuation">[</span>fileList<span class="token punctuation">,</span> setFileList<span class="token punctuation">]</span> <span class="token operator">=</span> useState<span class="token operator">&lt;</span>UploadFile<span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token operator">></span><span class="token punctuation">(</span><span class="token punctuation">[</span>
    <span class="token punctuation">{</span>
      uid<span class="token operator">:</span> <span class="token string">'-1'</span><span class="token punctuation">,</span>
      name<span class="token operator">:</span> <span class="token string">'image1.png'</span><span class="token punctuation">,</span>
      status<span class="token operator">:</span> <span class="token string">'done'</span><span class="token punctuation">,</span>
      url<span class="token operator">:</span> <span class="token string">'https://zos.alipayobjects.com/rmsportal/jkjgkEfvpUPVyRjUImniVslZfWPnJuuZ.png'</span><span class="token punctuation">,</span>
    <span class="token punctuation">}</span><span class="token punctuation">,</span>
    <span class="token punctuation">{</span>
      uid<span class="token operator">:</span> <span class="token string">'-2'</span><span class="token punctuation">,</span>
      name<span class="token operator">:</span> <span class="token string">'image2.png'</span><span class="token punctuation">,</span>
      status<span class="token operator">:</span> <span class="token string">'done'</span><span class="token punctuation">,</span>
      url<span class="token operator">:</span> <span class="token string">'https://zos.alipayobjects.com/rmsportal/jkjgkEfvpUPVyRjUImniVslZfWPnJuuZ.png'</span><span class="token punctuation">,</span>
    <span class="token punctuation">}</span><span class="token punctuation">,</span>
    <span class="token punctuation">{</span>
      uid<span class="token operator">:</span> <span class="token string">'-3'</span><span class="token punctuation">,</span>
      name<span class="token operator">:</span> <span class="token string">'image3.png'</span><span class="token punctuation">,</span>
      status<span class="token operator">:</span> <span class="token string">'done'</span><span class="token punctuation">,</span>
      url<span class="token operator">:</span> <span class="token string">'https://zos.alipayobjects.com/rmsportal/jkjgkEfvpUPVyRjUImniVslZfWPnJuuZ.png'</span><span class="token punctuation">,</span>
    <span class="token punctuation">}</span><span class="token punctuation">,</span>
    <span class="token punctuation">{</span>
      uid<span class="token operator">:</span> <span class="token string">'-4'</span><span class="token punctuation">,</span>
      name<span class="token operator">:</span> <span class="token string">'image4.png'</span><span class="token punctuation">,</span>
      status<span class="token operator">:</span> <span class="token string">'done'</span><span class="token punctuation">,</span>
      url<span class="token operator">:</span> <span class="token string">'https://zos.alipayobjects.com/rmsportal/jkjgkEfvpUPVyRjUImniVslZfWPnJuuZ.png'</span><span class="token punctuation">,</span>
    <span class="token punctuation">}</span><span class="token punctuation">,</span>
    <span class="token punctuation">{</span>
      uid<span class="token operator">:</span> <span class="token string">'-5'</span><span class="token punctuation">,</span>
      name<span class="token operator">:</span> <span class="token string">'image.png'</span><span class="token punctuation">,</span>
      status<span class="token operator">:</span> <span class="token string">'error'</span><span class="token punctuation">,</span>
    <span class="token punctuation">}</span><span class="token punctuation">,</span>
  <span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

  <span class="token keyword">const</span> moveRow <span class="token operator">=</span> <span class="token function">useCallback</span><span class="token punctuation">(</span>
    <span class="token punctuation">(</span>dragIndex<span class="token operator">:</span> number<span class="token punctuation">,</span> hoverIndex<span class="token operator">:</span> number<span class="token punctuation">)</span> <span class="token operator">=></span> <span class="token punctuation">{</span>
      <span class="token keyword">const</span> dragRow <span class="token operator">=</span> fileList<span class="token punctuation">[</span>dragIndex<span class="token punctuation">]</span><span class="token punctuation">;</span>
      <span class="token function">setFileList</span><span class="token punctuation">(</span>
        <span class="token function">update</span><span class="token punctuation">(</span>fileList<span class="token punctuation">,</span> <span class="token punctuation">{</span>
          $splice<span class="token operator">:</span> <span class="token punctuation">[</span>
            <span class="token punctuation">[</span>dragIndex<span class="token punctuation">,</span> <span class="token number">1</span><span class="token punctuation">]</span><span class="token punctuation">,</span>
            <span class="token punctuation">[</span>hoverIndex<span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">,</span> dragRow<span class="token punctuation">]</span><span class="token punctuation">,</span>
          <span class="token punctuation">]</span><span class="token punctuation">,</span>
        <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">,</span>
      <span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span><span class="token punctuation">,</span>
    <span class="token punctuation">[</span>fileList<span class="token punctuation">]</span><span class="token punctuation">,</span>
  <span class="token punctuation">)</span><span class="token punctuation">;</span>

  <span class="token keyword">const</span> onChange<span class="token operator">:</span> UploadProps<span class="token punctuation">[</span><span class="token string">'onChange'</span><span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token punctuation">{</span> fileList<span class="token operator">:</span> newFileList <span class="token punctuation">}</span><span class="token punctuation">)</span> <span class="token operator">=></span> <span class="token punctuation">{</span>
    <span class="token function">setFileList</span><span class="token punctuation">(</span>newFileList<span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token punctuation">}</span><span class="token punctuation">;</span>

  <span class="token keyword">return</span> <span class="token punctuation">(</span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span><span class="token class-name">DndProvider</span></span> <span class="token attr-name">backend</span><span class="token script language-javascript"><span class="token script-punctuation punctuation">=</span><span class="token punctuation">{</span>HTML5Backend<span class="token punctuation">}</span></span><span class="token punctuation">></span></span>
      <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span><span class="token class-name">Upload</span></span>
        <span class="token attr-name">action</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>https://www.mocky.io/v2/5cc8019d300000980a055e76<span class="token punctuation">"</span></span>
        <span class="token attr-name">fileList</span><span class="token script language-javascript"><span class="token script-punctuation punctuation">=</span><span class="token punctuation">{</span>fileList<span class="token punctuation">}</span></span>
        <span class="token attr-name">onChange</span><span class="token script language-javascript"><span class="token script-punctuation punctuation">=</span><span class="token punctuation">{</span>onChange<span class="token punctuation">}</span></span>
        <span class="token attr-name">itemRender</span><span class="token script language-javascript"><span class="token script-punctuation punctuation">=</span><span class="token punctuation">{</span><span class="token punctuation">(</span>originNode<span class="token punctuation">,</span> file<span class="token punctuation">,</span> currFileList<span class="token punctuation">)</span> <span class="token operator">=></span> <span class="token punctuation">(</span>
          <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span><span class="token class-name">DragableUploadListItem</span></span>
            <span class="token attr-name">originNode</span><span class="token script language-javascript"><span class="token script-punctuation punctuation">=</span><span class="token punctuation">{</span>originNode<span class="token punctuation">}</span></span>
            <span class="token attr-name">file</span><span class="token script language-javascript"><span class="token script-punctuation punctuation">=</span><span class="token punctuation">{</span>file<span class="token punctuation">}</span></span>
            <span class="token attr-name">fileList</span><span class="token script language-javascript"><span class="token script-punctuation punctuation">=</span><span class="token punctuation">{</span>currFileList<span class="token punctuation">}</span></span>
            <span class="token attr-name">moveRow</span><span class="token script language-javascript"><span class="token script-punctuation punctuation">=</span><span class="token punctuation">{</span>moveRow<span class="token punctuation">}</span></span>
          <span class="token punctuation">/></span></span>
        <span class="token punctuation">)</span><span class="token punctuation">}</span></span>
      <span class="token punctuation">></span></span>
        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span><span class="token class-name">Button</span></span> <span class="token attr-name">icon</span><span class="token script language-javascript"><span class="token script-punctuation punctuation">=</span><span class="token punctuation">{</span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span><span class="token class-name">UploadOutlined</span></span> <span class="token punctuation">/></span></span><span class="token punctuation">}</span></span><span class="token punctuation">></span></span>Click to Upload<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span><span class="token class-name">Button</span></span><span class="token punctuation">></span></span>
      <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span><span class="token class-name">Upload</span></span><span class="token punctuation">></span></span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span><span class="token class-name">DndProvider</span></span><span class="token punctuation">></span></span>
  <span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span><span class="token punctuation">;</span>

<span class="token keyword">export</span> <span class="token keyword">default</span> App<span class="token punctuation">;</span>`,jsx:`<span class="token keyword">import</span> <span class="token punctuation">{</span> UploadOutlined <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">'@ant-design/icons'</span><span class="token punctuation">;</span>
<span class="token keyword">import</span> <span class="token punctuation">{</span> Button<span class="token punctuation">,</span> Tooltip<span class="token punctuation">,</span> Upload <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">'antd'</span><span class="token punctuation">;</span>
<span class="token keyword">import</span> update <span class="token keyword">from</span> <span class="token string">'immutability-helper'</span><span class="token punctuation">;</span>
<span class="token keyword">import</span> React<span class="token punctuation">,</span> <span class="token punctuation">{</span> useCallback<span class="token punctuation">,</span> useRef<span class="token punctuation">,</span> useState <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">'react'</span><span class="token punctuation">;</span>
<span class="token keyword">import</span> <span class="token punctuation">{</span> DndProvider<span class="token punctuation">,</span> useDrag<span class="token punctuation">,</span> useDrop <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">'react-dnd'</span><span class="token punctuation">;</span>
<span class="token keyword">import</span> <span class="token punctuation">{</span> HTML5Backend <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">'react-dnd-html5-backend'</span><span class="token punctuation">;</span>
<span class="token keyword">const</span> type <span class="token operator">=</span> <span class="token string">'DragableUploadList'</span><span class="token punctuation">;</span>
<span class="token keyword">const</span> <span class="token function-variable function">DragableUploadListItem</span> <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token parameter"><span class="token punctuation">{</span> originNode<span class="token punctuation">,</span> moveRow<span class="token punctuation">,</span> file<span class="token punctuation">,</span> fileList <span class="token punctuation">}</span></span><span class="token punctuation">)</span> <span class="token operator">=></span> <span class="token punctuation">{</span>
  <span class="token keyword">const</span> ref <span class="token operator">=</span> <span class="token function">useRef</span><span class="token punctuation">(</span><span class="token keyword">null</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token keyword">const</span> index <span class="token operator">=</span> fileList<span class="token punctuation">.</span><span class="token function">indexOf</span><span class="token punctuation">(</span>file<span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token keyword">const</span> <span class="token punctuation">[</span><span class="token punctuation">{</span> isOver<span class="token punctuation">,</span> dropClassName <span class="token punctuation">}</span><span class="token punctuation">,</span> drop<span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token function">useDrop</span><span class="token punctuation">(</span><span class="token punctuation">{</span>
    <span class="token literal-property property">accept</span><span class="token operator">:</span> type<span class="token punctuation">,</span>
    <span class="token function-variable function">collect</span><span class="token operator">:</span> <span class="token punctuation">(</span><span class="token parameter">monitor</span><span class="token punctuation">)</span> <span class="token operator">=></span> <span class="token punctuation">{</span>
      <span class="token keyword">const</span> <span class="token punctuation">{</span> <span class="token literal-property property">index</span><span class="token operator">:</span> dragIndex <span class="token punctuation">}</span> <span class="token operator">=</span> monitor<span class="token punctuation">.</span><span class="token function">getItem</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">||</span> <span class="token punctuation">{</span><span class="token punctuation">}</span><span class="token punctuation">;</span>
      <span class="token keyword">if</span> <span class="token punctuation">(</span>dragIndex <span class="token operator">===</span> index<span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token keyword">return</span> <span class="token punctuation">{</span><span class="token punctuation">}</span><span class="token punctuation">;</span>
      <span class="token punctuation">}</span>
      <span class="token keyword">return</span> <span class="token punctuation">{</span>
        <span class="token literal-property property">isOver</span><span class="token operator">:</span> monitor<span class="token punctuation">.</span><span class="token function">isOver</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span>
        <span class="token literal-property property">dropClassName</span><span class="token operator">:</span> dragIndex <span class="token operator">&lt;</span> index <span class="token operator">?</span> <span class="token string">' drop-over-downward'</span> <span class="token operator">:</span> <span class="token string">' drop-over-upward'</span><span class="token punctuation">,</span>
      <span class="token punctuation">}</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span><span class="token punctuation">,</span>
    <span class="token function-variable function">drop</span><span class="token operator">:</span> <span class="token punctuation">(</span><span class="token parameter">item</span><span class="token punctuation">)</span> <span class="token operator">=></span> <span class="token punctuation">{</span>
      <span class="token function">moveRow</span><span class="token punctuation">(</span>item<span class="token punctuation">.</span>index<span class="token punctuation">,</span> index<span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span><span class="token punctuation">,</span>
  <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token keyword">const</span> <span class="token punctuation">[</span><span class="token punctuation">,</span> drag<span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token function">useDrag</span><span class="token punctuation">(</span><span class="token punctuation">{</span>
    type<span class="token punctuation">,</span>
    <span class="token literal-property property">item</span><span class="token operator">:</span> <span class="token punctuation">{</span>
      index<span class="token punctuation">,</span>
    <span class="token punctuation">}</span><span class="token punctuation">,</span>
    <span class="token function-variable function">collect</span><span class="token operator">:</span> <span class="token punctuation">(</span><span class="token parameter">monitor</span><span class="token punctuation">)</span> <span class="token operator">=></span> <span class="token punctuation">(</span><span class="token punctuation">{</span>
      <span class="token literal-property property">isDragging</span><span class="token operator">:</span> monitor<span class="token punctuation">.</span><span class="token function">isDragging</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span>
    <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">,</span>
  <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token function">drop</span><span class="token punctuation">(</span><span class="token function">drag</span><span class="token punctuation">(</span>ref<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token keyword">const</span> errorNode <span class="token operator">=</span> <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span><span class="token class-name">Tooltip</span></span> <span class="token attr-name">title</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>Upload Error<span class="token punctuation">"</span></span><span class="token punctuation">></span></span><span class="token punctuation">{</span>originNode<span class="token punctuation">.</span>props<span class="token punctuation">.</span>children<span class="token punctuation">}</span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span><span class="token class-name">Tooltip</span></span><span class="token punctuation">></span></span><span class="token punctuation">;</span>
  <span class="token keyword">return</span> <span class="token punctuation">(</span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span>
      <span class="token attr-name">ref</span><span class="token script language-javascript"><span class="token script-punctuation punctuation">=</span><span class="token punctuation">{</span>ref<span class="token punctuation">}</span></span>
      <span class="token attr-name">className</span><span class="token script language-javascript"><span class="token script-punctuation punctuation">=</span><span class="token punctuation">{</span><span class="token template-string"><span class="token template-punctuation string">\`</span><span class="token string">ant-upload-draggable-list-item </span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">\${</span>isOver <span class="token operator">?</span> dropClassName <span class="token operator">:</span> <span class="token string">''</span><span class="token interpolation-punctuation punctuation">}</span></span><span class="token template-punctuation string">\`</span></span><span class="token punctuation">}</span></span>
      <span class="token attr-name">style</span><span class="token script language-javascript"><span class="token script-punctuation punctuation">=</span><span class="token punctuation">{</span><span class="token punctuation">{</span>
        <span class="token literal-property property">cursor</span><span class="token operator">:</span> <span class="token string">'move'</span><span class="token punctuation">,</span>
      <span class="token punctuation">}</span><span class="token punctuation">}</span></span>
    <span class="token punctuation">></span></span>
      <span class="token punctuation">{</span>file<span class="token punctuation">.</span>status <span class="token operator">===</span> <span class="token string">'error'</span> <span class="token operator">?</span> errorNode <span class="token operator">:</span> originNode<span class="token punctuation">}</span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">></span></span>
  <span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span><span class="token punctuation">;</span>
<span class="token keyword">const</span> <span class="token function-variable function">App</span> <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=></span> <span class="token punctuation">{</span>
  <span class="token keyword">const</span> <span class="token punctuation">[</span>fileList<span class="token punctuation">,</span> setFileList<span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token function">useState</span><span class="token punctuation">(</span><span class="token punctuation">[</span>
    <span class="token punctuation">{</span>
      <span class="token literal-property property">uid</span><span class="token operator">:</span> <span class="token string">'-1'</span><span class="token punctuation">,</span>
      <span class="token literal-property property">name</span><span class="token operator">:</span> <span class="token string">'image1.png'</span><span class="token punctuation">,</span>
      <span class="token literal-property property">status</span><span class="token operator">:</span> <span class="token string">'done'</span><span class="token punctuation">,</span>
      <span class="token literal-property property">url</span><span class="token operator">:</span> <span class="token string">'https://zos.alipayobjects.com/rmsportal/jkjgkEfvpUPVyRjUImniVslZfWPnJuuZ.png'</span><span class="token punctuation">,</span>
    <span class="token punctuation">}</span><span class="token punctuation">,</span>
    <span class="token punctuation">{</span>
      <span class="token literal-property property">uid</span><span class="token operator">:</span> <span class="token string">'-2'</span><span class="token punctuation">,</span>
      <span class="token literal-property property">name</span><span class="token operator">:</span> <span class="token string">'image2.png'</span><span class="token punctuation">,</span>
      <span class="token literal-property property">status</span><span class="token operator">:</span> <span class="token string">'done'</span><span class="token punctuation">,</span>
      <span class="token literal-property property">url</span><span class="token operator">:</span> <span class="token string">'https://zos.alipayobjects.com/rmsportal/jkjgkEfvpUPVyRjUImniVslZfWPnJuuZ.png'</span><span class="token punctuation">,</span>
    <span class="token punctuation">}</span><span class="token punctuation">,</span>
    <span class="token punctuation">{</span>
      <span class="token literal-property property">uid</span><span class="token operator">:</span> <span class="token string">'-3'</span><span class="token punctuation">,</span>
      <span class="token literal-property property">name</span><span class="token operator">:</span> <span class="token string">'image3.png'</span><span class="token punctuation">,</span>
      <span class="token literal-property property">status</span><span class="token operator">:</span> <span class="token string">'done'</span><span class="token punctuation">,</span>
      <span class="token literal-property property">url</span><span class="token operator">:</span> <span class="token string">'https://zos.alipayobjects.com/rmsportal/jkjgkEfvpUPVyRjUImniVslZfWPnJuuZ.png'</span><span class="token punctuation">,</span>
    <span class="token punctuation">}</span><span class="token punctuation">,</span>
    <span class="token punctuation">{</span>
      <span class="token literal-property property">uid</span><span class="token operator">:</span> <span class="token string">'-4'</span><span class="token punctuation">,</span>
      <span class="token literal-property property">name</span><span class="token operator">:</span> <span class="token string">'image4.png'</span><span class="token punctuation">,</span>
      <span class="token literal-property property">status</span><span class="token operator">:</span> <span class="token string">'done'</span><span class="token punctuation">,</span>
      <span class="token literal-property property">url</span><span class="token operator">:</span> <span class="token string">'https://zos.alipayobjects.com/rmsportal/jkjgkEfvpUPVyRjUImniVslZfWPnJuuZ.png'</span><span class="token punctuation">,</span>
    <span class="token punctuation">}</span><span class="token punctuation">,</span>
    <span class="token punctuation">{</span>
      <span class="token literal-property property">uid</span><span class="token operator">:</span> <span class="token string">'-5'</span><span class="token punctuation">,</span>
      <span class="token literal-property property">name</span><span class="token operator">:</span> <span class="token string">'image.png'</span><span class="token punctuation">,</span>
      <span class="token literal-property property">status</span><span class="token operator">:</span> <span class="token string">'error'</span><span class="token punctuation">,</span>
    <span class="token punctuation">}</span><span class="token punctuation">,</span>
  <span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token keyword">const</span> moveRow <span class="token operator">=</span> <span class="token function">useCallback</span><span class="token punctuation">(</span>
    <span class="token punctuation">(</span><span class="token parameter">dragIndex<span class="token punctuation">,</span> hoverIndex</span><span class="token punctuation">)</span> <span class="token operator">=></span> <span class="token punctuation">{</span>
      <span class="token keyword">const</span> dragRow <span class="token operator">=</span> fileList<span class="token punctuation">[</span>dragIndex<span class="token punctuation">]</span><span class="token punctuation">;</span>
      <span class="token function">setFileList</span><span class="token punctuation">(</span>
        <span class="token function">update</span><span class="token punctuation">(</span>fileList<span class="token punctuation">,</span> <span class="token punctuation">{</span>
          <span class="token literal-property property">$splice</span><span class="token operator">:</span> <span class="token punctuation">[</span>
            <span class="token punctuation">[</span>dragIndex<span class="token punctuation">,</span> <span class="token number">1</span><span class="token punctuation">]</span><span class="token punctuation">,</span>
            <span class="token punctuation">[</span>hoverIndex<span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">,</span> dragRow<span class="token punctuation">]</span><span class="token punctuation">,</span>
          <span class="token punctuation">]</span><span class="token punctuation">,</span>
        <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">,</span>
      <span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span><span class="token punctuation">,</span>
    <span class="token punctuation">[</span>fileList<span class="token punctuation">]</span><span class="token punctuation">,</span>
  <span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token keyword">const</span> <span class="token function-variable function">onChange</span> <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token parameter"><span class="token punctuation">{</span> <span class="token literal-property property">fileList</span><span class="token operator">:</span> newFileList <span class="token punctuation">}</span></span><span class="token punctuation">)</span> <span class="token operator">=></span> <span class="token punctuation">{</span>
    <span class="token function">setFileList</span><span class="token punctuation">(</span>newFileList<span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token punctuation">}</span><span class="token punctuation">;</span>
  <span class="token keyword">return</span> <span class="token punctuation">(</span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span><span class="token class-name">DndProvider</span></span> <span class="token attr-name">backend</span><span class="token script language-javascript"><span class="token script-punctuation punctuation">=</span><span class="token punctuation">{</span>HTML5Backend<span class="token punctuation">}</span></span><span class="token punctuation">></span></span>
      <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span><span class="token class-name">Upload</span></span>
        <span class="token attr-name">action</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>https://www.mocky.io/v2/5cc8019d300000980a055e76<span class="token punctuation">"</span></span>
        <span class="token attr-name">fileList</span><span class="token script language-javascript"><span class="token script-punctuation punctuation">=</span><span class="token punctuation">{</span>fileList<span class="token punctuation">}</span></span>
        <span class="token attr-name">onChange</span><span class="token script language-javascript"><span class="token script-punctuation punctuation">=</span><span class="token punctuation">{</span>onChange<span class="token punctuation">}</span></span>
        <span class="token attr-name">itemRender</span><span class="token script language-javascript"><span class="token script-punctuation punctuation">=</span><span class="token punctuation">{</span><span class="token punctuation">(</span><span class="token parameter">originNode<span class="token punctuation">,</span> file<span class="token punctuation">,</span> currFileList</span><span class="token punctuation">)</span> <span class="token operator">=></span> <span class="token punctuation">(</span>
          <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span><span class="token class-name">DragableUploadListItem</span></span>
            <span class="token attr-name">originNode</span><span class="token script language-javascript"><span class="token script-punctuation punctuation">=</span><span class="token punctuation">{</span>originNode<span class="token punctuation">}</span></span>
            <span class="token attr-name">file</span><span class="token script language-javascript"><span class="token script-punctuation punctuation">=</span><span class="token punctuation">{</span>file<span class="token punctuation">}</span></span>
            <span class="token attr-name">fileList</span><span class="token script language-javascript"><span class="token script-punctuation punctuation">=</span><span class="token punctuation">{</span>currFileList<span class="token punctuation">}</span></span>
            <span class="token attr-name">moveRow</span><span class="token script language-javascript"><span class="token script-punctuation punctuation">=</span><span class="token punctuation">{</span>moveRow<span class="token punctuation">}</span></span>
          <span class="token punctuation">/></span></span>
        <span class="token punctuation">)</span><span class="token punctuation">}</span></span>
      <span class="token punctuation">></span></span>
        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span><span class="token class-name">Button</span></span> <span class="token attr-name">icon</span><span class="token script language-javascript"><span class="token script-punctuation punctuation">=</span><span class="token punctuation">{</span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span><span class="token class-name">UploadOutlined</span></span> <span class="token punctuation">/></span></span><span class="token punctuation">}</span></span><span class="token punctuation">></span></span>Click to Upload<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span><span class="token class-name">Button</span></span><span class="token punctuation">></span></span>
      <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span><span class="token class-name">Upload</span></span><span class="token punctuation">></span></span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span><span class="token class-name">DndProvider</span></span><span class="token punctuation">></span></span>
  <span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span><span class="token punctuation">;</span>
<span class="token keyword">export</span> <span class="token keyword">default</span> App<span class="token punctuation">;</span>
`},preview:function(){var N=g(0),H=g(47);function R(s){return R=typeof Symbol=="function"&&typeof Symbol.iterator=="symbol"?function(u){return typeof u}:function(u){return u&&typeof Symbol=="function"&&u.constructor===Symbol&&u!==Symbol.prototype?"symbol":typeof u},R(s)}var F=g(61),O=g(12),S=$(g(4075)),D=W(g(0)),V=g(4079),M=g(4080);function C(s){if(typeof WeakMap!="function")return null;var u=new WeakMap,e=new WeakMap;return(C=function(m){return m?e:u})(s)}function W(s,u){if(!u&&s&&s.__esModule)return s;if(s===null||R(s)!=="object"&&typeof s!="function")return{default:s};var e=C(u);if(e&&e.has(s))return e.get(s);var d={},m=Object.defineProperty&&Object.getOwnPropertyDescriptor;for(var b in s)if(b!=="default"&&Object.prototype.hasOwnProperty.call(s,b)){var U=m?Object.getOwnPropertyDescriptor(s,b):null;U&&(U.get||U.set)?Object.defineProperty(d,b,U):d[b]=s[b]}return d.default=s,e&&e.set(s,d),d}function $(s){return s&&s.__esModule?s:{default:s}}function nn(s,u){return dn(s)||pn(s,u)||_(s,u)||hn()}function hn(){throw new TypeError(`Invalid attempt to destructure non-iterable instance.
In order to be iterable, non-array objects must have a [Symbol.iterator]() method.`)}function _(s,u){if(s){if(typeof s=="string")return mn(s,u);var e=Object.prototype.toString.call(s).slice(8,-1);if(e==="Object"&&s.constructor&&(e=s.constructor.name),e==="Map"||e==="Set")return Array.from(s);if(e==="Arguments"||/^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(e))return mn(s,u)}}function mn(s,u){(u==null||u>s.length)&&(u=s.length);for(var e=0,d=new Array(u);e<u;e++)d[e]=s[e];return d}function pn(s,u){var e=s==null?null:typeof Symbol!="undefined"&&s[Symbol.iterator]||s["@@iterator"];if(e!=null){var d,m,b,U,E=[],L=!0,I=!1;try{if(b=(e=e.call(s)).next,u===0){if(Object(e)!==e)return;L=!1}else for(;!(L=(d=b.call(e)).done)&&(E.push(d.value),E.length!==u);L=!0);}catch(Z){I=!0,m=Z}finally{try{if(!L&&e.return!=null&&(U=e.return(),Object(U)!==U))return}finally{if(I)throw m}}return E}}function dn(s){if(Array.isArray(s))return s}var z="DragableUploadList",J=function(u){var e=u.originNode,d=u.moveRow,m=u.file,b=u.fileList,U=(0,D.useRef)(null),E=b.indexOf(m),L=(0,V.useDrop)({accept:z,collect:function(ln){var en=ln.getItem()||{},an=en.index;return an===E?{}:{isOver:ln.isOver(),dropClassName:an<E?" drop-over-downward":" drop-over-upward"}},drop:function(ln){d(ln.index,E)}}),I=nn(L,2),Z=I[0],cn=Z.isOver,K=Z.dropClassName,rn=I[1],yn=(0,V.useDrag)({type:z,item:{index:E},collect:function(ln){return{isDragging:ln.isDragging()}}}),wn=nn(yn,2),on=wn[1];rn(on(U));var fn=D.default.createElement(O.Tooltip,{title:"Upload Error"},e.props.children);return D.default.createElement("div",{ref:U,className:"ant-upload-draggable-list-item ".concat(cn?K:""),style:{cursor:"move"}},m.status==="error"?fn:e)},t=function(){var u=(0,D.useState)([{uid:"-1",name:"image1.png",status:"done",url:"https://zos.alipayobjects.com/rmsportal/jkjgkEfvpUPVyRjUImniVslZfWPnJuuZ.png"},{uid:"-2",name:"image2.png",status:"done",url:"https://zos.alipayobjects.com/rmsportal/jkjgkEfvpUPVyRjUImniVslZfWPnJuuZ.png"},{uid:"-3",name:"image3.png",status:"done",url:"https://zos.alipayobjects.com/rmsportal/jkjgkEfvpUPVyRjUImniVslZfWPnJuuZ.png"},{uid:"-4",name:"image4.png",status:"done",url:"https://zos.alipayobjects.com/rmsportal/jkjgkEfvpUPVyRjUImniVslZfWPnJuuZ.png"},{uid:"-5",name:"image.png",status:"error"}]),e=nn(u,2),d=e[0],m=e[1],b=(0,D.useCallback)(function(E,L){var I=d[E];m((0,S.default)(d,{$splice:[[E,1],[L,0,I]]}))},[d]),U=function(L){var I=L.fileList;m(I)};return D.default.createElement(V.DndProvider,{backend:M.HTML5Backend},D.default.createElement(O.Upload,{action:"https://www.mocky.io/v2/5cc8019d300000980a055e76",fileList:d,onChange:U,itemRender:function(L,I,Z){return D.default.createElement(J,{originNode:L,file:I,fileList:Z,moveRow:b})}},D.default.createElement(O.Button,{icon:D.default.createElement(F.UploadOutlined,null)},"Click to Upload")))},a=t;return N.createElement(a)},style:`#components-upload-demo-drag-sorting .ant-upload-draggable-list-item {
  border-top: 2px dashed rgba(0, 0, 0, 0);
  border-bottom: 2px dashed rgba(0, 0, 0, 0);
}
#components-upload-demo-drag-sorting .ant-upload-draggable-list-item.drop-over-downward {
  border-bottom-color: #1890ff;
}
#components-upload-demo-drag-sorting .ant-upload-draggable-list-item.drop-over-upward {
  border-top-color: #1890ff;
}`,highlightedStyle:`<span class="token selector"><span class="token id">#components-upload-demo-drag-sorting</span> <span class="token class">.ant-upload-draggable-list-item</span> </span><span class="token punctuation">{</span>
  <span class="token property">border-top</span><span class="token punctuation">:</span> <span class="token number">2</span>px dashed <span class="token function">rgba</span><span class="token punctuation">(</span><span class="token number">0</span>, <span class="token number">0</span>, <span class="token number">0</span>, <span class="token number">0</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token property">border-bottom</span><span class="token punctuation">:</span> <span class="token number">2</span>px dashed <span class="token function">rgba</span><span class="token punctuation">(</span><span class="token number">0</span>, <span class="token number">0</span>, <span class="token number">0</span>, <span class="token number">0</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>
<span class="token selector"><span class="token id">#components-upload-demo-drag-sorting</span> <span class="token class">.ant-upload-draggable-list-item.drop-over-downward</span> </span><span class="token punctuation">{</span>
  <span class="token property">border-bottom-color</span><span class="token punctuation">:</span> <span class="token hexcode">#1890ff</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>
<span class="token selector"><span class="token id">#components-upload-demo-drag-sorting</span> <span class="token class">.ant-upload-draggable-list-item.drop-over-upward</span> </span><span class="token punctuation">{</span>
  <span class="token property">border-top-color</span><span class="token punctuation">:</span> <span class="token hexcode">#1890ff</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>`}},4805:function(Y,kn,g){Y.exports={content:{"zh-CN":[["p","\u628A\u6587\u4EF6\u62D6\u5165\u6307\u5B9A\u533A\u57DF\uFF0C\u5B8C\u6210\u4E0A\u4F20\uFF0C\u540C\u6837\u652F\u6301\u70B9\u51FB\u4E0A\u4F20\u3002"],["p","\u8BBE\u7F6E ",["code","multiple"]," \u540E\uFF0C\u5728 ",["code","IE10+"]," \u53EF\u4EE5\u4E00\u6B21\u4E0A\u4F20\u591A\u4E2A\u6587\u4EF6\u3002"]],"en-US":[["p","You can drag files to a specific area, to upload. Alternatively, you can also upload by selecting."],["p","We can upload serveral files at once in modern browsers by giving the input the ",["code","multiple"]," attribute."]]},meta:{order:5,title:{"zh-CN":"\u62D6\u62FD\u4E0A\u4F20","en-US":"Drag and Drop"},filename:"components/upload/demo/drag.md",id:"components-upload-demo-drag"},toc:["ul",["li",["a",{className:"bisheng-toc-h2",href:"#zh-CN",title:"zh-CN"},"zh-CN"]],["li",["a",{className:"bisheng-toc-h2",href:"#en-US",title:"en-US"},"en-US"]]],highlightedCode:["pre",{lang:"tsx",highlighted:`import { InboxOutlined } from <span class="token string">'@ant-design/icons'</span><span class="token comment" spellcheck="true">;</span>
import type { UploadProps } from <span class="token string">'antd'</span><span class="token comment" spellcheck="true">;</span>
import { message<span class="token punctuation">,</span> Upload } from <span class="token string">'antd'</span><span class="token comment" spellcheck="true">;</span>
import React from <span class="token string">'react'</span><span class="token comment" spellcheck="true">;</span>

<span class="token keyword">const</span> { Dragger } <span class="token operator">=</span> Upload<span class="token comment" spellcheck="true">;</span>

<span class="token keyword">const</span> props<span class="token punctuation">:</span> UploadProps <span class="token operator">=</span> {
  name<span class="token punctuation">:</span> <span class="token string">'file'</span><span class="token punctuation">,</span>
  multiple<span class="token punctuation">:</span> <span class="token boolean">true</span><span class="token punctuation">,</span>
  action<span class="token punctuation">:</span> <span class="token string">'https://www.mocky.io/v2/5cc8019d300000980a055e76'</span><span class="token punctuation">,</span>
  <span class="token function">onChange</span><span class="token punctuation">(</span>info<span class="token punctuation">)</span> {
    <span class="token keyword">const</span> { status } <span class="token operator">=</span> info<span class="token punctuation">.</span>file<span class="token comment" spellcheck="true">;</span>
    <span class="token keyword">if</span> <span class="token punctuation">(</span>status !<span class="token operator">==</span> <span class="token string">'uploading'</span><span class="token punctuation">)</span> {
      console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>info<span class="token punctuation">.</span>file<span class="token punctuation">,</span> info<span class="token punctuation">.</span>fileList<span class="token punctuation">)</span><span class="token comment" spellcheck="true">;</span>
    }
    <span class="token keyword">if</span> <span class="token punctuation">(</span>status <span class="token operator">==</span><span class="token operator">=</span> <span class="token string">'done'</span><span class="token punctuation">)</span> {
      message<span class="token punctuation">.</span><span class="token function">success</span><span class="token punctuation">(</span>\`\${info<span class="token punctuation">.</span>file<span class="token punctuation">.</span>name} file uploaded successfully<span class="token punctuation">.</span>\`<span class="token punctuation">)</span><span class="token comment" spellcheck="true">;</span>
    } <span class="token keyword">else</span> <span class="token keyword">if</span> <span class="token punctuation">(</span>status <span class="token operator">==</span><span class="token operator">=</span> <span class="token string">'error'</span><span class="token punctuation">)</span> {
      message<span class="token punctuation">.</span><span class="token function">error</span><span class="token punctuation">(</span>\`\${info<span class="token punctuation">.</span>file<span class="token punctuation">.</span>name} file upload failed<span class="token punctuation">.</span>\`<span class="token punctuation">)</span><span class="token comment" spellcheck="true">;</span>
    }
  }<span class="token punctuation">,</span>
  <span class="token function">onDrop</span><span class="token punctuation">(</span>e<span class="token punctuation">)</span> {
    console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">'Dropped files'</span><span class="token punctuation">,</span> e<span class="token punctuation">.</span>dataTransfer<span class="token punctuation">.</span>files<span class="token punctuation">)</span><span class="token comment" spellcheck="true">;</span>
  }<span class="token punctuation">,</span>
}<span class="token comment" spellcheck="true">;</span>

<span class="token keyword">const</span> App<span class="token punctuation">:</span> React<span class="token punctuation">.</span>FC <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=</span><span class="token operator">></span> <span class="token punctuation">(</span>
  <span class="token operator">&lt;</span>Dragger {<span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token punctuation">.</span>props}<span class="token operator">></span>
    <span class="token operator">&lt;</span>p className<span class="token operator">=</span><span class="token string">"ant-upload-drag-icon"</span><span class="token operator">></span>
      <span class="token operator">&lt;</span>InboxOutlined <span class="token operator">/</span><span class="token operator">></span>
    <span class="token operator">&lt;</span><span class="token operator">/</span>p<span class="token operator">></span>
    <span class="token operator">&lt;</span>p className<span class="token operator">=</span><span class="token string">"ant-upload-text"</span><span class="token operator">></span>Click <span class="token operator">or</span> drag file <span class="token keyword">to</span> this area <span class="token keyword">to</span> upload<span class="token operator">&lt;</span><span class="token operator">/</span>p<span class="token operator">></span>
    <span class="token operator">&lt;</span>p className<span class="token operator">=</span><span class="token string">"ant-upload-hint"</span><span class="token operator">></span>
      Support <span class="token keyword">for</span> a single <span class="token operator">or</span> bulk upload<span class="token punctuation">.</span> Strictly prohibit from uploading company data <span class="token operator">or</span> other
      band files
    <span class="token operator">&lt;</span><span class="token operator">/</span>p<span class="token operator">></span>
  <span class="token operator">&lt;</span><span class="token operator">/</span>Dragger<span class="token operator">></span>
<span class="token punctuation">)</span><span class="token comment" spellcheck="true">;</span>

export <span class="token keyword">default</span> App<span class="token comment" spellcheck="true">;</span>`}],highlightedCodes:{tsx:`<span class="token keyword">import</span> <span class="token punctuation">{</span> InboxOutlined <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">'@ant-design/icons'</span><span class="token punctuation">;</span>
<span class="token keyword">import</span> type <span class="token punctuation">{</span> UploadProps <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">'antd'</span><span class="token punctuation">;</span>
<span class="token keyword">import</span> <span class="token punctuation">{</span> message<span class="token punctuation">,</span> Upload <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">'antd'</span><span class="token punctuation">;</span>
<span class="token keyword">import</span> React <span class="token keyword">from</span> <span class="token string">'react'</span><span class="token punctuation">;</span>

<span class="token keyword">const</span> <span class="token punctuation">{</span> Dragger <span class="token punctuation">}</span> <span class="token operator">=</span> Upload<span class="token punctuation">;</span>

<span class="token keyword">const</span> props<span class="token operator">:</span> UploadProps <span class="token operator">=</span> <span class="token punctuation">{</span>
  name<span class="token operator">:</span> <span class="token string">'file'</span><span class="token punctuation">,</span>
  multiple<span class="token operator">:</span> <span class="token boolean">true</span><span class="token punctuation">,</span>
  action<span class="token operator">:</span> <span class="token string">'https://www.mocky.io/v2/5cc8019d300000980a055e76'</span><span class="token punctuation">,</span>
  <span class="token function">onChange</span><span class="token punctuation">(</span>info<span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">const</span> <span class="token punctuation">{</span> status <span class="token punctuation">}</span> <span class="token operator">=</span> info<span class="token punctuation">.</span>file<span class="token punctuation">;</span>
    <span class="token keyword">if</span> <span class="token punctuation">(</span>status <span class="token operator">!==</span> <span class="token string">'uploading'</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
      console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>info<span class="token punctuation">.</span>file<span class="token punctuation">,</span> info<span class="token punctuation">.</span>fileList<span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
    <span class="token keyword">if</span> <span class="token punctuation">(</span>status <span class="token operator">===</span> <span class="token string">'done'</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
      message<span class="token punctuation">.</span><span class="token function">success</span><span class="token punctuation">(</span><span class="token template-string"><span class="token template-punctuation string">\`</span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">\${</span>info<span class="token punctuation">.</span>file<span class="token punctuation">.</span>name<span class="token interpolation-punctuation punctuation">}</span></span><span class="token string"> file uploaded successfully.</span><span class="token template-punctuation string">\`</span></span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token keyword">if</span> <span class="token punctuation">(</span>status <span class="token operator">===</span> <span class="token string">'error'</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
      message<span class="token punctuation">.</span><span class="token function">error</span><span class="token punctuation">(</span><span class="token template-string"><span class="token template-punctuation string">\`</span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">\${</span>info<span class="token punctuation">.</span>file<span class="token punctuation">.</span>name<span class="token interpolation-punctuation punctuation">}</span></span><span class="token string"> file upload failed.</span><span class="token template-punctuation string">\`</span></span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
  <span class="token punctuation">}</span><span class="token punctuation">,</span>
  <span class="token function">onDrop</span><span class="token punctuation">(</span>e<span class="token punctuation">)</span> <span class="token punctuation">{</span>
    console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">'Dropped files'</span><span class="token punctuation">,</span> e<span class="token punctuation">.</span>dataTransfer<span class="token punctuation">.</span>files<span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token punctuation">}</span><span class="token punctuation">,</span>
<span class="token punctuation">}</span><span class="token punctuation">;</span>

<span class="token keyword">const</span> App<span class="token operator">:</span> React<span class="token punctuation">.</span><span class="token function-variable function">FC</span> <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=></span> <span class="token punctuation">(</span>
  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span><span class="token class-name">Dragger</span></span> <span class="token spread"><span class="token punctuation">{</span><span class="token operator">...</span>props<span class="token punctuation">}</span></span><span class="token punctuation">></span></span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>p</span> <span class="token attr-name">className</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>ant-upload-drag-icon<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>
      <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span><span class="token class-name">InboxOutlined</span></span> <span class="token punctuation">/></span></span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>p</span><span class="token punctuation">></span></span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>p</span> <span class="token attr-name">className</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>ant-upload-text<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>Click or drag file to <span class="token keyword">this</span> area to upload<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>p</span><span class="token punctuation">></span></span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>p</span> <span class="token attr-name">className</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>ant-upload-hint<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>
      Support <span class="token keyword">for</span> a single or bulk upload<span class="token punctuation">.</span> Strictly prohibit from uploading company data or other
      band files
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>p</span><span class="token punctuation">></span></span>
  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span><span class="token class-name">Dragger</span></span><span class="token punctuation">></span></span>
<span class="token punctuation">)</span><span class="token punctuation">;</span>

<span class="token keyword">export</span> <span class="token keyword">default</span> App<span class="token punctuation">;</span>`,jsx:`<span class="token keyword">import</span> <span class="token punctuation">{</span> InboxOutlined <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">'@ant-design/icons'</span><span class="token punctuation">;</span>
<span class="token keyword">import</span> <span class="token punctuation">{</span> message<span class="token punctuation">,</span> Upload <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">'antd'</span><span class="token punctuation">;</span>
<span class="token keyword">import</span> React <span class="token keyword">from</span> <span class="token string">'react'</span><span class="token punctuation">;</span>
<span class="token keyword">const</span> <span class="token punctuation">{</span> Dragger <span class="token punctuation">}</span> <span class="token operator">=</span> Upload<span class="token punctuation">;</span>
<span class="token keyword">const</span> props <span class="token operator">=</span> <span class="token punctuation">{</span>
  <span class="token literal-property property">name</span><span class="token operator">:</span> <span class="token string">'file'</span><span class="token punctuation">,</span>
  <span class="token literal-property property">multiple</span><span class="token operator">:</span> <span class="token boolean">true</span><span class="token punctuation">,</span>
  <span class="token literal-property property">action</span><span class="token operator">:</span> <span class="token string">'https://www.mocky.io/v2/5cc8019d300000980a055e76'</span><span class="token punctuation">,</span>
  <span class="token function">onChange</span><span class="token punctuation">(</span><span class="token parameter">info</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">const</span> <span class="token punctuation">{</span> status <span class="token punctuation">}</span> <span class="token operator">=</span> info<span class="token punctuation">.</span>file<span class="token punctuation">;</span>
    <span class="token keyword">if</span> <span class="token punctuation">(</span>status <span class="token operator">!==</span> <span class="token string">'uploading'</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
      console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>info<span class="token punctuation">.</span>file<span class="token punctuation">,</span> info<span class="token punctuation">.</span>fileList<span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
    <span class="token keyword">if</span> <span class="token punctuation">(</span>status <span class="token operator">===</span> <span class="token string">'done'</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
      message<span class="token punctuation">.</span><span class="token function">success</span><span class="token punctuation">(</span><span class="token template-string"><span class="token template-punctuation string">\`</span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">\${</span>info<span class="token punctuation">.</span>file<span class="token punctuation">.</span>name<span class="token interpolation-punctuation punctuation">}</span></span><span class="token string"> file uploaded successfully.</span><span class="token template-punctuation string">\`</span></span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token keyword">if</span> <span class="token punctuation">(</span>status <span class="token operator">===</span> <span class="token string">'error'</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
      message<span class="token punctuation">.</span><span class="token function">error</span><span class="token punctuation">(</span><span class="token template-string"><span class="token template-punctuation string">\`</span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">\${</span>info<span class="token punctuation">.</span>file<span class="token punctuation">.</span>name<span class="token interpolation-punctuation punctuation">}</span></span><span class="token string"> file upload failed.</span><span class="token template-punctuation string">\`</span></span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
  <span class="token punctuation">}</span><span class="token punctuation">,</span>
  <span class="token function">onDrop</span><span class="token punctuation">(</span><span class="token parameter">e</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">'Dropped files'</span><span class="token punctuation">,</span> e<span class="token punctuation">.</span>dataTransfer<span class="token punctuation">.</span>files<span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token punctuation">}</span><span class="token punctuation">,</span>
<span class="token punctuation">}</span><span class="token punctuation">;</span>
<span class="token keyword">const</span> <span class="token function-variable function">App</span> <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=></span> <span class="token punctuation">(</span>
  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span><span class="token class-name">Dragger</span></span> <span class="token spread"><span class="token punctuation">{</span><span class="token operator">...</span>props<span class="token punctuation">}</span></span><span class="token punctuation">></span></span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>p</span> <span class="token attr-name">className</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>ant-upload-drag-icon<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>
      <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span><span class="token class-name">InboxOutlined</span></span> <span class="token punctuation">/></span></span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>p</span><span class="token punctuation">></span></span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>p</span> <span class="token attr-name">className</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>ant-upload-text<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>Click or drag file to <span class="token keyword">this</span> area to upload<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>p</span><span class="token punctuation">></span></span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>p</span> <span class="token attr-name">className</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>ant-upload-hint<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>
      Support <span class="token keyword">for</span> a single or bulk upload<span class="token punctuation">.</span> Strictly prohibit from uploading company data or other
      band files
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>p</span><span class="token punctuation">></span></span>
  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span><span class="token class-name">Dragger</span></span><span class="token punctuation">></span></span>
<span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token keyword">export</span> <span class="token keyword">default</span> App<span class="token punctuation">;</span>
`},preview:function(){var N=g(0),H=g(47),R=g(61),F=g(12),O=S(g(0));function S(W){return W&&W.__esModule?W:{default:W}}var D=F.Upload.Dragger,V={name:"file",multiple:!0,action:"https://www.mocky.io/v2/5cc8019d300000980a055e76",onChange:function($){var nn=$.file.status;nn!=="uploading"&&console.log($.file,$.fileList),nn==="done"?F.message.success("".concat($.file.name," file uploaded successfully.")):nn==="error"&&F.message.error("".concat($.file.name," file upload failed."))},onDrop:function($){console.log("Dropped files",$.dataTransfer.files)}},M=function(){return O.default.createElement(D,V,O.default.createElement("p",{className:"ant-upload-drag-icon"},O.default.createElement(R.InboxOutlined,null)),O.default.createElement("p",{className:"ant-upload-text"},"Click or drag file to this area to upload"),O.default.createElement("p",{className:"ant-upload-hint"},"Support for a single or bulk upload. Strictly prohibit from uploading company data or other band files"))},C=M;return N.createElement(C)}}},4806:function(Y,kn,g){Y.exports={content:{"zh-CN":[["p","\u6839\u636E\u7C7B\u578B\u9ED8\u8BA4\u663E\u793A\u5BF9\u5E94 icon"]],"en-US":[["p","Displays the corresponding by default by type icon"]]},meta:{order:12,debug:!0,title:{"zh-CN":"\u81EA\u5B9A\u4E49\u663E\u793A icon","en-US":"custom show icon"},filename:"components/upload/demo/file-type.md",id:"components-upload-demo-file-type"},toc:["ul",["li",["a",{className:"bisheng-toc-h2",href:"#zh-CN",title:"zh-CN"},"zh-CN"]],["li",["a",{className:"bisheng-toc-h2",href:"#en-US",title:"en-US"},"en-US"]]],highlightedCode:["pre",{lang:"tsx",highlighted:`import {
  FileExcelTwoTone<span class="token punctuation">,</span>
  FilePdfTwoTone<span class="token punctuation">,</span>
  FileWordTwoTone<span class="token punctuation">,</span>
  LoadingOutlined<span class="token punctuation">,</span>
  PaperClipOutlined<span class="token punctuation">,</span>
  PictureTwoTone<span class="token punctuation">,</span>
  PlusOutlined<span class="token punctuation">,</span>
} from <span class="token string">'@ant-design/icons'</span><span class="token comment" spellcheck="true">;</span>
import { Modal<span class="token punctuation">,</span> Upload } from <span class="token string">'antd'</span><span class="token comment" spellcheck="true">;</span>
import type { RcFile<span class="token punctuation">,</span> UploadFile<span class="token punctuation">,</span> UploadProps } from <span class="token string">'antd/es/upload/interface'</span><span class="token comment" spellcheck="true">;</span>
import React<span class="token punctuation">,</span> { useState } from <span class="token string">'react'</span><span class="token comment" spellcheck="true">;</span>

<span class="token keyword">const</span> getBase64 <span class="token operator">=</span> <span class="token punctuation">(</span>file<span class="token punctuation">:</span> RcFile<span class="token punctuation">)</span><span class="token punctuation">:</span> Promise<span class="token operator">&lt;</span>string<span class="token operator">></span> <span class="token operator">=</span><span class="token operator">></span>
  new <span class="token function">Promise</span><span class="token punctuation">(</span><span class="token punctuation">(</span>resolve<span class="token punctuation">,</span> reject<span class="token punctuation">)</span> <span class="token operator">=</span><span class="token operator">></span> {
    <span class="token keyword">const</span> reader <span class="token operator">=</span> new <span class="token function">FileReader</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token comment" spellcheck="true">;</span>
    reader<span class="token punctuation">.</span><span class="token function">readAsDataURL</span><span class="token punctuation">(</span>file<span class="token punctuation">)</span><span class="token comment" spellcheck="true">;</span>
    reader<span class="token punctuation">.</span>onload <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=</span><span class="token operator">></span> <span class="token function">resolve</span><span class="token punctuation">(</span>reader<span class="token punctuation">.</span>result as string<span class="token punctuation">)</span><span class="token comment" spellcheck="true">;</span>
    reader<span class="token punctuation">.</span>onerror <span class="token operator">=</span> error <span class="token operator">=</span><span class="token operator">></span> <span class="token function">reject</span><span class="token punctuation">(</span>error<span class="token punctuation">)</span><span class="token comment" spellcheck="true">;</span>
  }<span class="token punctuation">)</span><span class="token comment" spellcheck="true">;</span>

<span class="token keyword">const</span> App<span class="token punctuation">:</span> React<span class="token punctuation">.</span>FC <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=</span><span class="token operator">></span> {
  <span class="token keyword">const</span> <span class="token punctuation">[</span>previewOpen<span class="token punctuation">,</span> setPreviewOpen<span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token function">useState</span><span class="token punctuation">(</span><span class="token boolean">false</span><span class="token punctuation">)</span><span class="token comment" spellcheck="true">;</span>
  <span class="token keyword">const</span> <span class="token punctuation">[</span>previewImage<span class="token punctuation">,</span> setPreviewImage<span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token function">useState</span><span class="token punctuation">(</span><span class="token string">''</span><span class="token punctuation">)</span><span class="token comment" spellcheck="true">;</span>
  <span class="token keyword">const</span> <span class="token punctuation">[</span>fileList<span class="token punctuation">,</span> setFileList<span class="token punctuation">]</span> <span class="token operator">=</span> useState<span class="token operator">&lt;</span>UploadFile<span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token operator">></span><span class="token punctuation">(</span><span class="token punctuation">[</span>
    {
      uid<span class="token punctuation">:</span> <span class="token string">'-2'</span><span class="token punctuation">,</span>
      name<span class="token punctuation">:</span> <span class="token string">'pdf.pdf'</span><span class="token punctuation">,</span>
      status<span class="token punctuation">:</span> <span class="token string">'done'</span><span class="token punctuation">,</span>
      url<span class="token punctuation">:</span> <span class="token string">'http://cdn07.foxitsoftware.cn/pub/foxit/cpdf/FoxitCompanyProfile.pdf'</span><span class="token punctuation">,</span>
    }<span class="token punctuation">,</span>
    {
      uid<span class="token punctuation">:</span> <span class="token string">'-3'</span><span class="token punctuation">,</span>
      name<span class="token punctuation">:</span> <span class="token string">'doc.doc'</span><span class="token punctuation">,</span>
      status<span class="token punctuation">:</span> <span class="token string">'done'</span><span class="token punctuation">,</span>
      url<span class="token punctuation">:</span> <span class="token string">'https://zos.alipayobjects.com/rmsportal/jkjgkEfvpUPVyRjUImniVslZfWPnJuuZ.doc'</span><span class="token punctuation">,</span>
    }<span class="token punctuation">,</span>
    {
      uid<span class="token punctuation">:</span> <span class="token string">'-4'</span><span class="token punctuation">,</span>
      name<span class="token punctuation">:</span> <span class="token string">'image.png'</span><span class="token punctuation">,</span>
      status<span class="token punctuation">:</span> <span class="token string">'error'</span><span class="token punctuation">,</span>
    }<span class="token punctuation">,</span>
    {
      uid<span class="token punctuation">:</span> <span class="token string">'-5'</span><span class="token punctuation">,</span>
      name<span class="token punctuation">:</span> <span class="token string">'pdf.pdf'</span><span class="token punctuation">,</span>
      status<span class="token punctuation">:</span> <span class="token string">'error'</span><span class="token punctuation">,</span>
    }<span class="token punctuation">,</span>
    {
      uid<span class="token punctuation">:</span> <span class="token string">'-6'</span><span class="token punctuation">,</span>
      name<span class="token punctuation">:</span> <span class="token string">'doc.doc'</span><span class="token punctuation">,</span>
      status<span class="token punctuation">:</span> <span class="token string">'error'</span><span class="token punctuation">,</span>
    }<span class="token punctuation">,</span>
  <span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token comment" spellcheck="true">;</span>

  <span class="token keyword">const</span> handleCancel <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=</span><span class="token operator">></span> <span class="token function">setPreviewOpen</span><span class="token punctuation">(</span><span class="token boolean">false</span><span class="token punctuation">)</span><span class="token comment" spellcheck="true">;</span>

  <span class="token keyword">const</span> handlePreview <span class="token operator">=</span> async <span class="token punctuation">(</span>file<span class="token punctuation">:</span> UploadFile<span class="token punctuation">)</span> <span class="token operator">=</span><span class="token operator">></span> {
    <span class="token keyword">if</span> <span class="token punctuation">(</span>!file<span class="token punctuation">.</span>url <span class="token operator">&amp;</span><span class="token operator">&amp;</span> !file<span class="token punctuation">.</span>preview<span class="token punctuation">)</span> {
      file<span class="token punctuation">.</span>preview <span class="token operator">=</span> await <span class="token function">getBase64</span><span class="token punctuation">(</span>file<span class="token punctuation">.</span>originFileObj as RcFile<span class="token punctuation">)</span><span class="token comment" spellcheck="true">;</span>
    }

    <span class="token function">setPreviewOpen</span><span class="token punctuation">(</span><span class="token boolean">true</span><span class="token punctuation">)</span><span class="token comment" spellcheck="true">;</span>
    <span class="token function">setPreviewImage</span><span class="token punctuation">(</span>file<span class="token punctuation">.</span>url || <span class="token punctuation">(</span>file<span class="token punctuation">.</span>preview as string<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token comment" spellcheck="true">;</span>
  }<span class="token comment" spellcheck="true">;</span>

  <span class="token keyword">const</span> handleChange<span class="token punctuation">:</span> UploadProps<span class="token punctuation">[</span><span class="token string">'onChange'</span><span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token punctuation">(</span>{ fileList<span class="token punctuation">:</span> newFileList }<span class="token punctuation">)</span> <span class="token operator">=</span><span class="token operator">></span>
    <span class="token function">setFileList</span><span class="token punctuation">(</span>newFileList<span class="token punctuation">)</span><span class="token comment" spellcheck="true">;</span>

  <span class="token keyword">const</span> handleIconRender<span class="token punctuation">:</span> UploadProps<span class="token punctuation">[</span><span class="token string">'iconRender'</span><span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token punctuation">(</span>file<span class="token punctuation">,</span> listType<span class="token punctuation">)</span> <span class="token operator">=</span><span class="token operator">></span> {
    <span class="token keyword">const</span> fileSufIconList <span class="token operator">=</span> <span class="token punctuation">[</span>
      { type<span class="token punctuation">:</span> <span class="token operator">&lt;</span>FilePdfTwoTone <span class="token operator">/</span><span class="token operator">></span><span class="token punctuation">,</span> suf<span class="token punctuation">:</span> <span class="token punctuation">[</span><span class="token string">'.pdf'</span><span class="token punctuation">]</span> }<span class="token punctuation">,</span>
      { type<span class="token punctuation">:</span> <span class="token operator">&lt;</span>FileExcelTwoTone <span class="token operator">/</span><span class="token operator">></span><span class="token punctuation">,</span> suf<span class="token punctuation">:</span> <span class="token punctuation">[</span><span class="token string">'.xlsx'</span><span class="token punctuation">,</span> <span class="token string">'.xls'</span><span class="token punctuation">,</span> <span class="token string">'.csv'</span><span class="token punctuation">]</span> }<span class="token punctuation">,</span>
      { type<span class="token punctuation">:</span> <span class="token operator">&lt;</span>FileWordTwoTone <span class="token operator">/</span><span class="token operator">></span><span class="token punctuation">,</span> suf<span class="token punctuation">:</span> <span class="token punctuation">[</span><span class="token string">'.doc'</span><span class="token punctuation">,</span> <span class="token string">'.docx'</span><span class="token punctuation">]</span> }<span class="token punctuation">,</span>
      {
        type<span class="token punctuation">:</span> <span class="token operator">&lt;</span>PictureTwoTone <span class="token operator">/</span><span class="token operator">></span><span class="token punctuation">,</span>
        suf<span class="token punctuation">:</span> <span class="token punctuation">[</span><span class="token string">'.webp'</span><span class="token punctuation">,</span> <span class="token string">'.svg'</span><span class="token punctuation">,</span> <span class="token string">'.png'</span><span class="token punctuation">,</span> <span class="token string">'.gif'</span><span class="token punctuation">,</span> <span class="token string">'.jpg'</span><span class="token punctuation">,</span> <span class="token string">'.jpeg'</span><span class="token punctuation">,</span> <span class="token string">'.jfif'</span><span class="token punctuation">,</span> <span class="token string">'.bmp'</span><span class="token punctuation">,</span> <span class="token string">'.dpg'</span><span class="token punctuation">]</span><span class="token punctuation">,</span>
      }<span class="token punctuation">,</span>
    <span class="token punctuation">]</span><span class="token comment" spellcheck="true">;</span>
    <span class="token operator">/</span><span class="token operator">/</span> console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">,</span> file<span class="token punctuation">,</span> listType<span class="token punctuation">)</span><span class="token comment" spellcheck="true">;</span>
    let icon <span class="token operator">=</span> file<span class="token punctuation">.</span>status <span class="token operator">==</span><span class="token operator">=</span> <span class="token string">'uploading'</span> <span class="token operator">?</span> <span class="token operator">&lt;</span>LoadingOutlined <span class="token operator">/</span><span class="token operator">></span> <span class="token punctuation">:</span> <span class="token operator">&lt;</span>PaperClipOutlined <span class="token operator">/</span><span class="token operator">></span><span class="token comment" spellcheck="true">;</span>
    <span class="token keyword">if</span> <span class="token punctuation">(</span>listType <span class="token operator">==</span><span class="token operator">=</span> <span class="token string">'picture'</span> || listType <span class="token operator">==</span><span class="token operator">=</span> <span class="token string">'picture-card'</span><span class="token punctuation">)</span> {
      <span class="token keyword">if</span> <span class="token punctuation">(</span>listType <span class="token operator">==</span><span class="token operator">=</span> <span class="token string">'picture-card'</span> <span class="token operator">&amp;</span><span class="token operator">&amp;</span> file<span class="token punctuation">.</span>status <span class="token operator">==</span><span class="token operator">=</span> <span class="token string">'uploading'</span><span class="token punctuation">)</span> {
        icon <span class="token operator">=</span> <span class="token operator">&lt;</span>LoadingOutlined <span class="token operator">/</span><span class="token operator">></span><span class="token comment" spellcheck="true">; // or icon = 'uploading...';</span>
      } <span class="token keyword">else</span> {
        fileSufIconList<span class="token punctuation">.</span><span class="token function">forEach</span><span class="token punctuation">(</span>item <span class="token operator">=</span><span class="token operator">></span> {
          <span class="token keyword">if</span> <span class="token punctuation">(</span>item<span class="token punctuation">.</span>suf<span class="token punctuation">.</span><span class="token function">includes</span><span class="token punctuation">(</span>file<span class="token punctuation">.</span>name<span class="token punctuation">.</span><span class="token function">slice</span><span class="token punctuation">(</span>file<span class="token punctuation">.</span>name<span class="token punctuation">.</span><span class="token function">lastIndexOf</span><span class="token punctuation">(</span><span class="token string">'.'</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">)</span> {
            icon <span class="token operator">=</span> item<span class="token punctuation">.</span>type<span class="token comment" spellcheck="true">;</span>
          }
        }<span class="token punctuation">)</span><span class="token comment" spellcheck="true">;</span>
      }
    }
    return icon<span class="token comment" spellcheck="true">;</span>
  }<span class="token comment" spellcheck="true">;</span>

  <span class="token keyword">const</span> uploadButton <span class="token operator">=</span> <span class="token punctuation">(</span>
    <span class="token operator">&lt;</span>div<span class="token operator">></span>
      <span class="token operator">&lt;</span>PlusOutlined <span class="token operator">/</span><span class="token operator">></span>
      <span class="token operator">&lt;</span>div style<span class="token operator">=</span>{{ marginTop<span class="token punctuation">:</span> <span class="token number">8</span> }}<span class="token operator">></span>Upload<span class="token operator">&lt;</span><span class="token operator">/</span>div<span class="token operator">></span>
    <span class="token operator">&lt;</span><span class="token operator">/</span>div<span class="token operator">></span>
  <span class="token punctuation">)</span><span class="token comment" spellcheck="true">;</span>

  return <span class="token punctuation">(</span>
    <span class="token operator">&lt;></span>
      <span class="token operator">&lt;</span>Upload
        action<span class="token operator">=</span><span class="token string">"https://www.mocky.io/v2/5cc8019d300000980a055e76"</span>
        listType<span class="token operator">=</span><span class="token string">"picture-card"</span>
        fileList<span class="token operator">=</span>{fileList}
        onPreview<span class="token operator">=</span>{handlePreview}
        onChange<span class="token operator">=</span>{handleChange}
        iconRender<span class="token operator">=</span>{handleIconRender}
      <span class="token operator">></span>
        {fileList<span class="token punctuation">.</span>length <span class="token operator">>=</span> <span class="token number">8</span> <span class="token operator">?</span> <span class="token keyword">null</span> <span class="token punctuation">:</span> uploadButton}
      <span class="token operator">&lt;</span><span class="token operator">/</span>Upload<span class="token operator">></span>
      <span class="token operator">&lt;</span>Modal open<span class="token operator">=</span>{previewOpen} footer<span class="token operator">=</span>{<span class="token keyword">null</span>} onCancel<span class="token operator">=</span>{handleCancel}<span class="token operator">></span>
        <span class="token operator">&lt;</span>img alt<span class="token operator">=</span><span class="token string">"example"</span> style<span class="token operator">=</span>{{ width<span class="token punctuation">:</span> <span class="token string">'100%'</span> }} src<span class="token operator">=</span>{previewImage} <span class="token operator">/</span><span class="token operator">></span>
      <span class="token operator">&lt;</span><span class="token operator">/</span>Modal<span class="token operator">></span>
    <span class="token operator">&lt;</span><span class="token operator">/</span><span class="token operator">></span>
  <span class="token punctuation">)</span><span class="token comment" spellcheck="true">;</span>
}<span class="token comment" spellcheck="true">;</span>

export <span class="token keyword">default</span> App<span class="token comment" spellcheck="true">;</span>`}],highlightedCodes:{tsx:`<span class="token keyword">import</span> <span class="token punctuation">{</span>
  FileExcelTwoTone<span class="token punctuation">,</span>
  FilePdfTwoTone<span class="token punctuation">,</span>
  FileWordTwoTone<span class="token punctuation">,</span>
  LoadingOutlined<span class="token punctuation">,</span>
  PaperClipOutlined<span class="token punctuation">,</span>
  PictureTwoTone<span class="token punctuation">,</span>
  PlusOutlined<span class="token punctuation">,</span>
<span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">'@ant-design/icons'</span><span class="token punctuation">;</span>
<span class="token keyword">import</span> <span class="token punctuation">{</span> Modal<span class="token punctuation">,</span> Upload <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">'antd'</span><span class="token punctuation">;</span>
<span class="token keyword">import</span> type <span class="token punctuation">{</span> RcFile<span class="token punctuation">,</span> UploadFile<span class="token punctuation">,</span> UploadProps <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">'antd/es/upload/interface'</span><span class="token punctuation">;</span>
<span class="token keyword">import</span> React<span class="token punctuation">,</span> <span class="token punctuation">{</span> useState <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">'react'</span><span class="token punctuation">;</span>

<span class="token keyword">const</span> getBase64 <span class="token operator">=</span> <span class="token punctuation">(</span>file<span class="token operator">:</span> RcFile<span class="token punctuation">)</span><span class="token operator">:</span> Promise<span class="token operator">&lt;</span>string<span class="token operator">></span> <span class="token operator">=></span>
  <span class="token keyword">new</span> <span class="token class-name">Promise</span><span class="token punctuation">(</span><span class="token punctuation">(</span>resolve<span class="token punctuation">,</span> reject<span class="token punctuation">)</span> <span class="token operator">=></span> <span class="token punctuation">{</span>
    <span class="token keyword">const</span> reader <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">FileReader</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    reader<span class="token punctuation">.</span><span class="token function">readAsDataURL</span><span class="token punctuation">(</span>file<span class="token punctuation">)</span><span class="token punctuation">;</span>
    reader<span class="token punctuation">.</span><span class="token function-variable function">onload</span> <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=></span> <span class="token function">resolve</span><span class="token punctuation">(</span>reader<span class="token punctuation">.</span>result <span class="token keyword">as</span> string<span class="token punctuation">)</span><span class="token punctuation">;</span>
    reader<span class="token punctuation">.</span><span class="token function-variable function">onerror</span> <span class="token operator">=</span> error <span class="token operator">=></span> <span class="token function">reject</span><span class="token punctuation">(</span>error<span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

<span class="token keyword">const</span> App<span class="token operator">:</span> React<span class="token punctuation">.</span><span class="token function-variable function">FC</span> <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=></span> <span class="token punctuation">{</span>
  <span class="token keyword">const</span> <span class="token punctuation">[</span>previewOpen<span class="token punctuation">,</span> setPreviewOpen<span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token function">useState</span><span class="token punctuation">(</span><span class="token boolean">false</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token keyword">const</span> <span class="token punctuation">[</span>previewImage<span class="token punctuation">,</span> setPreviewImage<span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token function">useState</span><span class="token punctuation">(</span><span class="token string">''</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token keyword">const</span> <span class="token punctuation">[</span>fileList<span class="token punctuation">,</span> setFileList<span class="token punctuation">]</span> <span class="token operator">=</span> useState<span class="token operator">&lt;</span>UploadFile<span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token operator">></span><span class="token punctuation">(</span><span class="token punctuation">[</span>
    <span class="token punctuation">{</span>
      uid<span class="token operator">:</span> <span class="token string">'-2'</span><span class="token punctuation">,</span>
      name<span class="token operator">:</span> <span class="token string">'pdf.pdf'</span><span class="token punctuation">,</span>
      status<span class="token operator">:</span> <span class="token string">'done'</span><span class="token punctuation">,</span>
      url<span class="token operator">:</span> <span class="token string">'http://cdn07.foxitsoftware.cn/pub/foxit/cpdf/FoxitCompanyProfile.pdf'</span><span class="token punctuation">,</span>
    <span class="token punctuation">}</span><span class="token punctuation">,</span>
    <span class="token punctuation">{</span>
      uid<span class="token operator">:</span> <span class="token string">'-3'</span><span class="token punctuation">,</span>
      name<span class="token operator">:</span> <span class="token string">'doc.doc'</span><span class="token punctuation">,</span>
      status<span class="token operator">:</span> <span class="token string">'done'</span><span class="token punctuation">,</span>
      url<span class="token operator">:</span> <span class="token string">'https://zos.alipayobjects.com/rmsportal/jkjgkEfvpUPVyRjUImniVslZfWPnJuuZ.doc'</span><span class="token punctuation">,</span>
    <span class="token punctuation">}</span><span class="token punctuation">,</span>
    <span class="token punctuation">{</span>
      uid<span class="token operator">:</span> <span class="token string">'-4'</span><span class="token punctuation">,</span>
      name<span class="token operator">:</span> <span class="token string">'image.png'</span><span class="token punctuation">,</span>
      status<span class="token operator">:</span> <span class="token string">'error'</span><span class="token punctuation">,</span>
    <span class="token punctuation">}</span><span class="token punctuation">,</span>
    <span class="token punctuation">{</span>
      uid<span class="token operator">:</span> <span class="token string">'-5'</span><span class="token punctuation">,</span>
      name<span class="token operator">:</span> <span class="token string">'pdf.pdf'</span><span class="token punctuation">,</span>
      status<span class="token operator">:</span> <span class="token string">'error'</span><span class="token punctuation">,</span>
    <span class="token punctuation">}</span><span class="token punctuation">,</span>
    <span class="token punctuation">{</span>
      uid<span class="token operator">:</span> <span class="token string">'-6'</span><span class="token punctuation">,</span>
      name<span class="token operator">:</span> <span class="token string">'doc.doc'</span><span class="token punctuation">,</span>
      status<span class="token operator">:</span> <span class="token string">'error'</span><span class="token punctuation">,</span>
    <span class="token punctuation">}</span><span class="token punctuation">,</span>
  <span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

  <span class="token keyword">const</span> <span class="token function-variable function">handleCancel</span> <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=></span> <span class="token function">setPreviewOpen</span><span class="token punctuation">(</span><span class="token boolean">false</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

  <span class="token keyword">const</span> <span class="token function-variable function">handlePreview</span> <span class="token operator">=</span> <span class="token keyword">async</span> <span class="token punctuation">(</span>file<span class="token operator">:</span> UploadFile<span class="token punctuation">)</span> <span class="token operator">=></span> <span class="token punctuation">{</span>
    <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token operator">!</span>file<span class="token punctuation">.</span>url <span class="token operator">&amp;&amp;</span> <span class="token operator">!</span>file<span class="token punctuation">.</span>preview<span class="token punctuation">)</span> <span class="token punctuation">{</span>
      file<span class="token punctuation">.</span>preview <span class="token operator">=</span> <span class="token keyword">await</span> <span class="token function">getBase64</span><span class="token punctuation">(</span>file<span class="token punctuation">.</span>originFileObj <span class="token keyword">as</span> RcFile<span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>

    <span class="token function">setPreviewOpen</span><span class="token punctuation">(</span><span class="token boolean">true</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token function">setPreviewImage</span><span class="token punctuation">(</span>file<span class="token punctuation">.</span>url <span class="token operator">||</span> <span class="token punctuation">(</span>file<span class="token punctuation">.</span>preview <span class="token keyword">as</span> string<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token punctuation">}</span><span class="token punctuation">;</span>

  <span class="token keyword">const</span> handleChange<span class="token operator">:</span> UploadProps<span class="token punctuation">[</span><span class="token string">'onChange'</span><span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token punctuation">{</span> fileList<span class="token operator">:</span> newFileList <span class="token punctuation">}</span><span class="token punctuation">)</span> <span class="token operator">=></span>
    <span class="token function">setFileList</span><span class="token punctuation">(</span>newFileList<span class="token punctuation">)</span><span class="token punctuation">;</span>

  <span class="token keyword">const</span> handleIconRender<span class="token operator">:</span> UploadProps<span class="token punctuation">[</span><span class="token string">'iconRender'</span><span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token punctuation">(</span>file<span class="token punctuation">,</span> listType<span class="token punctuation">)</span> <span class="token operator">=></span> <span class="token punctuation">{</span>
    <span class="token keyword">const</span> fileSufIconList <span class="token operator">=</span> <span class="token punctuation">[</span>
      <span class="token punctuation">{</span> type<span class="token operator">:</span> <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span><span class="token class-name">FilePdfTwoTone</span></span> <span class="token punctuation">/></span></span><span class="token punctuation">,</span> suf<span class="token operator">:</span> <span class="token punctuation">[</span><span class="token string">'.pdf'</span><span class="token punctuation">]</span> <span class="token punctuation">}</span><span class="token punctuation">,</span>
      <span class="token punctuation">{</span> type<span class="token operator">:</span> <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span><span class="token class-name">FileExcelTwoTone</span></span> <span class="token punctuation">/></span></span><span class="token punctuation">,</span> suf<span class="token operator">:</span> <span class="token punctuation">[</span><span class="token string">'.xlsx'</span><span class="token punctuation">,</span> <span class="token string">'.xls'</span><span class="token punctuation">,</span> <span class="token string">'.csv'</span><span class="token punctuation">]</span> <span class="token punctuation">}</span><span class="token punctuation">,</span>
      <span class="token punctuation">{</span> type<span class="token operator">:</span> <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span><span class="token class-name">FileWordTwoTone</span></span> <span class="token punctuation">/></span></span><span class="token punctuation">,</span> suf<span class="token operator">:</span> <span class="token punctuation">[</span><span class="token string">'.doc'</span><span class="token punctuation">,</span> <span class="token string">'.docx'</span><span class="token punctuation">]</span> <span class="token punctuation">}</span><span class="token punctuation">,</span>
      <span class="token punctuation">{</span>
        type<span class="token operator">:</span> <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span><span class="token class-name">PictureTwoTone</span></span> <span class="token punctuation">/></span></span><span class="token punctuation">,</span>
        suf<span class="token operator">:</span> <span class="token punctuation">[</span><span class="token string">'.webp'</span><span class="token punctuation">,</span> <span class="token string">'.svg'</span><span class="token punctuation">,</span> <span class="token string">'.png'</span><span class="token punctuation">,</span> <span class="token string">'.gif'</span><span class="token punctuation">,</span> <span class="token string">'.jpg'</span><span class="token punctuation">,</span> <span class="token string">'.jpeg'</span><span class="token punctuation">,</span> <span class="token string">'.jfif'</span><span class="token punctuation">,</span> <span class="token string">'.bmp'</span><span class="token punctuation">,</span> <span class="token string">'.dpg'</span><span class="token punctuation">]</span><span class="token punctuation">,</span>
      <span class="token punctuation">}</span><span class="token punctuation">,</span>
    <span class="token punctuation">]</span><span class="token punctuation">;</span>
    <span class="token comment">// console.log(1, file, listType);</span>
    <span class="token keyword">let</span> icon <span class="token operator">=</span> file<span class="token punctuation">.</span>status <span class="token operator">===</span> <span class="token string">'uploading'</span> <span class="token operator">?</span> <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span><span class="token class-name">LoadingOutlined</span></span> <span class="token punctuation">/></span></span> <span class="token operator">:</span> <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span><span class="token class-name">PaperClipOutlined</span></span> <span class="token punctuation">/></span></span><span class="token punctuation">;</span>
    <span class="token keyword">if</span> <span class="token punctuation">(</span>listType <span class="token operator">===</span> <span class="token string">'picture'</span> <span class="token operator">||</span> listType <span class="token operator">===</span> <span class="token string">'picture-card'</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
      <span class="token keyword">if</span> <span class="token punctuation">(</span>listType <span class="token operator">===</span> <span class="token string">'picture-card'</span> <span class="token operator">&amp;&amp;</span> file<span class="token punctuation">.</span>status <span class="token operator">===</span> <span class="token string">'uploading'</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        icon <span class="token operator">=</span> <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span><span class="token class-name">LoadingOutlined</span></span> <span class="token punctuation">/></span></span><span class="token punctuation">;</span> <span class="token comment">// or icon = 'uploading...';</span>
      <span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token punctuation">{</span>
        fileSufIconList<span class="token punctuation">.</span><span class="token function">forEach</span><span class="token punctuation">(</span>item <span class="token operator">=></span> <span class="token punctuation">{</span>
          <span class="token keyword">if</span> <span class="token punctuation">(</span>item<span class="token punctuation">.</span>suf<span class="token punctuation">.</span><span class="token function">includes</span><span class="token punctuation">(</span>file<span class="token punctuation">.</span>name<span class="token punctuation">.</span><span class="token function">slice</span><span class="token punctuation">(</span>file<span class="token punctuation">.</span>name<span class="token punctuation">.</span><span class="token function">lastIndexOf</span><span class="token punctuation">(</span><span class="token string">'.'</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
            icon <span class="token operator">=</span> item<span class="token punctuation">.</span>type<span class="token punctuation">;</span>
          <span class="token punctuation">}</span>
        <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
      <span class="token punctuation">}</span>
    <span class="token punctuation">}</span>
    <span class="token keyword">return</span> icon<span class="token punctuation">;</span>
  <span class="token punctuation">}</span><span class="token punctuation">;</span>

  <span class="token keyword">const</span> uploadButton <span class="token operator">=</span> <span class="token punctuation">(</span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span><span class="token punctuation">></span></span>
      <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span><span class="token class-name">PlusOutlined</span></span> <span class="token punctuation">/></span></span>
      <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">style</span><span class="token script language-javascript"><span class="token script-punctuation punctuation">=</span><span class="token punctuation">{</span><span class="token punctuation">{</span> marginTop<span class="token operator">:</span> <span class="token number">8</span> <span class="token punctuation">}</span><span class="token punctuation">}</span></span><span class="token punctuation">></span></span>Upload<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">></span></span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">></span></span>
  <span class="token punctuation">)</span><span class="token punctuation">;</span>

  <span class="token keyword">return</span> <span class="token punctuation">(</span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span></span><span class="token punctuation">></span></span>
      <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span><span class="token class-name">Upload</span></span>
        <span class="token attr-name">action</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>https://www.mocky.io/v2/5cc8019d300000980a055e76<span class="token punctuation">"</span></span>
        <span class="token attr-name">listType</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>picture-card<span class="token punctuation">"</span></span>
        <span class="token attr-name">fileList</span><span class="token script language-javascript"><span class="token script-punctuation punctuation">=</span><span class="token punctuation">{</span>fileList<span class="token punctuation">}</span></span>
        <span class="token attr-name">onPreview</span><span class="token script language-javascript"><span class="token script-punctuation punctuation">=</span><span class="token punctuation">{</span>handlePreview<span class="token punctuation">}</span></span>
        <span class="token attr-name">onChange</span><span class="token script language-javascript"><span class="token script-punctuation punctuation">=</span><span class="token punctuation">{</span>handleChange<span class="token punctuation">}</span></span>
        <span class="token attr-name">iconRender</span><span class="token script language-javascript"><span class="token script-punctuation punctuation">=</span><span class="token punctuation">{</span>handleIconRender<span class="token punctuation">}</span></span>
      <span class="token punctuation">></span></span>
        <span class="token punctuation">{</span>fileList<span class="token punctuation">.</span>length <span class="token operator">>=</span> <span class="token number">8</span> <span class="token operator">?</span> <span class="token keyword">null</span> <span class="token operator">:</span> uploadButton<span class="token punctuation">}</span>
      <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span><span class="token class-name">Upload</span></span><span class="token punctuation">></span></span>
      <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span><span class="token class-name">Modal</span></span> <span class="token attr-name">open</span><span class="token script language-javascript"><span class="token script-punctuation punctuation">=</span><span class="token punctuation">{</span>previewOpen<span class="token punctuation">}</span></span> <span class="token attr-name">footer</span><span class="token script language-javascript"><span class="token script-punctuation punctuation">=</span><span class="token punctuation">{</span><span class="token keyword">null</span><span class="token punctuation">}</span></span> <span class="token attr-name">onCancel</span><span class="token script language-javascript"><span class="token script-punctuation punctuation">=</span><span class="token punctuation">{</span>handleCancel<span class="token punctuation">}</span></span><span class="token punctuation">></span></span>
        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>img</span> <span class="token attr-name">alt</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>example<span class="token punctuation">"</span></span> <span class="token attr-name">style</span><span class="token script language-javascript"><span class="token script-punctuation punctuation">=</span><span class="token punctuation">{</span><span class="token punctuation">{</span> width<span class="token operator">:</span> <span class="token string">'100%'</span> <span class="token punctuation">}</span><span class="token punctuation">}</span></span> <span class="token attr-name">src</span><span class="token script language-javascript"><span class="token script-punctuation punctuation">=</span><span class="token punctuation">{</span>previewImage<span class="token punctuation">}</span></span> <span class="token punctuation">/></span></span>
      <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span><span class="token class-name">Modal</span></span><span class="token punctuation">></span></span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span></span><span class="token punctuation">></span></span>
  <span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span><span class="token punctuation">;</span>

<span class="token keyword">export</span> <span class="token keyword">default</span> App<span class="token punctuation">;</span>`,jsx:`<span class="token keyword">import</span> <span class="token punctuation">{</span>
  FileExcelTwoTone<span class="token punctuation">,</span>
  FilePdfTwoTone<span class="token punctuation">,</span>
  FileWordTwoTone<span class="token punctuation">,</span>
  LoadingOutlined<span class="token punctuation">,</span>
  PaperClipOutlined<span class="token punctuation">,</span>
  PictureTwoTone<span class="token punctuation">,</span>
  PlusOutlined<span class="token punctuation">,</span>
<span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">'@ant-design/icons'</span><span class="token punctuation">;</span>
<span class="token keyword">import</span> <span class="token punctuation">{</span> Modal<span class="token punctuation">,</span> Upload <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">'antd'</span><span class="token punctuation">;</span>
<span class="token keyword">import</span> React<span class="token punctuation">,</span> <span class="token punctuation">{</span> useState <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">'react'</span><span class="token punctuation">;</span>
<span class="token keyword">const</span> <span class="token function-variable function">getBase64</span> <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token parameter">file</span><span class="token punctuation">)</span> <span class="token operator">=></span>
  <span class="token keyword">new</span> <span class="token class-name">Promise</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token parameter">resolve<span class="token punctuation">,</span> reject</span><span class="token punctuation">)</span> <span class="token operator">=></span> <span class="token punctuation">{</span>
    <span class="token keyword">const</span> reader <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">FileReader</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    reader<span class="token punctuation">.</span><span class="token function">readAsDataURL</span><span class="token punctuation">(</span>file<span class="token punctuation">)</span><span class="token punctuation">;</span>
    reader<span class="token punctuation">.</span><span class="token function-variable function">onload</span> <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=></span> <span class="token function">resolve</span><span class="token punctuation">(</span>reader<span class="token punctuation">.</span>result<span class="token punctuation">)</span><span class="token punctuation">;</span>
    reader<span class="token punctuation">.</span><span class="token function-variable function">onerror</span> <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token parameter">error</span><span class="token punctuation">)</span> <span class="token operator">=></span> <span class="token function">reject</span><span class="token punctuation">(</span>error<span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token keyword">const</span> <span class="token function-variable function">App</span> <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=></span> <span class="token punctuation">{</span>
  <span class="token keyword">const</span> <span class="token punctuation">[</span>previewOpen<span class="token punctuation">,</span> setPreviewOpen<span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token function">useState</span><span class="token punctuation">(</span><span class="token boolean">false</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token keyword">const</span> <span class="token punctuation">[</span>previewImage<span class="token punctuation">,</span> setPreviewImage<span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token function">useState</span><span class="token punctuation">(</span><span class="token string">''</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token keyword">const</span> <span class="token punctuation">[</span>fileList<span class="token punctuation">,</span> setFileList<span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token function">useState</span><span class="token punctuation">(</span><span class="token punctuation">[</span>
    <span class="token punctuation">{</span>
      <span class="token literal-property property">uid</span><span class="token operator">:</span> <span class="token string">'-2'</span><span class="token punctuation">,</span>
      <span class="token literal-property property">name</span><span class="token operator">:</span> <span class="token string">'pdf.pdf'</span><span class="token punctuation">,</span>
      <span class="token literal-property property">status</span><span class="token operator">:</span> <span class="token string">'done'</span><span class="token punctuation">,</span>
      <span class="token literal-property property">url</span><span class="token operator">:</span> <span class="token string">'http://cdn07.foxitsoftware.cn/pub/foxit/cpdf/FoxitCompanyProfile.pdf'</span><span class="token punctuation">,</span>
    <span class="token punctuation">}</span><span class="token punctuation">,</span>
    <span class="token punctuation">{</span>
      <span class="token literal-property property">uid</span><span class="token operator">:</span> <span class="token string">'-3'</span><span class="token punctuation">,</span>
      <span class="token literal-property property">name</span><span class="token operator">:</span> <span class="token string">'doc.doc'</span><span class="token punctuation">,</span>
      <span class="token literal-property property">status</span><span class="token operator">:</span> <span class="token string">'done'</span><span class="token punctuation">,</span>
      <span class="token literal-property property">url</span><span class="token operator">:</span> <span class="token string">'https://zos.alipayobjects.com/rmsportal/jkjgkEfvpUPVyRjUImniVslZfWPnJuuZ.doc'</span><span class="token punctuation">,</span>
    <span class="token punctuation">}</span><span class="token punctuation">,</span>
    <span class="token punctuation">{</span>
      <span class="token literal-property property">uid</span><span class="token operator">:</span> <span class="token string">'-4'</span><span class="token punctuation">,</span>
      <span class="token literal-property property">name</span><span class="token operator">:</span> <span class="token string">'image.png'</span><span class="token punctuation">,</span>
      <span class="token literal-property property">status</span><span class="token operator">:</span> <span class="token string">'error'</span><span class="token punctuation">,</span>
    <span class="token punctuation">}</span><span class="token punctuation">,</span>
    <span class="token punctuation">{</span>
      <span class="token literal-property property">uid</span><span class="token operator">:</span> <span class="token string">'-5'</span><span class="token punctuation">,</span>
      <span class="token literal-property property">name</span><span class="token operator">:</span> <span class="token string">'pdf.pdf'</span><span class="token punctuation">,</span>
      <span class="token literal-property property">status</span><span class="token operator">:</span> <span class="token string">'error'</span><span class="token punctuation">,</span>
    <span class="token punctuation">}</span><span class="token punctuation">,</span>
    <span class="token punctuation">{</span>
      <span class="token literal-property property">uid</span><span class="token operator">:</span> <span class="token string">'-6'</span><span class="token punctuation">,</span>
      <span class="token literal-property property">name</span><span class="token operator">:</span> <span class="token string">'doc.doc'</span><span class="token punctuation">,</span>
      <span class="token literal-property property">status</span><span class="token operator">:</span> <span class="token string">'error'</span><span class="token punctuation">,</span>
    <span class="token punctuation">}</span><span class="token punctuation">,</span>
  <span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token keyword">const</span> <span class="token function-variable function">handleCancel</span> <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=></span> <span class="token function">setPreviewOpen</span><span class="token punctuation">(</span><span class="token boolean">false</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token keyword">const</span> <span class="token function-variable function">handlePreview</span> <span class="token operator">=</span> <span class="token keyword">async</span> <span class="token punctuation">(</span><span class="token parameter">file</span><span class="token punctuation">)</span> <span class="token operator">=></span> <span class="token punctuation">{</span>
    <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token operator">!</span>file<span class="token punctuation">.</span>url <span class="token operator">&amp;&amp;</span> <span class="token operator">!</span>file<span class="token punctuation">.</span>preview<span class="token punctuation">)</span> <span class="token punctuation">{</span>
      file<span class="token punctuation">.</span>preview <span class="token operator">=</span> <span class="token keyword">await</span> <span class="token function">getBase64</span><span class="token punctuation">(</span>file<span class="token punctuation">.</span>originFileObj<span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
    <span class="token function">setPreviewOpen</span><span class="token punctuation">(</span><span class="token boolean">true</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token function">setPreviewImage</span><span class="token punctuation">(</span>file<span class="token punctuation">.</span>url <span class="token operator">||</span> file<span class="token punctuation">.</span>preview<span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token punctuation">}</span><span class="token punctuation">;</span>
  <span class="token keyword">const</span> <span class="token function-variable function">handleChange</span> <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token parameter"><span class="token punctuation">{</span> <span class="token literal-property property">fileList</span><span class="token operator">:</span> newFileList <span class="token punctuation">}</span></span><span class="token punctuation">)</span> <span class="token operator">=></span> <span class="token function">setFileList</span><span class="token punctuation">(</span>newFileList<span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token keyword">const</span> <span class="token function-variable function">handleIconRender</span> <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token parameter">file<span class="token punctuation">,</span> listType</span><span class="token punctuation">)</span> <span class="token operator">=></span> <span class="token punctuation">{</span>
    <span class="token keyword">const</span> fileSufIconList <span class="token operator">=</span> <span class="token punctuation">[</span>
      <span class="token punctuation">{</span>
        <span class="token literal-property property">type</span><span class="token operator">:</span> <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span><span class="token class-name">FilePdfTwoTone</span></span> <span class="token punctuation">/></span></span><span class="token punctuation">,</span>
        <span class="token literal-property property">suf</span><span class="token operator">:</span> <span class="token punctuation">[</span><span class="token string">'.pdf'</span><span class="token punctuation">]</span><span class="token punctuation">,</span>
      <span class="token punctuation">}</span><span class="token punctuation">,</span>
      <span class="token punctuation">{</span>
        <span class="token literal-property property">type</span><span class="token operator">:</span> <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span><span class="token class-name">FileExcelTwoTone</span></span> <span class="token punctuation">/></span></span><span class="token punctuation">,</span>
        <span class="token literal-property property">suf</span><span class="token operator">:</span> <span class="token punctuation">[</span><span class="token string">'.xlsx'</span><span class="token punctuation">,</span> <span class="token string">'.xls'</span><span class="token punctuation">,</span> <span class="token string">'.csv'</span><span class="token punctuation">]</span><span class="token punctuation">,</span>
      <span class="token punctuation">}</span><span class="token punctuation">,</span>
      <span class="token punctuation">{</span>
        <span class="token literal-property property">type</span><span class="token operator">:</span> <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span><span class="token class-name">FileWordTwoTone</span></span> <span class="token punctuation">/></span></span><span class="token punctuation">,</span>
        <span class="token literal-property property">suf</span><span class="token operator">:</span> <span class="token punctuation">[</span><span class="token string">'.doc'</span><span class="token punctuation">,</span> <span class="token string">'.docx'</span><span class="token punctuation">]</span><span class="token punctuation">,</span>
      <span class="token punctuation">}</span><span class="token punctuation">,</span>
      <span class="token punctuation">{</span>
        <span class="token literal-property property">type</span><span class="token operator">:</span> <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span><span class="token class-name">PictureTwoTone</span></span> <span class="token punctuation">/></span></span><span class="token punctuation">,</span>
        <span class="token literal-property property">suf</span><span class="token operator">:</span> <span class="token punctuation">[</span><span class="token string">'.webp'</span><span class="token punctuation">,</span> <span class="token string">'.svg'</span><span class="token punctuation">,</span> <span class="token string">'.png'</span><span class="token punctuation">,</span> <span class="token string">'.gif'</span><span class="token punctuation">,</span> <span class="token string">'.jpg'</span><span class="token punctuation">,</span> <span class="token string">'.jpeg'</span><span class="token punctuation">,</span> <span class="token string">'.jfif'</span><span class="token punctuation">,</span> <span class="token string">'.bmp'</span><span class="token punctuation">,</span> <span class="token string">'.dpg'</span><span class="token punctuation">]</span><span class="token punctuation">,</span>
      <span class="token punctuation">}</span><span class="token punctuation">,</span>
    <span class="token punctuation">]</span><span class="token punctuation">;</span>
    <span class="token comment">// console.log(1, file, listType);</span>
    <span class="token keyword">let</span> icon <span class="token operator">=</span> file<span class="token punctuation">.</span>status <span class="token operator">===</span> <span class="token string">'uploading'</span> <span class="token operator">?</span> <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span><span class="token class-name">LoadingOutlined</span></span> <span class="token punctuation">/></span></span> <span class="token operator">:</span> <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span><span class="token class-name">PaperClipOutlined</span></span> <span class="token punctuation">/></span></span><span class="token punctuation">;</span>
    <span class="token keyword">if</span> <span class="token punctuation">(</span>listType <span class="token operator">===</span> <span class="token string">'picture'</span> <span class="token operator">||</span> listType <span class="token operator">===</span> <span class="token string">'picture-card'</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
      <span class="token keyword">if</span> <span class="token punctuation">(</span>listType <span class="token operator">===</span> <span class="token string">'picture-card'</span> <span class="token operator">&amp;&amp;</span> file<span class="token punctuation">.</span>status <span class="token operator">===</span> <span class="token string">'uploading'</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        icon <span class="token operator">=</span> <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span><span class="token class-name">LoadingOutlined</span></span> <span class="token punctuation">/></span></span><span class="token punctuation">;</span> <span class="token comment">// or icon = 'uploading...';</span>
      <span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token punctuation">{</span>
        fileSufIconList<span class="token punctuation">.</span><span class="token function">forEach</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token parameter">item</span><span class="token punctuation">)</span> <span class="token operator">=></span> <span class="token punctuation">{</span>
          <span class="token keyword">if</span> <span class="token punctuation">(</span>item<span class="token punctuation">.</span>suf<span class="token punctuation">.</span><span class="token function">includes</span><span class="token punctuation">(</span>file<span class="token punctuation">.</span>name<span class="token punctuation">.</span><span class="token function">slice</span><span class="token punctuation">(</span>file<span class="token punctuation">.</span>name<span class="token punctuation">.</span><span class="token function">lastIndexOf</span><span class="token punctuation">(</span><span class="token string">'.'</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
            icon <span class="token operator">=</span> item<span class="token punctuation">.</span>type<span class="token punctuation">;</span>
          <span class="token punctuation">}</span>
        <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
      <span class="token punctuation">}</span>
    <span class="token punctuation">}</span>
    <span class="token keyword">return</span> icon<span class="token punctuation">;</span>
  <span class="token punctuation">}</span><span class="token punctuation">;</span>
  <span class="token keyword">const</span> uploadButton <span class="token operator">=</span> <span class="token punctuation">(</span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span><span class="token punctuation">></span></span>
      <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span><span class="token class-name">PlusOutlined</span></span> <span class="token punctuation">/></span></span>
      <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span>
        <span class="token attr-name">style</span><span class="token script language-javascript"><span class="token script-punctuation punctuation">=</span><span class="token punctuation">{</span><span class="token punctuation">{</span>
          <span class="token literal-property property">marginTop</span><span class="token operator">:</span> <span class="token number">8</span><span class="token punctuation">,</span>
        <span class="token punctuation">}</span><span class="token punctuation">}</span></span>
      <span class="token punctuation">></span></span>
        Upload
      <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">></span></span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">></span></span>
  <span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token keyword">return</span> <span class="token punctuation">(</span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span></span><span class="token punctuation">></span></span>
      <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span><span class="token class-name">Upload</span></span>
        <span class="token attr-name">action</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>https://www.mocky.io/v2/5cc8019d300000980a055e76<span class="token punctuation">"</span></span>
        <span class="token attr-name">listType</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>picture-card<span class="token punctuation">"</span></span>
        <span class="token attr-name">fileList</span><span class="token script language-javascript"><span class="token script-punctuation punctuation">=</span><span class="token punctuation">{</span>fileList<span class="token punctuation">}</span></span>
        <span class="token attr-name">onPreview</span><span class="token script language-javascript"><span class="token script-punctuation punctuation">=</span><span class="token punctuation">{</span>handlePreview<span class="token punctuation">}</span></span>
        <span class="token attr-name">onChange</span><span class="token script language-javascript"><span class="token script-punctuation punctuation">=</span><span class="token punctuation">{</span>handleChange<span class="token punctuation">}</span></span>
        <span class="token attr-name">iconRender</span><span class="token script language-javascript"><span class="token script-punctuation punctuation">=</span><span class="token punctuation">{</span>handleIconRender<span class="token punctuation">}</span></span>
      <span class="token punctuation">></span></span>
        <span class="token punctuation">{</span>fileList<span class="token punctuation">.</span>length <span class="token operator">>=</span> <span class="token number">8</span> <span class="token operator">?</span> <span class="token keyword">null</span> <span class="token operator">:</span> uploadButton<span class="token punctuation">}</span>
      <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span><span class="token class-name">Upload</span></span><span class="token punctuation">></span></span>
      <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span><span class="token class-name">Modal</span></span> <span class="token attr-name">open</span><span class="token script language-javascript"><span class="token script-punctuation punctuation">=</span><span class="token punctuation">{</span>previewOpen<span class="token punctuation">}</span></span> <span class="token attr-name">footer</span><span class="token script language-javascript"><span class="token script-punctuation punctuation">=</span><span class="token punctuation">{</span><span class="token keyword">null</span><span class="token punctuation">}</span></span> <span class="token attr-name">onCancel</span><span class="token script language-javascript"><span class="token script-punctuation punctuation">=</span><span class="token punctuation">{</span>handleCancel<span class="token punctuation">}</span></span><span class="token punctuation">></span></span>
        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>img</span>
          <span class="token attr-name">alt</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>example<span class="token punctuation">"</span></span>
          <span class="token attr-name">style</span><span class="token script language-javascript"><span class="token script-punctuation punctuation">=</span><span class="token punctuation">{</span><span class="token punctuation">{</span>
            <span class="token literal-property property">width</span><span class="token operator">:</span> <span class="token string">'100%'</span><span class="token punctuation">,</span>
          <span class="token punctuation">}</span><span class="token punctuation">}</span></span>
          <span class="token attr-name">src</span><span class="token script language-javascript"><span class="token script-punctuation punctuation">=</span><span class="token punctuation">{</span>previewImage<span class="token punctuation">}</span></span>
        <span class="token punctuation">/></span></span>
      <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span><span class="token class-name">Modal</span></span><span class="token punctuation">></span></span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span></span><span class="token punctuation">></span></span>
  <span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span><span class="token punctuation">;</span>
<span class="token keyword">export</span> <span class="token keyword">default</span> App<span class="token punctuation">;</span>
`},preview:function(){var N=g(0),H=g(47);function R(t){return R=typeof Symbol=="function"&&typeof Symbol.iterator=="symbol"?function(a){return typeof a}:function(a){return a&&typeof Symbol=="function"&&a.constructor===Symbol&&a!==Symbol.prototype?"symbol":typeof a},R(t)}var F=g(61),O=g(12),S=V(g(0));function D(t){if(typeof WeakMap!="function")return null;var a=new WeakMap,s=new WeakMap;return(D=function(e){return e?s:a})(t)}function V(t,a){if(!a&&t&&t.__esModule)return t;if(t===null||R(t)!=="object"&&typeof t!="function")return{default:t};var s=D(a);if(s&&s.has(t))return s.get(t);var u={},e=Object.defineProperty&&Object.getOwnPropertyDescriptor;for(var d in t)if(d!=="default"&&Object.prototype.hasOwnProperty.call(t,d)){var m=e?Object.getOwnPropertyDescriptor(t,d):null;m&&(m.get||m.set)?Object.defineProperty(u,d,m):u[d]=t[d]}return u.default=t,s&&s.set(t,u),u}function M(){"use strict";/*! regenerator-runtime -- Copyright (c) 2014-present, Facebook, Inc. -- license (MIT): https://github.com/facebook/regenerator/blob/main/LICENSE */M=function(){return t};var t={},a=Object.prototype,s=a.hasOwnProperty,u=Object.defineProperty||function(i,p,o){i[p]=o.value},e=typeof Symbol=="function"?Symbol:{},d=e.iterator||"@@iterator",m=e.asyncIterator||"@@asyncIterator",b=e.toStringTag||"@@toStringTag";function U(i,p,o){return Object.defineProperty(i,p,{value:o,enumerable:!0,configurable:!0,writable:!0}),i[p]}try{U({},"")}catch(i){U=function(o,h,k){return o[h]=k}}function E(i,p,o,h){var k=p&&p.prototype instanceof Z?p:Z,c=Object.create(k.prototype),y=new On(h||[]);return u(c,"_invoke",{value:ln(i,o,y)}),c}function L(i,p,o){try{return{type:"normal",arg:i.call(p,o)}}catch(h){return{type:"throw",arg:h}}}t.wrap=E;var I={};function Z(){}function cn(){}function K(){}var rn={};U(rn,d,function(){return this});var yn=Object.getPrototypeOf,wn=yn&&yn(yn(vn([])));wn&&wn!==a&&s.call(wn,d)&&(rn=wn);var on=K.prototype=Z.prototype=Object.create(rn);function fn(i){["next","throw","return"].forEach(function(p){U(i,p,function(o){return this._invoke(p,o)})})}function X(i,p){function o(k,c,y,P){var j=L(i[k],i,c);if(j.type!=="throw"){var B=j.arg,q=B.value;return q&&R(q)=="object"&&s.call(q,"__await")?p.resolve(q.__await).then(function(tn){o("next",tn,y,P)},function(tn){o("throw",tn,y,P)}):p.resolve(q).then(function(tn){B.value=tn,y(B)},function(tn){return o("throw",tn,y,P)})}P(j.arg)}var h;u(this,"_invoke",{value:function(c,y){function P(){return new p(function(j,B){o(c,y,j,B)})}return h=h?h.then(P,P):P()}})}function ln(i,p,o){var h="suspendedStart";return function(k,c){if(h==="executing")throw new Error("Generator is already running");if(h==="completed"){if(k==="throw")throw c;return Tn()}for(o.method=k,o.arg=c;;){var y=o.delegate;if(y){var P=en(y,o);if(P){if(P===I)continue;return P}}if(o.method==="next")o.sent=o._sent=o.arg;else if(o.method==="throw"){if(h==="suspendedStart")throw h="completed",o.arg;o.dispatchException(o.arg)}else o.method==="return"&&o.abrupt("return",o.arg);h="executing";var j=L(i,p,o);if(j.type==="normal"){if(h=o.done?"completed":"suspendedYield",j.arg===I)continue;return{value:j.arg,done:o.done}}j.type==="throw"&&(h="completed",o.method="throw",o.arg=j.arg)}}}function en(i,p){var o=p.method,h=i.iterator[o];if(h===void 0)return p.delegate=null,o==="throw"&&i.iterator.return&&(p.method="return",p.arg=void 0,en(i,p),p.method==="throw")||o!=="return"&&(p.method="throw",p.arg=new TypeError("The iterator does not provide a '"+o+"' method")),I;var k=L(h,i.iterator,p.arg);if(k.type==="throw")return p.method="throw",p.arg=k.arg,p.delegate=null,I;var c=k.arg;return c?c.done?(p[i.resultName]=c.value,p.next=i.nextLoc,p.method!=="return"&&(p.method="next",p.arg=void 0),p.delegate=null,I):c:(p.method="throw",p.arg=new TypeError("iterator result is not an object"),p.delegate=null,I)}function an(i){var p={tryLoc:i[0]};1 in i&&(p.catchLoc=i[1]),2 in i&&(p.finallyLoc=i[2],p.afterLoc=i[3]),this.tryEntries.push(p)}function Pn(i){var p=i.completion||{};p.type="normal",delete p.arg,i.completion=p}function On(i){this.tryEntries=[{tryLoc:"root"}],i.forEach(an,this),this.reset(!0)}function vn(i){if(i){var p=i[d];if(p)return p.call(i);if(typeof i.next=="function")return i;if(!isNaN(i.length)){var o=-1,h=function k(){for(;++o<i.length;)if(s.call(i,o))return k.value=i[o],k.done=!1,k;return k.value=void 0,k.done=!0,k};return h.next=h}}return{next:Tn}}function Tn(){return{value:void 0,done:!0}}return cn.prototype=K,u(on,"constructor",{value:K,configurable:!0}),u(K,"constructor",{value:cn,configurable:!0}),cn.displayName=U(K,b,"GeneratorFunction"),t.isGeneratorFunction=function(i){var p=typeof i=="function"&&i.constructor;return!!p&&(p===cn||(p.displayName||p.name)==="GeneratorFunction")},t.mark=function(i){return Object.setPrototypeOf?Object.setPrototypeOf(i,K):(i.__proto__=K,U(i,b,"GeneratorFunction")),i.prototype=Object.create(on),i},t.awrap=function(i){return{__await:i}},fn(X.prototype),U(X.prototype,m,function(){return this}),t.AsyncIterator=X,t.async=function(i,p,o,h,k){k===void 0&&(k=Promise);var c=new X(E(i,p,o,h),k);return t.isGeneratorFunction(p)?c:c.next().then(function(y){return y.done?y.value:c.next()})},fn(on),U(on,b,"Generator"),U(on,d,function(){return this}),U(on,"toString",function(){return"[object Generator]"}),t.keys=function(i){var p=Object(i),o=[];for(var h in p)o.push(h);return o.reverse(),function k(){for(;o.length;){var c=o.pop();if(c in p)return k.value=c,k.done=!1,k}return k.done=!0,k}},t.values=vn,On.prototype={constructor:On,reset:function(p){if(this.prev=0,this.next=0,this.sent=this._sent=void 0,this.done=!1,this.delegate=null,this.method="next",this.arg=void 0,this.tryEntries.forEach(Pn),!p)for(var o in this)o.charAt(0)==="t"&&s.call(this,o)&&!isNaN(+o.slice(1))&&(this[o]=void 0)},stop:function(){this.done=!0;var p=this.tryEntries[0].completion;if(p.type==="throw")throw p.arg;return this.rval},dispatchException:function(p){if(this.done)throw p;var o=this;function h(B,q){return y.type="throw",y.arg=p,o.next=B,q&&(o.method="next",o.arg=void 0),!!q}for(var k=this.tryEntries.length-1;k>=0;--k){var c=this.tryEntries[k],y=c.completion;if(c.tryLoc==="root")return h("end");if(c.tryLoc<=this.prev){var P=s.call(c,"catchLoc"),j=s.call(c,"finallyLoc");if(P&&j){if(this.prev<c.catchLoc)return h(c.catchLoc,!0);if(this.prev<c.finallyLoc)return h(c.finallyLoc)}else if(P){if(this.prev<c.catchLoc)return h(c.catchLoc,!0)}else{if(!j)throw new Error("try statement without catch or finally");if(this.prev<c.finallyLoc)return h(c.finallyLoc)}}}},abrupt:function(p,o){for(var h=this.tryEntries.length-1;h>=0;--h){var k=this.tryEntries[h];if(k.tryLoc<=this.prev&&s.call(k,"finallyLoc")&&this.prev<k.finallyLoc){var c=k;break}}c&&(p==="break"||p==="continue")&&c.tryLoc<=o&&o<=c.finallyLoc&&(c=null);var y=c?c.completion:{};return y.type=p,y.arg=o,c?(this.method="next",this.next=c.finallyLoc,I):this.complete(y)},complete:function(p,o){if(p.type==="throw")throw p.arg;return p.type==="break"||p.type==="continue"?this.next=p.arg:p.type==="return"?(this.rval=this.arg=p.arg,this.method="return",this.next="end"):p.type==="normal"&&o&&(this.next=o),I},finish:function(p){for(var o=this.tryEntries.length-1;o>=0;--o){var h=this.tryEntries[o];if(h.finallyLoc===p)return this.complete(h.completion,h.afterLoc),Pn(h),I}},catch:function(p){for(var o=this.tryEntries.length-1;o>=0;--o){var h=this.tryEntries[o];if(h.tryLoc===p){var k=h.completion;if(k.type==="throw"){var c=k.arg;Pn(h)}return c}}throw new Error("illegal catch attempt")},delegateYield:function(p,o,h){return this.delegate={iterator:vn(p),resultName:o,nextLoc:h},this.method==="next"&&(this.arg=void 0),I}},t}function C(t,a,s,u,e,d,m){try{var b=t[d](m),U=b.value}catch(E){s(E);return}b.done?a(U):Promise.resolve(U).then(u,e)}function W(t){return function(){var a=this,s=arguments;return new Promise(function(u,e){var d=t.apply(a,s);function m(U){C(d,u,e,m,b,"next",U)}function b(U){C(d,u,e,m,b,"throw",U)}m(void 0)})}}function $(t,a){return pn(t)||mn(t,a)||hn(t,a)||nn()}function nn(){throw new TypeError(`Invalid attempt to destructure non-iterable instance.
In order to be iterable, non-array objects must have a [Symbol.iterator]() method.`)}function hn(t,a){if(t){if(typeof t=="string")return _(t,a);var s=Object.prototype.toString.call(t).slice(8,-1);if(s==="Object"&&t.constructor&&(s=t.constructor.name),s==="Map"||s==="Set")return Array.from(t);if(s==="Arguments"||/^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(s))return _(t,a)}}function _(t,a){(a==null||a>t.length)&&(a=t.length);for(var s=0,u=new Array(a);s<a;s++)u[s]=t[s];return u}function mn(t,a){var s=t==null?null:typeof Symbol!="undefined"&&t[Symbol.iterator]||t["@@iterator"];if(s!=null){var u,e,d,m,b=[],U=!0,E=!1;try{if(d=(s=s.call(t)).next,a===0){if(Object(s)!==s)return;U=!1}else for(;!(U=(u=d.call(s)).done)&&(b.push(u.value),b.length!==a);U=!0);}catch(L){E=!0,e=L}finally{try{if(!U&&s.return!=null&&(m=s.return(),Object(m)!==m))return}finally{if(E)throw e}}return b}}function pn(t){if(Array.isArray(t))return t}var dn=function(a){return new Promise(function(s,u){var e=new FileReader;e.readAsDataURL(a),e.onload=function(){return s(e.result)},e.onerror=function(d){return u(d)}})},z=function(){var a=(0,S.useState)(!1),s=$(a,2),u=s[0],e=s[1],d=(0,S.useState)(""),m=$(d,2),b=m[0],U=m[1],E=(0,S.useState)([{uid:"-2",name:"pdf.pdf",status:"done",url:"http://cdn07.foxitsoftware.cn/pub/foxit/cpdf/FoxitCompanyProfile.pdf"},{uid:"-3",name:"doc.doc",status:"done",url:"https://zos.alipayobjects.com/rmsportal/jkjgkEfvpUPVyRjUImniVslZfWPnJuuZ.doc"},{uid:"-4",name:"image.png",status:"error"},{uid:"-5",name:"pdf.pdf",status:"error"},{uid:"-6",name:"doc.doc",status:"error"}]),L=$(E,2),I=L[0],Z=L[1],cn=function(){return e(!1)},K=function(){var on=W(M().mark(function fn(X){return M().wrap(function(en){for(;;)switch(en.prev=en.next){case 0:if(!(!X.url&&!X.preview)){en.next=4;break}return en.next=3,dn(X.originFileObj);case 3:X.preview=en.sent;case 4:e(!0),U(X.url||X.preview);case 6:case"end":return en.stop()}},fn)}));return function(X){return on.apply(this,arguments)}}(),rn=function(fn){var X=fn.fileList;return Z(X)},yn=function(fn,X){var ln=[{type:S.default.createElement(F.FilePdfTwoTone,null),suf:[".pdf"]},{type:S.default.createElement(F.FileExcelTwoTone,null),suf:[".xlsx",".xls",".csv"]},{type:S.default.createElement(F.FileWordTwoTone,null),suf:[".doc",".docx"]},{type:S.default.createElement(F.PictureTwoTone,null),suf:[".webp",".svg",".png",".gif",".jpg",".jpeg",".jfif",".bmp",".dpg"]}],en=fn.status==="uploading"?S.default.createElement(F.LoadingOutlined,null):S.default.createElement(F.PaperClipOutlined,null);return(X==="picture"||X==="picture-card")&&(X==="picture-card"&&fn.status==="uploading"?en=S.default.createElement(F.LoadingOutlined,null):ln.forEach(function(an){an.suf.includes(fn.name.slice(fn.name.lastIndexOf(".")))&&(en=an.type)})),en},wn=S.default.createElement("div",null,S.default.createElement(F.PlusOutlined,null),S.default.createElement("div",{style:{marginTop:8}},"Upload"));return S.default.createElement(S.default.Fragment,null,S.default.createElement(O.Upload,{action:"https://www.mocky.io/v2/5cc8019d300000980a055e76",listType:"picture-card",fileList:I,onPreview:K,onChange:rn,iconRender:yn},I.length>=8?null:wn),S.default.createElement(O.Modal,{open:u,footer:null,onCancel:cn},S.default.createElement("img",{alt:"example",style:{width:"100%"},src:b})))},J=z;return N.createElement(J)}}},4807:function(Y,kn,g){Y.exports={content:{"zh-CN":[["p","\u4F7F\u7528 ",["code","fileList"]," \u5BF9\u5217\u8868\u8FDB\u884C\u5B8C\u5168\u63A7\u5236\uFF0C\u53EF\u4EE5\u5B9E\u73B0\u5404\u79CD\u81EA\u5B9A\u4E49\u529F\u80FD\uFF0C\u4EE5\u4E0B\u6F14\u793A\u4E8C\u79CD\u60C5\u51B5\uFF1A"],["ol",["li",["p","\u4E0A\u4F20\u5217\u8868\u6570\u91CF\u7684\u9650\u5236\u3002"]],["li",["p","\u8BFB\u53D6\u8FDC\u7A0B\u8DEF\u5F84\u5E76\u663E\u793A\u94FE\u63A5\u3002"]]]],"en-US":[["p","You can gain full control over filelist by configuring ",["code","fileList"],". You can accomplish all kinds of customed functions. The following shows two circumstances:"],["ol",["li",["p","limit the number of uploaded files."]],["li",["p","read from response and show file link."]]]]},meta:{order:4,title:{"zh-CN":"\u5B8C\u5168\u63A7\u5236\u7684\u4E0A\u4F20\u5217\u8868","en-US":"Complete control over file list"},filename:"components/upload/demo/fileList.md",id:"components-upload-demo-fileList"},toc:["ul",["li",["a",{className:"bisheng-toc-h2",href:"#zh-CN",title:"zh-CN"},"zh-CN"]],["li",["a",{className:"bisheng-toc-h2",href:"#en-US",title:"en-US"},"en-US"]]],highlightedCode:["pre",{lang:"tsx",highlighted:`import { UploadOutlined } from <span class="token string">'@ant-design/icons'</span><span class="token comment" spellcheck="true">;</span>
import type { UploadProps } from <span class="token string">'antd'</span><span class="token comment" spellcheck="true">;</span>
import { Button<span class="token punctuation">,</span> Upload } from <span class="token string">'antd'</span><span class="token comment" spellcheck="true">;</span>
import type { UploadFile } from <span class="token string">'antd/es/upload/interface'</span><span class="token comment" spellcheck="true">;</span>
import React<span class="token punctuation">,</span> { useState } from <span class="token string">'react'</span><span class="token comment" spellcheck="true">;</span>

<span class="token keyword">const</span> App<span class="token punctuation">:</span> React<span class="token punctuation">.</span>FC <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=</span><span class="token operator">></span> {
  <span class="token keyword">const</span> <span class="token punctuation">[</span>fileList<span class="token punctuation">,</span> setFileList<span class="token punctuation">]</span> <span class="token operator">=</span> useState<span class="token operator">&lt;</span>UploadFile<span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token operator">></span><span class="token punctuation">(</span><span class="token punctuation">[</span>
    {
      uid<span class="token punctuation">:</span> <span class="token string">'-1'</span><span class="token punctuation">,</span>
      name<span class="token punctuation">:</span> <span class="token string">'xxx.png'</span><span class="token punctuation">,</span>
      status<span class="token punctuation">:</span> <span class="token string">'done'</span><span class="token punctuation">,</span>
      url<span class="token punctuation">:</span> <span class="token string">'http://www.baidu.com/xxx.png'</span><span class="token punctuation">,</span>
    }<span class="token punctuation">,</span>
  <span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token comment" spellcheck="true">;</span>

  <span class="token keyword">const</span> handleChange<span class="token punctuation">:</span> UploadProps<span class="token punctuation">[</span><span class="token string">'onChange'</span><span class="token punctuation">]</span> <span class="token operator">=</span> info <span class="token operator">=</span><span class="token operator">></span> {
    let newFileList <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token punctuation">.</span>info<span class="token punctuation">.</span>fileList<span class="token punctuation">]</span><span class="token comment" spellcheck="true">;</span>

    <span class="token operator">/</span><span class="token operator">/</span> <span class="token number">1</span><span class="token punctuation">.</span> Limit the number of uploaded files
    <span class="token operator">/</span><span class="token operator">/</span> Only <span class="token keyword">to</span> show two recent uploaded files<span class="token punctuation">,</span> <span class="token operator">and</span> old ones will be replaced by the new
    newFileList <span class="token operator">=</span> newFileList<span class="token punctuation">.</span><span class="token function">slice</span><span class="token punctuation">(</span><span class="token operator">-</span><span class="token number">2</span><span class="token punctuation">)</span><span class="token comment" spellcheck="true">;</span>

    <span class="token operator">/</span><span class="token operator">/</span> <span class="token number">2</span><span class="token punctuation">.</span> Read from response <span class="token operator">and</span> show file link
    newFileList <span class="token operator">=</span> newFileList<span class="token punctuation">.</span><span class="token function">map</span><span class="token punctuation">(</span>file <span class="token operator">=</span><span class="token operator">></span> {
      <span class="token keyword">if</span> <span class="token punctuation">(</span>file<span class="token punctuation">.</span>response<span class="token punctuation">)</span> {
        <span class="token operator">/</span><span class="token operator">/</span> Component will show file<span class="token punctuation">.</span>url as link
        file<span class="token punctuation">.</span>url <span class="token operator">=</span> file<span class="token punctuation">.</span>response<span class="token punctuation">.</span>url<span class="token comment" spellcheck="true">;</span>
      }
      return file<span class="token comment" spellcheck="true">;</span>
    }<span class="token punctuation">)</span><span class="token comment" spellcheck="true">;</span>

    <span class="token function">setFileList</span><span class="token punctuation">(</span>newFileList<span class="token punctuation">)</span><span class="token comment" spellcheck="true">;</span>
  }<span class="token comment" spellcheck="true">;</span>

  <span class="token keyword">const</span> props <span class="token operator">=</span> {
    action<span class="token punctuation">:</span> <span class="token string">'https://www.mocky.io/v2/5cc8019d300000980a055e76'</span><span class="token punctuation">,</span>
    onChange<span class="token punctuation">:</span> handleChange<span class="token punctuation">,</span>
    multiple<span class="token punctuation">:</span> <span class="token boolean">true</span><span class="token punctuation">,</span>
  }<span class="token comment" spellcheck="true">;</span>
  return <span class="token punctuation">(</span>
    <span class="token operator">&lt;</span>Upload {<span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token punctuation">.</span>props} fileList<span class="token operator">=</span>{fileList}<span class="token operator">></span>
      <span class="token operator">&lt;</span>Button icon<span class="token operator">=</span>{<span class="token operator">&lt;</span>UploadOutlined <span class="token operator">/</span><span class="token operator">></span>}<span class="token operator">></span>Upload<span class="token operator">&lt;</span><span class="token operator">/</span>Button<span class="token operator">></span>
    <span class="token operator">&lt;</span><span class="token operator">/</span>Upload<span class="token operator">></span>
  <span class="token punctuation">)</span><span class="token comment" spellcheck="true">;</span>
}<span class="token comment" spellcheck="true">;</span>

export <span class="token keyword">default</span> App<span class="token comment" spellcheck="true">;</span>`}],highlightedCodes:{tsx:`<span class="token keyword">import</span> <span class="token punctuation">{</span> UploadOutlined <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">'@ant-design/icons'</span><span class="token punctuation">;</span>
<span class="token keyword">import</span> type <span class="token punctuation">{</span> UploadProps <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">'antd'</span><span class="token punctuation">;</span>
<span class="token keyword">import</span> <span class="token punctuation">{</span> Button<span class="token punctuation">,</span> Upload <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">'antd'</span><span class="token punctuation">;</span>
<span class="token keyword">import</span> type <span class="token punctuation">{</span> UploadFile <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">'antd/es/upload/interface'</span><span class="token punctuation">;</span>
<span class="token keyword">import</span> React<span class="token punctuation">,</span> <span class="token punctuation">{</span> useState <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">'react'</span><span class="token punctuation">;</span>

<span class="token keyword">const</span> App<span class="token operator">:</span> React<span class="token punctuation">.</span><span class="token function-variable function">FC</span> <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=></span> <span class="token punctuation">{</span>
  <span class="token keyword">const</span> <span class="token punctuation">[</span>fileList<span class="token punctuation">,</span> setFileList<span class="token punctuation">]</span> <span class="token operator">=</span> useState<span class="token operator">&lt;</span>UploadFile<span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token operator">></span><span class="token punctuation">(</span><span class="token punctuation">[</span>
    <span class="token punctuation">{</span>
      uid<span class="token operator">:</span> <span class="token string">'-1'</span><span class="token punctuation">,</span>
      name<span class="token operator">:</span> <span class="token string">'xxx.png'</span><span class="token punctuation">,</span>
      status<span class="token operator">:</span> <span class="token string">'done'</span><span class="token punctuation">,</span>
      url<span class="token operator">:</span> <span class="token string">'http://www.baidu.com/xxx.png'</span><span class="token punctuation">,</span>
    <span class="token punctuation">}</span><span class="token punctuation">,</span>
  <span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

  <span class="token keyword">const</span> handleChange<span class="token operator">:</span> UploadProps<span class="token punctuation">[</span><span class="token string">'onChange'</span><span class="token punctuation">]</span> <span class="token operator">=</span> info <span class="token operator">=></span> <span class="token punctuation">{</span>
    <span class="token keyword">let</span> newFileList <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token operator">...</span>info<span class="token punctuation">.</span>fileList<span class="token punctuation">]</span><span class="token punctuation">;</span>

    <span class="token comment">// 1. Limit the number of uploaded files</span>
    <span class="token comment">// Only to show two recent uploaded files, and old ones will be replaced by the new</span>
    newFileList <span class="token operator">=</span> newFileList<span class="token punctuation">.</span><span class="token function">slice</span><span class="token punctuation">(</span><span class="token operator">-</span><span class="token number">2</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

    <span class="token comment">// 2. Read from response and show file link</span>
    newFileList <span class="token operator">=</span> newFileList<span class="token punctuation">.</span><span class="token function">map</span><span class="token punctuation">(</span>file <span class="token operator">=></span> <span class="token punctuation">{</span>
      <span class="token keyword">if</span> <span class="token punctuation">(</span>file<span class="token punctuation">.</span>response<span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token comment">// Component will show file.url as link</span>
        file<span class="token punctuation">.</span>url <span class="token operator">=</span> file<span class="token punctuation">.</span>response<span class="token punctuation">.</span>url<span class="token punctuation">;</span>
      <span class="token punctuation">}</span>
      <span class="token keyword">return</span> file<span class="token punctuation">;</span>
    <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

    <span class="token function">setFileList</span><span class="token punctuation">(</span>newFileList<span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token punctuation">}</span><span class="token punctuation">;</span>

  <span class="token keyword">const</span> props <span class="token operator">=</span> <span class="token punctuation">{</span>
    action<span class="token operator">:</span> <span class="token string">'https://www.mocky.io/v2/5cc8019d300000980a055e76'</span><span class="token punctuation">,</span>
    onChange<span class="token operator">:</span> handleChange<span class="token punctuation">,</span>
    multiple<span class="token operator">:</span> <span class="token boolean">true</span><span class="token punctuation">,</span>
  <span class="token punctuation">}</span><span class="token punctuation">;</span>
  <span class="token keyword">return</span> <span class="token punctuation">(</span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span><span class="token class-name">Upload</span></span> <span class="token spread"><span class="token punctuation">{</span><span class="token operator">...</span>props<span class="token punctuation">}</span></span> <span class="token attr-name">fileList</span><span class="token script language-javascript"><span class="token script-punctuation punctuation">=</span><span class="token punctuation">{</span>fileList<span class="token punctuation">}</span></span><span class="token punctuation">></span></span>
      <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span><span class="token class-name">Button</span></span> <span class="token attr-name">icon</span><span class="token script language-javascript"><span class="token script-punctuation punctuation">=</span><span class="token punctuation">{</span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span><span class="token class-name">UploadOutlined</span></span> <span class="token punctuation">/></span></span><span class="token punctuation">}</span></span><span class="token punctuation">></span></span>Upload<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span><span class="token class-name">Button</span></span><span class="token punctuation">></span></span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span><span class="token class-name">Upload</span></span><span class="token punctuation">></span></span>
  <span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span><span class="token punctuation">;</span>

<span class="token keyword">export</span> <span class="token keyword">default</span> App<span class="token punctuation">;</span>`,jsx:`<span class="token keyword">import</span> <span class="token punctuation">{</span> UploadOutlined <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">'@ant-design/icons'</span><span class="token punctuation">;</span>
<span class="token keyword">import</span> <span class="token punctuation">{</span> Button<span class="token punctuation">,</span> Upload <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">'antd'</span><span class="token punctuation">;</span>
<span class="token keyword">import</span> React<span class="token punctuation">,</span> <span class="token punctuation">{</span> useState <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">'react'</span><span class="token punctuation">;</span>
<span class="token keyword">const</span> <span class="token function-variable function">App</span> <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=></span> <span class="token punctuation">{</span>
  <span class="token keyword">const</span> <span class="token punctuation">[</span>fileList<span class="token punctuation">,</span> setFileList<span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token function">useState</span><span class="token punctuation">(</span><span class="token punctuation">[</span>
    <span class="token punctuation">{</span>
      <span class="token literal-property property">uid</span><span class="token operator">:</span> <span class="token string">'-1'</span><span class="token punctuation">,</span>
      <span class="token literal-property property">name</span><span class="token operator">:</span> <span class="token string">'xxx.png'</span><span class="token punctuation">,</span>
      <span class="token literal-property property">status</span><span class="token operator">:</span> <span class="token string">'done'</span><span class="token punctuation">,</span>
      <span class="token literal-property property">url</span><span class="token operator">:</span> <span class="token string">'http://www.baidu.com/xxx.png'</span><span class="token punctuation">,</span>
    <span class="token punctuation">}</span><span class="token punctuation">,</span>
  <span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token keyword">const</span> <span class="token function-variable function">handleChange</span> <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token parameter">info</span><span class="token punctuation">)</span> <span class="token operator">=></span> <span class="token punctuation">{</span>
    <span class="token keyword">let</span> newFileList <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token operator">...</span>info<span class="token punctuation">.</span>fileList<span class="token punctuation">]</span><span class="token punctuation">;</span>

    <span class="token comment">// 1. Limit the number of uploaded files</span>
    <span class="token comment">// Only to show two recent uploaded files, and old ones will be replaced by the new</span>
    newFileList <span class="token operator">=</span> newFileList<span class="token punctuation">.</span><span class="token function">slice</span><span class="token punctuation">(</span><span class="token operator">-</span><span class="token number">2</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

    <span class="token comment">// 2. Read from response and show file link</span>
    newFileList <span class="token operator">=</span> newFileList<span class="token punctuation">.</span><span class="token function">map</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token parameter">file</span><span class="token punctuation">)</span> <span class="token operator">=></span> <span class="token punctuation">{</span>
      <span class="token keyword">if</span> <span class="token punctuation">(</span>file<span class="token punctuation">.</span>response<span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token comment">// Component will show file.url as link</span>
        file<span class="token punctuation">.</span>url <span class="token operator">=</span> file<span class="token punctuation">.</span>response<span class="token punctuation">.</span>url<span class="token punctuation">;</span>
      <span class="token punctuation">}</span>
      <span class="token keyword">return</span> file<span class="token punctuation">;</span>
    <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token function">setFileList</span><span class="token punctuation">(</span>newFileList<span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token punctuation">}</span><span class="token punctuation">;</span>
  <span class="token keyword">const</span> props <span class="token operator">=</span> <span class="token punctuation">{</span>
    <span class="token literal-property property">action</span><span class="token operator">:</span> <span class="token string">'https://www.mocky.io/v2/5cc8019d300000980a055e76'</span><span class="token punctuation">,</span>
    <span class="token literal-property property">onChange</span><span class="token operator">:</span> handleChange<span class="token punctuation">,</span>
    <span class="token literal-property property">multiple</span><span class="token operator">:</span> <span class="token boolean">true</span><span class="token punctuation">,</span>
  <span class="token punctuation">}</span><span class="token punctuation">;</span>
  <span class="token keyword">return</span> <span class="token punctuation">(</span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span><span class="token class-name">Upload</span></span> <span class="token spread"><span class="token punctuation">{</span><span class="token operator">...</span>props<span class="token punctuation">}</span></span> <span class="token attr-name">fileList</span><span class="token script language-javascript"><span class="token script-punctuation punctuation">=</span><span class="token punctuation">{</span>fileList<span class="token punctuation">}</span></span><span class="token punctuation">></span></span>
      <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span><span class="token class-name">Button</span></span> <span class="token attr-name">icon</span><span class="token script language-javascript"><span class="token script-punctuation punctuation">=</span><span class="token punctuation">{</span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span><span class="token class-name">UploadOutlined</span></span> <span class="token punctuation">/></span></span><span class="token punctuation">}</span></span><span class="token punctuation">></span></span>Upload<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span><span class="token class-name">Button</span></span><span class="token punctuation">></span></span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span><span class="token class-name">Upload</span></span><span class="token punctuation">></span></span>
  <span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span><span class="token punctuation">;</span>
<span class="token keyword">export</span> <span class="token keyword">default</span> App<span class="token punctuation">;</span>
`},preview:function(){var N=g(0),H=g(47);function R(a){return R=typeof Symbol=="function"&&typeof Symbol.iterator=="symbol"?function(s){return typeof s}:function(s){return s&&typeof Symbol=="function"&&s.constructor===Symbol&&s!==Symbol.prototype?"symbol":typeof s},R(a)}var F=g(61),O=g(12),S=V(g(0));function D(a){if(typeof WeakMap!="function")return null;var s=new WeakMap,u=new WeakMap;return(D=function(d){return d?u:s})(a)}function V(a,s){if(!s&&a&&a.__esModule)return a;if(a===null||R(a)!=="object"&&typeof a!="function")return{default:a};var u=D(s);if(u&&u.has(a))return u.get(a);var e={},d=Object.defineProperty&&Object.getOwnPropertyDescriptor;for(var m in a)if(m!=="default"&&Object.prototype.hasOwnProperty.call(a,m)){var b=d?Object.getOwnPropertyDescriptor(a,m):null;b&&(b.get||b.set)?Object.defineProperty(e,m,b):e[m]=a[m]}return e.default=a,u&&u.set(a,e),e}function M(){return M=Object.assign?Object.assign.bind():function(a){for(var s=1;s<arguments.length;s++){var u=arguments[s];for(var e in u)Object.prototype.hasOwnProperty.call(u,e)&&(a[e]=u[e])}return a},M.apply(this,arguments)}function C(a){return nn(a)||$(a)||mn(a)||W()}function W(){throw new TypeError(`Invalid attempt to spread non-iterable instance.
In order to be iterable, non-array objects must have a [Symbol.iterator]() method.`)}function $(a){if(typeof Symbol!="undefined"&&a[Symbol.iterator]!=null||a["@@iterator"]!=null)return Array.from(a)}function nn(a){if(Array.isArray(a))return pn(a)}function hn(a,s){return z(a)||dn(a,s)||mn(a,s)||_()}function _(){throw new TypeError(`Invalid attempt to destructure non-iterable instance.
In order to be iterable, non-array objects must have a [Symbol.iterator]() method.`)}function mn(a,s){if(a){if(typeof a=="string")return pn(a,s);var u=Object.prototype.toString.call(a).slice(8,-1);if(u==="Object"&&a.constructor&&(u=a.constructor.name),u==="Map"||u==="Set")return Array.from(a);if(u==="Arguments"||/^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(u))return pn(a,s)}}function pn(a,s){(s==null||s>a.length)&&(s=a.length);for(var u=0,e=new Array(s);u<s;u++)e[u]=a[u];return e}function dn(a,s){var u=a==null?null:typeof Symbol!="undefined"&&a[Symbol.iterator]||a["@@iterator"];if(u!=null){var e,d,m,b,U=[],E=!0,L=!1;try{if(m=(u=u.call(a)).next,s===0){if(Object(u)!==u)return;E=!1}else for(;!(E=(e=m.call(u)).done)&&(U.push(e.value),U.length!==s);E=!0);}catch(I){L=!0,d=I}finally{try{if(!E&&u.return!=null&&(b=u.return(),Object(b)!==b))return}finally{if(L)throw d}}return U}}function z(a){if(Array.isArray(a))return a}var J=function(){var s=(0,S.useState)([{uid:"-1",name:"xxx.png",status:"done",url:"http://www.baidu.com/xxx.png"}]),u=hn(s,2),e=u[0],d=u[1],m=function(E){var L=C(E.fileList);L=L.slice(-2),L=L.map(function(I){return I.response&&(I.url=I.response.url),I}),d(L)},b={action:"https://www.mocky.io/v2/5cc8019d300000980a055e76",onChange:m,multiple:!0};return S.default.createElement(O.Upload,M({},b,{fileList:e}),S.default.createElement(O.Button,{icon:S.default.createElement(F.UploadOutlined,null)},"Upload"))},t=J;return N.createElement(t)}}},4808:function(Y,kn,g){Y.exports={content:{"zh-CN":[["p","\u901A\u8FC7 ",["code","maxCount"]," \u9650\u5236\u4E0A\u4F20\u6570\u91CF\u3002\u5F53\u4E3A ",["code","1"]," \u65F6\uFF0C\u59CB\u7EC8\u7528\u6700\u65B0\u4E0A\u4F20\u7684\u4EE3\u66FF\u5F53\u524D\u3002"]],"en-US":[["p","Limit files with ",["code","maxCount"],". Will replace current one when ",["code","maxCount"]," is ",["code","1"],"."]]},meta:{order:10,title:{"zh-CN":"\u9650\u5236\u6570\u91CF","en-US":"Max Count"},filename:"components/upload/demo/max-count.md",id:"components-upload-demo-max-count"},toc:["ul",["li",["a",{className:"bisheng-toc-h2",href:"#zh-CN",title:"zh-CN"},"zh-CN"]],["li",["a",{className:"bisheng-toc-h2",href:"#en-US",title:"en-US"},"en-US"]]],highlightedCode:["pre",{lang:"tsx",highlighted:`import { UploadOutlined } from <span class="token string">'@ant-design/icons'</span><span class="token comment" spellcheck="true">;</span>
import { Button<span class="token punctuation">,</span> Space<span class="token punctuation">,</span> Upload } from <span class="token string">'antd'</span><span class="token comment" spellcheck="true">;</span>
import React from <span class="token string">'react'</span><span class="token comment" spellcheck="true">;</span>

<span class="token keyword">const</span> App<span class="token punctuation">:</span> React<span class="token punctuation">.</span>FC <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=</span><span class="token operator">></span> <span class="token punctuation">(</span>
  <span class="token operator">&lt;</span>Space direction<span class="token operator">=</span><span class="token string">"vertical"</span> style<span class="token operator">=</span>{{ width<span class="token punctuation">:</span> <span class="token string">'100%'</span> }} size<span class="token operator">=</span><span class="token string">"large"</span><span class="token operator">></span>
    <span class="token operator">&lt;</span>Upload
      action<span class="token operator">=</span><span class="token string">"https://www.mocky.io/v2/5cc8019d300000980a055e76"</span>
      listType<span class="token operator">=</span><span class="token string">"picture"</span>
      maxCount<span class="token operator">=</span>{<span class="token number">1</span>}
    <span class="token operator">></span>
      <span class="token operator">&lt;</span>Button icon<span class="token operator">=</span>{<span class="token operator">&lt;</span>UploadOutlined <span class="token operator">/</span><span class="token operator">></span>}<span class="token operator">></span>Upload <span class="token punctuation">(</span>Max<span class="token punctuation">:</span> <span class="token number">1</span><span class="token punctuation">)</span><span class="token operator">&lt;</span><span class="token operator">/</span>Button<span class="token operator">></span>
    <span class="token operator">&lt;</span><span class="token operator">/</span>Upload<span class="token operator">></span>
    <span class="token operator">&lt;</span>Upload
      action<span class="token operator">=</span><span class="token string">"https://www.mocky.io/v2/5cc8019d300000980a055e76"</span>
      listType<span class="token operator">=</span><span class="token string">"picture"</span>
      maxCount<span class="token operator">=</span>{<span class="token number">3</span>}
      multiple
    <span class="token operator">></span>
      <span class="token operator">&lt;</span>Button icon<span class="token operator">=</span>{<span class="token operator">&lt;</span>UploadOutlined <span class="token operator">/</span><span class="token operator">></span>}<span class="token operator">></span>Upload <span class="token punctuation">(</span>Max<span class="token punctuation">:</span> <span class="token number">3</span><span class="token punctuation">)</span><span class="token operator">&lt;</span><span class="token operator">/</span>Button<span class="token operator">></span>
    <span class="token operator">&lt;</span><span class="token operator">/</span>Upload<span class="token operator">></span>
  <span class="token operator">&lt;</span><span class="token operator">/</span>Space<span class="token operator">></span>
<span class="token punctuation">)</span><span class="token comment" spellcheck="true">;</span>

export <span class="token keyword">default</span> App<span class="token comment" spellcheck="true">;</span>`}],highlightedCodes:{tsx:`<span class="token keyword">import</span> <span class="token punctuation">{</span> UploadOutlined <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">'@ant-design/icons'</span><span class="token punctuation">;</span>
<span class="token keyword">import</span> <span class="token punctuation">{</span> Button<span class="token punctuation">,</span> Space<span class="token punctuation">,</span> Upload <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">'antd'</span><span class="token punctuation">;</span>
<span class="token keyword">import</span> React <span class="token keyword">from</span> <span class="token string">'react'</span><span class="token punctuation">;</span>

<span class="token keyword">const</span> App<span class="token operator">:</span> React<span class="token punctuation">.</span><span class="token function-variable function">FC</span> <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=></span> <span class="token punctuation">(</span>
  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span><span class="token class-name">Space</span></span> <span class="token attr-name">direction</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>vertical<span class="token punctuation">"</span></span> <span class="token attr-name">style</span><span class="token script language-javascript"><span class="token script-punctuation punctuation">=</span><span class="token punctuation">{</span><span class="token punctuation">{</span> width<span class="token operator">:</span> <span class="token string">'100%'</span> <span class="token punctuation">}</span><span class="token punctuation">}</span></span> <span class="token attr-name">size</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>large<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span><span class="token class-name">Upload</span></span>
      <span class="token attr-name">action</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>https://www.mocky.io/v2/5cc8019d300000980a055e76<span class="token punctuation">"</span></span>
      <span class="token attr-name">listType</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>picture<span class="token punctuation">"</span></span>
      <span class="token attr-name">maxCount</span><span class="token script language-javascript"><span class="token script-punctuation punctuation">=</span><span class="token punctuation">{</span><span class="token number">1</span><span class="token punctuation">}</span></span>
    <span class="token punctuation">></span></span>
      <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span><span class="token class-name">Button</span></span> <span class="token attr-name">icon</span><span class="token script language-javascript"><span class="token script-punctuation punctuation">=</span><span class="token punctuation">{</span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span><span class="token class-name">UploadOutlined</span></span> <span class="token punctuation">/></span></span><span class="token punctuation">}</span></span><span class="token punctuation">></span></span><span class="token function">Upload</span> <span class="token punctuation">(</span>Max<span class="token operator">:</span> <span class="token number">1</span><span class="token punctuation">)</span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span><span class="token class-name">Button</span></span><span class="token punctuation">></span></span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span><span class="token class-name">Upload</span></span><span class="token punctuation">></span></span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span><span class="token class-name">Upload</span></span>
      <span class="token attr-name">action</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>https://www.mocky.io/v2/5cc8019d300000980a055e76<span class="token punctuation">"</span></span>
      <span class="token attr-name">listType</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>picture<span class="token punctuation">"</span></span>
      <span class="token attr-name">maxCount</span><span class="token script language-javascript"><span class="token script-punctuation punctuation">=</span><span class="token punctuation">{</span><span class="token number">3</span><span class="token punctuation">}</span></span>
      <span class="token attr-name">multiple</span>
    <span class="token punctuation">></span></span>
      <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span><span class="token class-name">Button</span></span> <span class="token attr-name">icon</span><span class="token script language-javascript"><span class="token script-punctuation punctuation">=</span><span class="token punctuation">{</span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span><span class="token class-name">UploadOutlined</span></span> <span class="token punctuation">/></span></span><span class="token punctuation">}</span></span><span class="token punctuation">></span></span><span class="token function">Upload</span> <span class="token punctuation">(</span>Max<span class="token operator">:</span> <span class="token number">3</span><span class="token punctuation">)</span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span><span class="token class-name">Button</span></span><span class="token punctuation">></span></span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span><span class="token class-name">Upload</span></span><span class="token punctuation">></span></span>
  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span><span class="token class-name">Space</span></span><span class="token punctuation">></span></span>
<span class="token punctuation">)</span><span class="token punctuation">;</span>

<span class="token keyword">export</span> <span class="token keyword">default</span> App<span class="token punctuation">;</span>`,jsx:`<span class="token keyword">import</span> <span class="token punctuation">{</span> UploadOutlined <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">'@ant-design/icons'</span><span class="token punctuation">;</span>
<span class="token keyword">import</span> <span class="token punctuation">{</span> Button<span class="token punctuation">,</span> Space<span class="token punctuation">,</span> Upload <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">'antd'</span><span class="token punctuation">;</span>
<span class="token keyword">import</span> React <span class="token keyword">from</span> <span class="token string">'react'</span><span class="token punctuation">;</span>
<span class="token keyword">const</span> <span class="token function-variable function">App</span> <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=></span> <span class="token punctuation">(</span>
  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span><span class="token class-name">Space</span></span>
    <span class="token attr-name">direction</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>vertical<span class="token punctuation">"</span></span>
    <span class="token attr-name">style</span><span class="token script language-javascript"><span class="token script-punctuation punctuation">=</span><span class="token punctuation">{</span><span class="token punctuation">{</span>
      <span class="token literal-property property">width</span><span class="token operator">:</span> <span class="token string">'100%'</span><span class="token punctuation">,</span>
    <span class="token punctuation">}</span><span class="token punctuation">}</span></span>
    <span class="token attr-name">size</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>large<span class="token punctuation">"</span></span>
  <span class="token punctuation">></span></span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span><span class="token class-name">Upload</span></span>
      <span class="token attr-name">action</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>https://www.mocky.io/v2/5cc8019d300000980a055e76<span class="token punctuation">"</span></span>
      <span class="token attr-name">listType</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>picture<span class="token punctuation">"</span></span>
      <span class="token attr-name">maxCount</span><span class="token script language-javascript"><span class="token script-punctuation punctuation">=</span><span class="token punctuation">{</span><span class="token number">1</span><span class="token punctuation">}</span></span>
    <span class="token punctuation">></span></span>
      <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span><span class="token class-name">Button</span></span> <span class="token attr-name">icon</span><span class="token script language-javascript"><span class="token script-punctuation punctuation">=</span><span class="token punctuation">{</span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span><span class="token class-name">UploadOutlined</span></span> <span class="token punctuation">/></span></span><span class="token punctuation">}</span></span><span class="token punctuation">></span></span><span class="token function">Upload</span> <span class="token punctuation">(</span>Max<span class="token operator">:</span> <span class="token number">1</span><span class="token punctuation">)</span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span><span class="token class-name">Button</span></span><span class="token punctuation">></span></span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span><span class="token class-name">Upload</span></span><span class="token punctuation">></span></span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span><span class="token class-name">Upload</span></span>
      <span class="token attr-name">action</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>https://www.mocky.io/v2/5cc8019d300000980a055e76<span class="token punctuation">"</span></span>
      <span class="token attr-name">listType</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>picture<span class="token punctuation">"</span></span>
      <span class="token attr-name">maxCount</span><span class="token script language-javascript"><span class="token script-punctuation punctuation">=</span><span class="token punctuation">{</span><span class="token number">3</span><span class="token punctuation">}</span></span>
      <span class="token attr-name">multiple</span>
    <span class="token punctuation">></span></span>
      <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span><span class="token class-name">Button</span></span> <span class="token attr-name">icon</span><span class="token script language-javascript"><span class="token script-punctuation punctuation">=</span><span class="token punctuation">{</span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span><span class="token class-name">UploadOutlined</span></span> <span class="token punctuation">/></span></span><span class="token punctuation">}</span></span><span class="token punctuation">></span></span><span class="token function">Upload</span> <span class="token punctuation">(</span>Max<span class="token operator">:</span> <span class="token number">3</span><span class="token punctuation">)</span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span><span class="token class-name">Button</span></span><span class="token punctuation">></span></span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span><span class="token class-name">Upload</span></span><span class="token punctuation">></span></span>
  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span><span class="token class-name">Space</span></span><span class="token punctuation">></span></span>
<span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token keyword">export</span> <span class="token keyword">default</span> App<span class="token punctuation">;</span>
`},preview:function(){var N=g(0),H=g(47),R=g(61),F=g(12),O=S(g(0));function S(M){return M&&M.__esModule?M:{default:M}}var D=function(){return O.default.createElement(F.Space,{direction:"vertical",style:{width:"100%"},size:"large"},O.default.createElement(F.Upload,{action:"https://www.mocky.io/v2/5cc8019d300000980a055e76",listType:"picture",maxCount:1},O.default.createElement(F.Button,{icon:O.default.createElement(R.UploadOutlined,null)},"Upload (Max: 1)")),O.default.createElement(F.Upload,{action:"https://www.mocky.io/v2/5cc8019d300000980a055e76",listType:"picture",maxCount:3,multiple:!0},O.default.createElement(F.Button,{icon:O.default.createElement(R.UploadOutlined,null)},"Upload (Max: 3)")))},V=D;return N.createElement(V)}}},4809:function(Y,kn,g){Y.exports={content:{"zh-CN":[["p","\u7528\u6237\u53EF\u4EE5\u4E0A\u4F20\u56FE\u7247\u5E76\u5728\u5217\u8868\u4E2D\u663E\u793A\u7F29\u7565\u56FE\u3002\u5F53\u4E0A\u4F20\u7167\u7247\u6570\u5230\u8FBE\u9650\u5236\u540E\uFF0C\u4E0A\u4F20\u6309\u94AE\u6D88\u5931\u3002"]],"en-US":[["p","After users upload picture, the thumbnail will be shown in list. The upload button will disappear when count meets limitation."]]},meta:{order:3,title:{"zh-CN":"\u7167\u7247\u5899","en-US":"Pictures Wall"},filename:"components/upload/demo/picture-card.md",id:"components-upload-demo-picture-card"},toc:["ul",["li",["a",{className:"bisheng-toc-h2",href:"#zh-CN",title:"zh-CN"},"zh-CN"]],["li",["a",{className:"bisheng-toc-h2",href:"#en-US",title:"en-US"},"en-US"]]],highlightedCode:["pre",{lang:"tsx",highlighted:`import { PlusOutlined } from <span class="token string">'@ant-design/icons'</span><span class="token comment" spellcheck="true">;</span>
import { Modal<span class="token punctuation">,</span> Upload } from <span class="token string">'antd'</span><span class="token comment" spellcheck="true">;</span>
import type { RcFile<span class="token punctuation">,</span> UploadProps } from <span class="token string">'antd/es/upload'</span><span class="token comment" spellcheck="true">;</span>
import type { UploadFile } from <span class="token string">'antd/es/upload/interface'</span><span class="token comment" spellcheck="true">;</span>
import React<span class="token punctuation">,</span> { useState } from <span class="token string">'react'</span><span class="token comment" spellcheck="true">;</span>

<span class="token keyword">const</span> getBase64 <span class="token operator">=</span> <span class="token punctuation">(</span>file<span class="token punctuation">:</span> RcFile<span class="token punctuation">)</span><span class="token punctuation">:</span> Promise<span class="token operator">&lt;</span>string<span class="token operator">></span> <span class="token operator">=</span><span class="token operator">></span>
  new <span class="token function">Promise</span><span class="token punctuation">(</span><span class="token punctuation">(</span>resolve<span class="token punctuation">,</span> reject<span class="token punctuation">)</span> <span class="token operator">=</span><span class="token operator">></span> {
    <span class="token keyword">const</span> reader <span class="token operator">=</span> new <span class="token function">FileReader</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token comment" spellcheck="true">;</span>
    reader<span class="token punctuation">.</span><span class="token function">readAsDataURL</span><span class="token punctuation">(</span>file<span class="token punctuation">)</span><span class="token comment" spellcheck="true">;</span>
    reader<span class="token punctuation">.</span>onload <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=</span><span class="token operator">></span> <span class="token function">resolve</span><span class="token punctuation">(</span>reader<span class="token punctuation">.</span>result as string<span class="token punctuation">)</span><span class="token comment" spellcheck="true">;</span>
    reader<span class="token punctuation">.</span>onerror <span class="token operator">=</span> error <span class="token operator">=</span><span class="token operator">></span> <span class="token function">reject</span><span class="token punctuation">(</span>error<span class="token punctuation">)</span><span class="token comment" spellcheck="true">;</span>
  }<span class="token punctuation">)</span><span class="token comment" spellcheck="true">;</span>

<span class="token keyword">const</span> App<span class="token punctuation">:</span> React<span class="token punctuation">.</span>FC <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=</span><span class="token operator">></span> {
  <span class="token keyword">const</span> <span class="token punctuation">[</span>previewOpen<span class="token punctuation">,</span> setPreviewOpen<span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token function">useState</span><span class="token punctuation">(</span><span class="token boolean">false</span><span class="token punctuation">)</span><span class="token comment" spellcheck="true">;</span>
  <span class="token keyword">const</span> <span class="token punctuation">[</span>previewImage<span class="token punctuation">,</span> setPreviewImage<span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token function">useState</span><span class="token punctuation">(</span><span class="token string">''</span><span class="token punctuation">)</span><span class="token comment" spellcheck="true">;</span>
  <span class="token keyword">const</span> <span class="token punctuation">[</span>previewTitle<span class="token punctuation">,</span> setPreviewTitle<span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token function">useState</span><span class="token punctuation">(</span><span class="token string">''</span><span class="token punctuation">)</span><span class="token comment" spellcheck="true">;</span>
  <span class="token keyword">const</span> <span class="token punctuation">[</span>fileList<span class="token punctuation">,</span> setFileList<span class="token punctuation">]</span> <span class="token operator">=</span> useState<span class="token operator">&lt;</span>UploadFile<span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token operator">></span><span class="token punctuation">(</span><span class="token punctuation">[</span>
    {
      uid<span class="token punctuation">:</span> <span class="token string">'-1'</span><span class="token punctuation">,</span>
      name<span class="token punctuation">:</span> <span class="token string">'image.png'</span><span class="token punctuation">,</span>
      status<span class="token punctuation">:</span> <span class="token string">'done'</span><span class="token punctuation">,</span>
      url<span class="token punctuation">:</span> <span class="token string">'https://zos.alipayobjects.com/rmsportal/jkjgkEfvpUPVyRjUImniVslZfWPnJuuZ.png'</span><span class="token punctuation">,</span>
    }<span class="token punctuation">,</span>
    {
      uid<span class="token punctuation">:</span> <span class="token string">'-2'</span><span class="token punctuation">,</span>
      name<span class="token punctuation">:</span> <span class="token string">'image.png'</span><span class="token punctuation">,</span>
      status<span class="token punctuation">:</span> <span class="token string">'done'</span><span class="token punctuation">,</span>
      url<span class="token punctuation">:</span> <span class="token string">'https://zos.alipayobjects.com/rmsportal/jkjgkEfvpUPVyRjUImniVslZfWPnJuuZ.png'</span><span class="token punctuation">,</span>
    }<span class="token punctuation">,</span>
    {
      uid<span class="token punctuation">:</span> <span class="token string">'-3'</span><span class="token punctuation">,</span>
      name<span class="token punctuation">:</span> <span class="token string">'image.png'</span><span class="token punctuation">,</span>
      status<span class="token punctuation">:</span> <span class="token string">'done'</span><span class="token punctuation">,</span>
      url<span class="token punctuation">:</span> <span class="token string">'https://zos.alipayobjects.com/rmsportal/jkjgkEfvpUPVyRjUImniVslZfWPnJuuZ.png'</span><span class="token punctuation">,</span>
    }<span class="token punctuation">,</span>
    {
      uid<span class="token punctuation">:</span> <span class="token string">'-4'</span><span class="token punctuation">,</span>
      name<span class="token punctuation">:</span> <span class="token string">'image.png'</span><span class="token punctuation">,</span>
      status<span class="token punctuation">:</span> <span class="token string">'done'</span><span class="token punctuation">,</span>
      url<span class="token punctuation">:</span> <span class="token string">'https://zos.alipayobjects.com/rmsportal/jkjgkEfvpUPVyRjUImniVslZfWPnJuuZ.png'</span><span class="token punctuation">,</span>
    }<span class="token punctuation">,</span>
    {
      uid<span class="token punctuation">:</span> <span class="token string">'-xxx'</span><span class="token punctuation">,</span>
      percent<span class="token punctuation">:</span> <span class="token number">50</span><span class="token punctuation">,</span>
      name<span class="token punctuation">:</span> <span class="token string">'image.png'</span><span class="token punctuation">,</span>
      status<span class="token punctuation">:</span> <span class="token string">'uploading'</span><span class="token punctuation">,</span>
      url<span class="token punctuation">:</span> <span class="token string">'https://zos.alipayobjects.com/rmsportal/jkjgkEfvpUPVyRjUImniVslZfWPnJuuZ.png'</span><span class="token punctuation">,</span>
    }<span class="token punctuation">,</span>
    {
      uid<span class="token punctuation">:</span> <span class="token string">'-5'</span><span class="token punctuation">,</span>
      name<span class="token punctuation">:</span> <span class="token string">'image.png'</span><span class="token punctuation">,</span>
      status<span class="token punctuation">:</span> <span class="token string">'error'</span><span class="token punctuation">,</span>
    }<span class="token punctuation">,</span>
  <span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token comment" spellcheck="true">;</span>

  <span class="token keyword">const</span> handleCancel <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=</span><span class="token operator">></span> <span class="token function">setPreviewOpen</span><span class="token punctuation">(</span><span class="token boolean">false</span><span class="token punctuation">)</span><span class="token comment" spellcheck="true">;</span>

  <span class="token keyword">const</span> handlePreview <span class="token operator">=</span> async <span class="token punctuation">(</span>file<span class="token punctuation">:</span> UploadFile<span class="token punctuation">)</span> <span class="token operator">=</span><span class="token operator">></span> {
    <span class="token keyword">if</span> <span class="token punctuation">(</span>!file<span class="token punctuation">.</span>url <span class="token operator">&amp;</span><span class="token operator">&amp;</span> !file<span class="token punctuation">.</span>preview<span class="token punctuation">)</span> {
      file<span class="token punctuation">.</span>preview <span class="token operator">=</span> await <span class="token function">getBase64</span><span class="token punctuation">(</span>file<span class="token punctuation">.</span>originFileObj as RcFile<span class="token punctuation">)</span><span class="token comment" spellcheck="true">;</span>
    }

    <span class="token function">setPreviewImage</span><span class="token punctuation">(</span>file<span class="token punctuation">.</span>url || <span class="token punctuation">(</span>file<span class="token punctuation">.</span>preview as string<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token comment" spellcheck="true">;</span>
    <span class="token function">setPreviewOpen</span><span class="token punctuation">(</span><span class="token boolean">true</span><span class="token punctuation">)</span><span class="token comment" spellcheck="true">;</span>
    <span class="token function">setPreviewTitle</span><span class="token punctuation">(</span>file<span class="token punctuation">.</span>name || file<span class="token punctuation">.</span>url!<span class="token punctuation">.</span><span class="token function">substring</span><span class="token punctuation">(</span>file<span class="token punctuation">.</span>url!<span class="token punctuation">.</span><span class="token function">lastIndexOf</span><span class="token punctuation">(</span><span class="token string">'/'</span><span class="token punctuation">)</span> <span class="token operator">+</span> <span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token comment" spellcheck="true">;</span>
  }<span class="token comment" spellcheck="true">;</span>

  <span class="token keyword">const</span> handleChange<span class="token punctuation">:</span> UploadProps<span class="token punctuation">[</span><span class="token string">'onChange'</span><span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token punctuation">(</span>{ fileList<span class="token punctuation">:</span> newFileList }<span class="token punctuation">)</span> <span class="token operator">=</span><span class="token operator">></span>
    <span class="token function">setFileList</span><span class="token punctuation">(</span>newFileList<span class="token punctuation">)</span><span class="token comment" spellcheck="true">;</span>

  <span class="token keyword">const</span> uploadButton <span class="token operator">=</span> <span class="token punctuation">(</span>
    <span class="token operator">&lt;</span>div<span class="token operator">></span>
      <span class="token operator">&lt;</span>PlusOutlined <span class="token operator">/</span><span class="token operator">></span>
      <span class="token operator">&lt;</span>div style<span class="token operator">=</span>{{ marginTop<span class="token punctuation">:</span> <span class="token number">8</span> }}<span class="token operator">></span>Upload<span class="token operator">&lt;</span><span class="token operator">/</span>div<span class="token operator">></span>
    <span class="token operator">&lt;</span><span class="token operator">/</span>div<span class="token operator">></span>
  <span class="token punctuation">)</span><span class="token comment" spellcheck="true">;</span>
  return <span class="token punctuation">(</span>
    <span class="token operator">&lt;></span>
      <span class="token operator">&lt;</span>Upload
        action<span class="token operator">=</span><span class="token string">"https://www.mocky.io/v2/5cc8019d300000980a055e76"</span>
        listType<span class="token operator">=</span><span class="token string">"picture-card"</span>
        fileList<span class="token operator">=</span>{fileList}
        onPreview<span class="token operator">=</span>{handlePreview}
        onChange<span class="token operator">=</span>{handleChange}
      <span class="token operator">></span>
        {fileList<span class="token punctuation">.</span>length <span class="token operator">>=</span> <span class="token number">8</span> <span class="token operator">?</span> <span class="token keyword">null</span> <span class="token punctuation">:</span> uploadButton}
      <span class="token operator">&lt;</span><span class="token operator">/</span>Upload<span class="token operator">></span>
      <span class="token operator">&lt;</span>Modal open<span class="token operator">=</span>{previewOpen} title<span class="token operator">=</span>{previewTitle} footer<span class="token operator">=</span>{<span class="token keyword">null</span>} onCancel<span class="token operator">=</span>{handleCancel}<span class="token operator">></span>
        <span class="token operator">&lt;</span>img alt<span class="token operator">=</span><span class="token string">"example"</span> style<span class="token operator">=</span>{{ width<span class="token punctuation">:</span> <span class="token string">'100%'</span> }} src<span class="token operator">=</span>{previewImage} <span class="token operator">/</span><span class="token operator">></span>
      <span class="token operator">&lt;</span><span class="token operator">/</span>Modal<span class="token operator">></span>
    <span class="token operator">&lt;</span><span class="token operator">/</span><span class="token operator">></span>
  <span class="token punctuation">)</span><span class="token comment" spellcheck="true">;</span>
}<span class="token comment" spellcheck="true">;</span>

export <span class="token keyword">default</span> App<span class="token comment" spellcheck="true">;</span>`}],highlightedCodes:{tsx:`<span class="token keyword">import</span> <span class="token punctuation">{</span> PlusOutlined <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">'@ant-design/icons'</span><span class="token punctuation">;</span>
<span class="token keyword">import</span> <span class="token punctuation">{</span> Modal<span class="token punctuation">,</span> Upload <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">'antd'</span><span class="token punctuation">;</span>
<span class="token keyword">import</span> type <span class="token punctuation">{</span> RcFile<span class="token punctuation">,</span> UploadProps <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">'antd/es/upload'</span><span class="token punctuation">;</span>
<span class="token keyword">import</span> type <span class="token punctuation">{</span> UploadFile <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">'antd/es/upload/interface'</span><span class="token punctuation">;</span>
<span class="token keyword">import</span> React<span class="token punctuation">,</span> <span class="token punctuation">{</span> useState <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">'react'</span><span class="token punctuation">;</span>

<span class="token keyword">const</span> getBase64 <span class="token operator">=</span> <span class="token punctuation">(</span>file<span class="token operator">:</span> RcFile<span class="token punctuation">)</span><span class="token operator">:</span> Promise<span class="token operator">&lt;</span>string<span class="token operator">></span> <span class="token operator">=></span>
  <span class="token keyword">new</span> <span class="token class-name">Promise</span><span class="token punctuation">(</span><span class="token punctuation">(</span>resolve<span class="token punctuation">,</span> reject<span class="token punctuation">)</span> <span class="token operator">=></span> <span class="token punctuation">{</span>
    <span class="token keyword">const</span> reader <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">FileReader</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    reader<span class="token punctuation">.</span><span class="token function">readAsDataURL</span><span class="token punctuation">(</span>file<span class="token punctuation">)</span><span class="token punctuation">;</span>
    reader<span class="token punctuation">.</span><span class="token function-variable function">onload</span> <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=></span> <span class="token function">resolve</span><span class="token punctuation">(</span>reader<span class="token punctuation">.</span>result <span class="token keyword">as</span> string<span class="token punctuation">)</span><span class="token punctuation">;</span>
    reader<span class="token punctuation">.</span><span class="token function-variable function">onerror</span> <span class="token operator">=</span> error <span class="token operator">=></span> <span class="token function">reject</span><span class="token punctuation">(</span>error<span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

<span class="token keyword">const</span> App<span class="token operator">:</span> React<span class="token punctuation">.</span><span class="token function-variable function">FC</span> <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=></span> <span class="token punctuation">{</span>
  <span class="token keyword">const</span> <span class="token punctuation">[</span>previewOpen<span class="token punctuation">,</span> setPreviewOpen<span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token function">useState</span><span class="token punctuation">(</span><span class="token boolean">false</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token keyword">const</span> <span class="token punctuation">[</span>previewImage<span class="token punctuation">,</span> setPreviewImage<span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token function">useState</span><span class="token punctuation">(</span><span class="token string">''</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token keyword">const</span> <span class="token punctuation">[</span>previewTitle<span class="token punctuation">,</span> setPreviewTitle<span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token function">useState</span><span class="token punctuation">(</span><span class="token string">''</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token keyword">const</span> <span class="token punctuation">[</span>fileList<span class="token punctuation">,</span> setFileList<span class="token punctuation">]</span> <span class="token operator">=</span> useState<span class="token operator">&lt;</span>UploadFile<span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token operator">></span><span class="token punctuation">(</span><span class="token punctuation">[</span>
    <span class="token punctuation">{</span>
      uid<span class="token operator">:</span> <span class="token string">'-1'</span><span class="token punctuation">,</span>
      name<span class="token operator">:</span> <span class="token string">'image.png'</span><span class="token punctuation">,</span>
      status<span class="token operator">:</span> <span class="token string">'done'</span><span class="token punctuation">,</span>
      url<span class="token operator">:</span> <span class="token string">'https://zos.alipayobjects.com/rmsportal/jkjgkEfvpUPVyRjUImniVslZfWPnJuuZ.png'</span><span class="token punctuation">,</span>
    <span class="token punctuation">}</span><span class="token punctuation">,</span>
    <span class="token punctuation">{</span>
      uid<span class="token operator">:</span> <span class="token string">'-2'</span><span class="token punctuation">,</span>
      name<span class="token operator">:</span> <span class="token string">'image.png'</span><span class="token punctuation">,</span>
      status<span class="token operator">:</span> <span class="token string">'done'</span><span class="token punctuation">,</span>
      url<span class="token operator">:</span> <span class="token string">'https://zos.alipayobjects.com/rmsportal/jkjgkEfvpUPVyRjUImniVslZfWPnJuuZ.png'</span><span class="token punctuation">,</span>
    <span class="token punctuation">}</span><span class="token punctuation">,</span>
    <span class="token punctuation">{</span>
      uid<span class="token operator">:</span> <span class="token string">'-3'</span><span class="token punctuation">,</span>
      name<span class="token operator">:</span> <span class="token string">'image.png'</span><span class="token punctuation">,</span>
      status<span class="token operator">:</span> <span class="token string">'done'</span><span class="token punctuation">,</span>
      url<span class="token operator">:</span> <span class="token string">'https://zos.alipayobjects.com/rmsportal/jkjgkEfvpUPVyRjUImniVslZfWPnJuuZ.png'</span><span class="token punctuation">,</span>
    <span class="token punctuation">}</span><span class="token punctuation">,</span>
    <span class="token punctuation">{</span>
      uid<span class="token operator">:</span> <span class="token string">'-4'</span><span class="token punctuation">,</span>
      name<span class="token operator">:</span> <span class="token string">'image.png'</span><span class="token punctuation">,</span>
      status<span class="token operator">:</span> <span class="token string">'done'</span><span class="token punctuation">,</span>
      url<span class="token operator">:</span> <span class="token string">'https://zos.alipayobjects.com/rmsportal/jkjgkEfvpUPVyRjUImniVslZfWPnJuuZ.png'</span><span class="token punctuation">,</span>
    <span class="token punctuation">}</span><span class="token punctuation">,</span>
    <span class="token punctuation">{</span>
      uid<span class="token operator">:</span> <span class="token string">'-xxx'</span><span class="token punctuation">,</span>
      percent<span class="token operator">:</span> <span class="token number">50</span><span class="token punctuation">,</span>
      name<span class="token operator">:</span> <span class="token string">'image.png'</span><span class="token punctuation">,</span>
      status<span class="token operator">:</span> <span class="token string">'uploading'</span><span class="token punctuation">,</span>
      url<span class="token operator">:</span> <span class="token string">'https://zos.alipayobjects.com/rmsportal/jkjgkEfvpUPVyRjUImniVslZfWPnJuuZ.png'</span><span class="token punctuation">,</span>
    <span class="token punctuation">}</span><span class="token punctuation">,</span>
    <span class="token punctuation">{</span>
      uid<span class="token operator">:</span> <span class="token string">'-5'</span><span class="token punctuation">,</span>
      name<span class="token operator">:</span> <span class="token string">'image.png'</span><span class="token punctuation">,</span>
      status<span class="token operator">:</span> <span class="token string">'error'</span><span class="token punctuation">,</span>
    <span class="token punctuation">}</span><span class="token punctuation">,</span>
  <span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

  <span class="token keyword">const</span> <span class="token function-variable function">handleCancel</span> <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=></span> <span class="token function">setPreviewOpen</span><span class="token punctuation">(</span><span class="token boolean">false</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

  <span class="token keyword">const</span> <span class="token function-variable function">handlePreview</span> <span class="token operator">=</span> <span class="token keyword">async</span> <span class="token punctuation">(</span>file<span class="token operator">:</span> UploadFile<span class="token punctuation">)</span> <span class="token operator">=></span> <span class="token punctuation">{</span>
    <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token operator">!</span>file<span class="token punctuation">.</span>url <span class="token operator">&amp;&amp;</span> <span class="token operator">!</span>file<span class="token punctuation">.</span>preview<span class="token punctuation">)</span> <span class="token punctuation">{</span>
      file<span class="token punctuation">.</span>preview <span class="token operator">=</span> <span class="token keyword">await</span> <span class="token function">getBase64</span><span class="token punctuation">(</span>file<span class="token punctuation">.</span>originFileObj <span class="token keyword">as</span> RcFile<span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>

    <span class="token function">setPreviewImage</span><span class="token punctuation">(</span>file<span class="token punctuation">.</span>url <span class="token operator">||</span> <span class="token punctuation">(</span>file<span class="token punctuation">.</span>preview <span class="token keyword">as</span> string<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token function">setPreviewOpen</span><span class="token punctuation">(</span><span class="token boolean">true</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token function">setPreviewTitle</span><span class="token punctuation">(</span>file<span class="token punctuation">.</span>name <span class="token operator">||</span> file<span class="token punctuation">.</span>url<span class="token operator">!</span><span class="token punctuation">.</span><span class="token function">substring</span><span class="token punctuation">(</span>file<span class="token punctuation">.</span>url<span class="token operator">!</span><span class="token punctuation">.</span><span class="token function">lastIndexOf</span><span class="token punctuation">(</span><span class="token string">'/'</span><span class="token punctuation">)</span> <span class="token operator">+</span> <span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token punctuation">}</span><span class="token punctuation">;</span>

  <span class="token keyword">const</span> handleChange<span class="token operator">:</span> UploadProps<span class="token punctuation">[</span><span class="token string">'onChange'</span><span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token punctuation">{</span> fileList<span class="token operator">:</span> newFileList <span class="token punctuation">}</span><span class="token punctuation">)</span> <span class="token operator">=></span>
    <span class="token function">setFileList</span><span class="token punctuation">(</span>newFileList<span class="token punctuation">)</span><span class="token punctuation">;</span>

  <span class="token keyword">const</span> uploadButton <span class="token operator">=</span> <span class="token punctuation">(</span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span><span class="token punctuation">></span></span>
      <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span><span class="token class-name">PlusOutlined</span></span> <span class="token punctuation">/></span></span>
      <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">style</span><span class="token script language-javascript"><span class="token script-punctuation punctuation">=</span><span class="token punctuation">{</span><span class="token punctuation">{</span> marginTop<span class="token operator">:</span> <span class="token number">8</span> <span class="token punctuation">}</span><span class="token punctuation">}</span></span><span class="token punctuation">></span></span>Upload<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">></span></span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">></span></span>
  <span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token keyword">return</span> <span class="token punctuation">(</span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span></span><span class="token punctuation">></span></span>
      <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span><span class="token class-name">Upload</span></span>
        <span class="token attr-name">action</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>https://www.mocky.io/v2/5cc8019d300000980a055e76<span class="token punctuation">"</span></span>
        <span class="token attr-name">listType</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>picture-card<span class="token punctuation">"</span></span>
        <span class="token attr-name">fileList</span><span class="token script language-javascript"><span class="token script-punctuation punctuation">=</span><span class="token punctuation">{</span>fileList<span class="token punctuation">}</span></span>
        <span class="token attr-name">onPreview</span><span class="token script language-javascript"><span class="token script-punctuation punctuation">=</span><span class="token punctuation">{</span>handlePreview<span class="token punctuation">}</span></span>
        <span class="token attr-name">onChange</span><span class="token script language-javascript"><span class="token script-punctuation punctuation">=</span><span class="token punctuation">{</span>handleChange<span class="token punctuation">}</span></span>
      <span class="token punctuation">></span></span>
        <span class="token punctuation">{</span>fileList<span class="token punctuation">.</span>length <span class="token operator">>=</span> <span class="token number">8</span> <span class="token operator">?</span> <span class="token keyword">null</span> <span class="token operator">:</span> uploadButton<span class="token punctuation">}</span>
      <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span><span class="token class-name">Upload</span></span><span class="token punctuation">></span></span>
      <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span><span class="token class-name">Modal</span></span> <span class="token attr-name">open</span><span class="token script language-javascript"><span class="token script-punctuation punctuation">=</span><span class="token punctuation">{</span>previewOpen<span class="token punctuation">}</span></span> <span class="token attr-name">title</span><span class="token script language-javascript"><span class="token script-punctuation punctuation">=</span><span class="token punctuation">{</span>previewTitle<span class="token punctuation">}</span></span> <span class="token attr-name">footer</span><span class="token script language-javascript"><span class="token script-punctuation punctuation">=</span><span class="token punctuation">{</span><span class="token keyword">null</span><span class="token punctuation">}</span></span> <span class="token attr-name">onCancel</span><span class="token script language-javascript"><span class="token script-punctuation punctuation">=</span><span class="token punctuation">{</span>handleCancel<span class="token punctuation">}</span></span><span class="token punctuation">></span></span>
        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>img</span> <span class="token attr-name">alt</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>example<span class="token punctuation">"</span></span> <span class="token attr-name">style</span><span class="token script language-javascript"><span class="token script-punctuation punctuation">=</span><span class="token punctuation">{</span><span class="token punctuation">{</span> width<span class="token operator">:</span> <span class="token string">'100%'</span> <span class="token punctuation">}</span><span class="token punctuation">}</span></span> <span class="token attr-name">src</span><span class="token script language-javascript"><span class="token script-punctuation punctuation">=</span><span class="token punctuation">{</span>previewImage<span class="token punctuation">}</span></span> <span class="token punctuation">/></span></span>
      <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span><span class="token class-name">Modal</span></span><span class="token punctuation">></span></span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span></span><span class="token punctuation">></span></span>
  <span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span><span class="token punctuation">;</span>

<span class="token keyword">export</span> <span class="token keyword">default</span> App<span class="token punctuation">;</span>`,jsx:`<span class="token keyword">import</span> <span class="token punctuation">{</span> PlusOutlined <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">'@ant-design/icons'</span><span class="token punctuation">;</span>
<span class="token keyword">import</span> <span class="token punctuation">{</span> Modal<span class="token punctuation">,</span> Upload <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">'antd'</span><span class="token punctuation">;</span>
<span class="token keyword">import</span> React<span class="token punctuation">,</span> <span class="token punctuation">{</span> useState <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">'react'</span><span class="token punctuation">;</span>
<span class="token keyword">const</span> <span class="token function-variable function">getBase64</span> <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token parameter">file</span><span class="token punctuation">)</span> <span class="token operator">=></span>
  <span class="token keyword">new</span> <span class="token class-name">Promise</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token parameter">resolve<span class="token punctuation">,</span> reject</span><span class="token punctuation">)</span> <span class="token operator">=></span> <span class="token punctuation">{</span>
    <span class="token keyword">const</span> reader <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">FileReader</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    reader<span class="token punctuation">.</span><span class="token function">readAsDataURL</span><span class="token punctuation">(</span>file<span class="token punctuation">)</span><span class="token punctuation">;</span>
    reader<span class="token punctuation">.</span><span class="token function-variable function">onload</span> <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=></span> <span class="token function">resolve</span><span class="token punctuation">(</span>reader<span class="token punctuation">.</span>result<span class="token punctuation">)</span><span class="token punctuation">;</span>
    reader<span class="token punctuation">.</span><span class="token function-variable function">onerror</span> <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token parameter">error</span><span class="token punctuation">)</span> <span class="token operator">=></span> <span class="token function">reject</span><span class="token punctuation">(</span>error<span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token keyword">const</span> <span class="token function-variable function">App</span> <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=></span> <span class="token punctuation">{</span>
  <span class="token keyword">const</span> <span class="token punctuation">[</span>previewOpen<span class="token punctuation">,</span> setPreviewOpen<span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token function">useState</span><span class="token punctuation">(</span><span class="token boolean">false</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token keyword">const</span> <span class="token punctuation">[</span>previewImage<span class="token punctuation">,</span> setPreviewImage<span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token function">useState</span><span class="token punctuation">(</span><span class="token string">''</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token keyword">const</span> <span class="token punctuation">[</span>previewTitle<span class="token punctuation">,</span> setPreviewTitle<span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token function">useState</span><span class="token punctuation">(</span><span class="token string">''</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token keyword">const</span> <span class="token punctuation">[</span>fileList<span class="token punctuation">,</span> setFileList<span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token function">useState</span><span class="token punctuation">(</span><span class="token punctuation">[</span>
    <span class="token punctuation">{</span>
      <span class="token literal-property property">uid</span><span class="token operator">:</span> <span class="token string">'-1'</span><span class="token punctuation">,</span>
      <span class="token literal-property property">name</span><span class="token operator">:</span> <span class="token string">'image.png'</span><span class="token punctuation">,</span>
      <span class="token literal-property property">status</span><span class="token operator">:</span> <span class="token string">'done'</span><span class="token punctuation">,</span>
      <span class="token literal-property property">url</span><span class="token operator">:</span> <span class="token string">'https://zos.alipayobjects.com/rmsportal/jkjgkEfvpUPVyRjUImniVslZfWPnJuuZ.png'</span><span class="token punctuation">,</span>
    <span class="token punctuation">}</span><span class="token punctuation">,</span>
    <span class="token punctuation">{</span>
      <span class="token literal-property property">uid</span><span class="token operator">:</span> <span class="token string">'-2'</span><span class="token punctuation">,</span>
      <span class="token literal-property property">name</span><span class="token operator">:</span> <span class="token string">'image.png'</span><span class="token punctuation">,</span>
      <span class="token literal-property property">status</span><span class="token operator">:</span> <span class="token string">'done'</span><span class="token punctuation">,</span>
      <span class="token literal-property property">url</span><span class="token operator">:</span> <span class="token string">'https://zos.alipayobjects.com/rmsportal/jkjgkEfvpUPVyRjUImniVslZfWPnJuuZ.png'</span><span class="token punctuation">,</span>
    <span class="token punctuation">}</span><span class="token punctuation">,</span>
    <span class="token punctuation">{</span>
      <span class="token literal-property property">uid</span><span class="token operator">:</span> <span class="token string">'-3'</span><span class="token punctuation">,</span>
      <span class="token literal-property property">name</span><span class="token operator">:</span> <span class="token string">'image.png'</span><span class="token punctuation">,</span>
      <span class="token literal-property property">status</span><span class="token operator">:</span> <span class="token string">'done'</span><span class="token punctuation">,</span>
      <span class="token literal-property property">url</span><span class="token operator">:</span> <span class="token string">'https://zos.alipayobjects.com/rmsportal/jkjgkEfvpUPVyRjUImniVslZfWPnJuuZ.png'</span><span class="token punctuation">,</span>
    <span class="token punctuation">}</span><span class="token punctuation">,</span>
    <span class="token punctuation">{</span>
      <span class="token literal-property property">uid</span><span class="token operator">:</span> <span class="token string">'-4'</span><span class="token punctuation">,</span>
      <span class="token literal-property property">name</span><span class="token operator">:</span> <span class="token string">'image.png'</span><span class="token punctuation">,</span>
      <span class="token literal-property property">status</span><span class="token operator">:</span> <span class="token string">'done'</span><span class="token punctuation">,</span>
      <span class="token literal-property property">url</span><span class="token operator">:</span> <span class="token string">'https://zos.alipayobjects.com/rmsportal/jkjgkEfvpUPVyRjUImniVslZfWPnJuuZ.png'</span><span class="token punctuation">,</span>
    <span class="token punctuation">}</span><span class="token punctuation">,</span>
    <span class="token punctuation">{</span>
      <span class="token literal-property property">uid</span><span class="token operator">:</span> <span class="token string">'-xxx'</span><span class="token punctuation">,</span>
      <span class="token literal-property property">percent</span><span class="token operator">:</span> <span class="token number">50</span><span class="token punctuation">,</span>
      <span class="token literal-property property">name</span><span class="token operator">:</span> <span class="token string">'image.png'</span><span class="token punctuation">,</span>
      <span class="token literal-property property">status</span><span class="token operator">:</span> <span class="token string">'uploading'</span><span class="token punctuation">,</span>
      <span class="token literal-property property">url</span><span class="token operator">:</span> <span class="token string">'https://zos.alipayobjects.com/rmsportal/jkjgkEfvpUPVyRjUImniVslZfWPnJuuZ.png'</span><span class="token punctuation">,</span>
    <span class="token punctuation">}</span><span class="token punctuation">,</span>
    <span class="token punctuation">{</span>
      <span class="token literal-property property">uid</span><span class="token operator">:</span> <span class="token string">'-5'</span><span class="token punctuation">,</span>
      <span class="token literal-property property">name</span><span class="token operator">:</span> <span class="token string">'image.png'</span><span class="token punctuation">,</span>
      <span class="token literal-property property">status</span><span class="token operator">:</span> <span class="token string">'error'</span><span class="token punctuation">,</span>
    <span class="token punctuation">}</span><span class="token punctuation">,</span>
  <span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token keyword">const</span> <span class="token function-variable function">handleCancel</span> <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=></span> <span class="token function">setPreviewOpen</span><span class="token punctuation">(</span><span class="token boolean">false</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token keyword">const</span> <span class="token function-variable function">handlePreview</span> <span class="token operator">=</span> <span class="token keyword">async</span> <span class="token punctuation">(</span><span class="token parameter">file</span><span class="token punctuation">)</span> <span class="token operator">=></span> <span class="token punctuation">{</span>
    <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token operator">!</span>file<span class="token punctuation">.</span>url <span class="token operator">&amp;&amp;</span> <span class="token operator">!</span>file<span class="token punctuation">.</span>preview<span class="token punctuation">)</span> <span class="token punctuation">{</span>
      file<span class="token punctuation">.</span>preview <span class="token operator">=</span> <span class="token keyword">await</span> <span class="token function">getBase64</span><span class="token punctuation">(</span>file<span class="token punctuation">.</span>originFileObj<span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
    <span class="token function">setPreviewImage</span><span class="token punctuation">(</span>file<span class="token punctuation">.</span>url <span class="token operator">||</span> file<span class="token punctuation">.</span>preview<span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token function">setPreviewOpen</span><span class="token punctuation">(</span><span class="token boolean">true</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token function">setPreviewTitle</span><span class="token punctuation">(</span>file<span class="token punctuation">.</span>name <span class="token operator">||</span> file<span class="token punctuation">.</span>url<span class="token punctuation">.</span><span class="token function">substring</span><span class="token punctuation">(</span>file<span class="token punctuation">.</span>url<span class="token punctuation">.</span><span class="token function">lastIndexOf</span><span class="token punctuation">(</span><span class="token string">'/'</span><span class="token punctuation">)</span> <span class="token operator">+</span> <span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token punctuation">}</span><span class="token punctuation">;</span>
  <span class="token keyword">const</span> <span class="token function-variable function">handleChange</span> <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token parameter"><span class="token punctuation">{</span> <span class="token literal-property property">fileList</span><span class="token operator">:</span> newFileList <span class="token punctuation">}</span></span><span class="token punctuation">)</span> <span class="token operator">=></span> <span class="token function">setFileList</span><span class="token punctuation">(</span>newFileList<span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token keyword">const</span> uploadButton <span class="token operator">=</span> <span class="token punctuation">(</span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span><span class="token punctuation">></span></span>
      <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span><span class="token class-name">PlusOutlined</span></span> <span class="token punctuation">/></span></span>
      <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span>
        <span class="token attr-name">style</span><span class="token script language-javascript"><span class="token script-punctuation punctuation">=</span><span class="token punctuation">{</span><span class="token punctuation">{</span>
          <span class="token literal-property property">marginTop</span><span class="token operator">:</span> <span class="token number">8</span><span class="token punctuation">,</span>
        <span class="token punctuation">}</span><span class="token punctuation">}</span></span>
      <span class="token punctuation">></span></span>
        Upload
      <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">></span></span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">></span></span>
  <span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token keyword">return</span> <span class="token punctuation">(</span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span></span><span class="token punctuation">></span></span>
      <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span><span class="token class-name">Upload</span></span>
        <span class="token attr-name">action</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>https://www.mocky.io/v2/5cc8019d300000980a055e76<span class="token punctuation">"</span></span>
        <span class="token attr-name">listType</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>picture-card<span class="token punctuation">"</span></span>
        <span class="token attr-name">fileList</span><span class="token script language-javascript"><span class="token script-punctuation punctuation">=</span><span class="token punctuation">{</span>fileList<span class="token punctuation">}</span></span>
        <span class="token attr-name">onPreview</span><span class="token script language-javascript"><span class="token script-punctuation punctuation">=</span><span class="token punctuation">{</span>handlePreview<span class="token punctuation">}</span></span>
        <span class="token attr-name">onChange</span><span class="token script language-javascript"><span class="token script-punctuation punctuation">=</span><span class="token punctuation">{</span>handleChange<span class="token punctuation">}</span></span>
      <span class="token punctuation">></span></span>
        <span class="token punctuation">{</span>fileList<span class="token punctuation">.</span>length <span class="token operator">>=</span> <span class="token number">8</span> <span class="token operator">?</span> <span class="token keyword">null</span> <span class="token operator">:</span> uploadButton<span class="token punctuation">}</span>
      <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span><span class="token class-name">Upload</span></span><span class="token punctuation">></span></span>
      <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span><span class="token class-name">Modal</span></span> <span class="token attr-name">open</span><span class="token script language-javascript"><span class="token script-punctuation punctuation">=</span><span class="token punctuation">{</span>previewOpen<span class="token punctuation">}</span></span> <span class="token attr-name">title</span><span class="token script language-javascript"><span class="token script-punctuation punctuation">=</span><span class="token punctuation">{</span>previewTitle<span class="token punctuation">}</span></span> <span class="token attr-name">footer</span><span class="token script language-javascript"><span class="token script-punctuation punctuation">=</span><span class="token punctuation">{</span><span class="token keyword">null</span><span class="token punctuation">}</span></span> <span class="token attr-name">onCancel</span><span class="token script language-javascript"><span class="token script-punctuation punctuation">=</span><span class="token punctuation">{</span>handleCancel<span class="token punctuation">}</span></span><span class="token punctuation">></span></span>
        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>img</span>
          <span class="token attr-name">alt</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>example<span class="token punctuation">"</span></span>
          <span class="token attr-name">style</span><span class="token script language-javascript"><span class="token script-punctuation punctuation">=</span><span class="token punctuation">{</span><span class="token punctuation">{</span>
            <span class="token literal-property property">width</span><span class="token operator">:</span> <span class="token string">'100%'</span><span class="token punctuation">,</span>
          <span class="token punctuation">}</span><span class="token punctuation">}</span></span>
          <span class="token attr-name">src</span><span class="token script language-javascript"><span class="token script-punctuation punctuation">=</span><span class="token punctuation">{</span>previewImage<span class="token punctuation">}</span></span>
        <span class="token punctuation">/></span></span>
      <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span><span class="token class-name">Modal</span></span><span class="token punctuation">></span></span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span></span><span class="token punctuation">></span></span>
  <span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span><span class="token punctuation">;</span>
<span class="token keyword">export</span> <span class="token keyword">default</span> App<span class="token punctuation">;</span>
`},preview:function(){var N=g(0),H=g(47);function R(t){return R=typeof Symbol=="function"&&typeof Symbol.iterator=="symbol"?function(a){return typeof a}:function(a){return a&&typeof Symbol=="function"&&a.constructor===Symbol&&a!==Symbol.prototype?"symbol":typeof a},R(t)}var F=g(61),O=g(12),S=V(g(0));function D(t){if(typeof WeakMap!="function")return null;var a=new WeakMap,s=new WeakMap;return(D=function(e){return e?s:a})(t)}function V(t,a){if(!a&&t&&t.__esModule)return t;if(t===null||R(t)!=="object"&&typeof t!="function")return{default:t};var s=D(a);if(s&&s.has(t))return s.get(t);var u={},e=Object.defineProperty&&Object.getOwnPropertyDescriptor;for(var d in t)if(d!=="default"&&Object.prototype.hasOwnProperty.call(t,d)){var m=e?Object.getOwnPropertyDescriptor(t,d):null;m&&(m.get||m.set)?Object.defineProperty(u,d,m):u[d]=t[d]}return u.default=t,s&&s.set(t,u),u}function M(){"use strict";/*! regenerator-runtime -- Copyright (c) 2014-present, Facebook, Inc. -- license (MIT): https://github.com/facebook/regenerator/blob/main/LICENSE */M=function(){return t};var t={},a=Object.prototype,s=a.hasOwnProperty,u=Object.defineProperty||function(i,p,o){i[p]=o.value},e=typeof Symbol=="function"?Symbol:{},d=e.iterator||"@@iterator",m=e.asyncIterator||"@@asyncIterator",b=e.toStringTag||"@@toStringTag";function U(i,p,o){return Object.defineProperty(i,p,{value:o,enumerable:!0,configurable:!0,writable:!0}),i[p]}try{U({},"")}catch(i){U=function(o,h,k){return o[h]=k}}function E(i,p,o,h){var k=p&&p.prototype instanceof Z?p:Z,c=Object.create(k.prototype),y=new On(h||[]);return u(c,"_invoke",{value:ln(i,o,y)}),c}function L(i,p,o){try{return{type:"normal",arg:i.call(p,o)}}catch(h){return{type:"throw",arg:h}}}t.wrap=E;var I={};function Z(){}function cn(){}function K(){}var rn={};U(rn,d,function(){return this});var yn=Object.getPrototypeOf,wn=yn&&yn(yn(vn([])));wn&&wn!==a&&s.call(wn,d)&&(rn=wn);var on=K.prototype=Z.prototype=Object.create(rn);function fn(i){["next","throw","return"].forEach(function(p){U(i,p,function(o){return this._invoke(p,o)})})}function X(i,p){function o(k,c,y,P){var j=L(i[k],i,c);if(j.type!=="throw"){var B=j.arg,q=B.value;return q&&R(q)=="object"&&s.call(q,"__await")?p.resolve(q.__await).then(function(tn){o("next",tn,y,P)},function(tn){o("throw",tn,y,P)}):p.resolve(q).then(function(tn){B.value=tn,y(B)},function(tn){return o("throw",tn,y,P)})}P(j.arg)}var h;u(this,"_invoke",{value:function(c,y){function P(){return new p(function(j,B){o(c,y,j,B)})}return h=h?h.then(P,P):P()}})}function ln(i,p,o){var h="suspendedStart";return function(k,c){if(h==="executing")throw new Error("Generator is already running");if(h==="completed"){if(k==="throw")throw c;return Tn()}for(o.method=k,o.arg=c;;){var y=o.delegate;if(y){var P=en(y,o);if(P){if(P===I)continue;return P}}if(o.method==="next")o.sent=o._sent=o.arg;else if(o.method==="throw"){if(h==="suspendedStart")throw h="completed",o.arg;o.dispatchException(o.arg)}else o.method==="return"&&o.abrupt("return",o.arg);h="executing";var j=L(i,p,o);if(j.type==="normal"){if(h=o.done?"completed":"suspendedYield",j.arg===I)continue;return{value:j.arg,done:o.done}}j.type==="throw"&&(h="completed",o.method="throw",o.arg=j.arg)}}}function en(i,p){var o=p.method,h=i.iterator[o];if(h===void 0)return p.delegate=null,o==="throw"&&i.iterator.return&&(p.method="return",p.arg=void 0,en(i,p),p.method==="throw")||o!=="return"&&(p.method="throw",p.arg=new TypeError("The iterator does not provide a '"+o+"' method")),I;var k=L(h,i.iterator,p.arg);if(k.type==="throw")return p.method="throw",p.arg=k.arg,p.delegate=null,I;var c=k.arg;return c?c.done?(p[i.resultName]=c.value,p.next=i.nextLoc,p.method!=="return"&&(p.method="next",p.arg=void 0),p.delegate=null,I):c:(p.method="throw",p.arg=new TypeError("iterator result is not an object"),p.delegate=null,I)}function an(i){var p={tryLoc:i[0]};1 in i&&(p.catchLoc=i[1]),2 in i&&(p.finallyLoc=i[2],p.afterLoc=i[3]),this.tryEntries.push(p)}function Pn(i){var p=i.completion||{};p.type="normal",delete p.arg,i.completion=p}function On(i){this.tryEntries=[{tryLoc:"root"}],i.forEach(an,this),this.reset(!0)}function vn(i){if(i){var p=i[d];if(p)return p.call(i);if(typeof i.next=="function")return i;if(!isNaN(i.length)){var o=-1,h=function k(){for(;++o<i.length;)if(s.call(i,o))return k.value=i[o],k.done=!1,k;return k.value=void 0,k.done=!0,k};return h.next=h}}return{next:Tn}}function Tn(){return{value:void 0,done:!0}}return cn.prototype=K,u(on,"constructor",{value:K,configurable:!0}),u(K,"constructor",{value:cn,configurable:!0}),cn.displayName=U(K,b,"GeneratorFunction"),t.isGeneratorFunction=function(i){var p=typeof i=="function"&&i.constructor;return!!p&&(p===cn||(p.displayName||p.name)==="GeneratorFunction")},t.mark=function(i){return Object.setPrototypeOf?Object.setPrototypeOf(i,K):(i.__proto__=K,U(i,b,"GeneratorFunction")),i.prototype=Object.create(on),i},t.awrap=function(i){return{__await:i}},fn(X.prototype),U(X.prototype,m,function(){return this}),t.AsyncIterator=X,t.async=function(i,p,o,h,k){k===void 0&&(k=Promise);var c=new X(E(i,p,o,h),k);return t.isGeneratorFunction(p)?c:c.next().then(function(y){return y.done?y.value:c.next()})},fn(on),U(on,b,"Generator"),U(on,d,function(){return this}),U(on,"toString",function(){return"[object Generator]"}),t.keys=function(i){var p=Object(i),o=[];for(var h in p)o.push(h);return o.reverse(),function k(){for(;o.length;){var c=o.pop();if(c in p)return k.value=c,k.done=!1,k}return k.done=!0,k}},t.values=vn,On.prototype={constructor:On,reset:function(p){if(this.prev=0,this.next=0,this.sent=this._sent=void 0,this.done=!1,this.delegate=null,this.method="next",this.arg=void 0,this.tryEntries.forEach(Pn),!p)for(var o in this)o.charAt(0)==="t"&&s.call(this,o)&&!isNaN(+o.slice(1))&&(this[o]=void 0)},stop:function(){this.done=!0;var p=this.tryEntries[0].completion;if(p.type==="throw")throw p.arg;return this.rval},dispatchException:function(p){if(this.done)throw p;var o=this;function h(B,q){return y.type="throw",y.arg=p,o.next=B,q&&(o.method="next",o.arg=void 0),!!q}for(var k=this.tryEntries.length-1;k>=0;--k){var c=this.tryEntries[k],y=c.completion;if(c.tryLoc==="root")return h("end");if(c.tryLoc<=this.prev){var P=s.call(c,"catchLoc"),j=s.call(c,"finallyLoc");if(P&&j){if(this.prev<c.catchLoc)return h(c.catchLoc,!0);if(this.prev<c.finallyLoc)return h(c.finallyLoc)}else if(P){if(this.prev<c.catchLoc)return h(c.catchLoc,!0)}else{if(!j)throw new Error("try statement without catch or finally");if(this.prev<c.finallyLoc)return h(c.finallyLoc)}}}},abrupt:function(p,o){for(var h=this.tryEntries.length-1;h>=0;--h){var k=this.tryEntries[h];if(k.tryLoc<=this.prev&&s.call(k,"finallyLoc")&&this.prev<k.finallyLoc){var c=k;break}}c&&(p==="break"||p==="continue")&&c.tryLoc<=o&&o<=c.finallyLoc&&(c=null);var y=c?c.completion:{};return y.type=p,y.arg=o,c?(this.method="next",this.next=c.finallyLoc,I):this.complete(y)},complete:function(p,o){if(p.type==="throw")throw p.arg;return p.type==="break"||p.type==="continue"?this.next=p.arg:p.type==="return"?(this.rval=this.arg=p.arg,this.method="return",this.next="end"):p.type==="normal"&&o&&(this.next=o),I},finish:function(p){for(var o=this.tryEntries.length-1;o>=0;--o){var h=this.tryEntries[o];if(h.finallyLoc===p)return this.complete(h.completion,h.afterLoc),Pn(h),I}},catch:function(p){for(var o=this.tryEntries.length-1;o>=0;--o){var h=this.tryEntries[o];if(h.tryLoc===p){var k=h.completion;if(k.type==="throw"){var c=k.arg;Pn(h)}return c}}throw new Error("illegal catch attempt")},delegateYield:function(p,o,h){return this.delegate={iterator:vn(p),resultName:o,nextLoc:h},this.method==="next"&&(this.arg=void 0),I}},t}function C(t,a,s,u,e,d,m){try{var b=t[d](m),U=b.value}catch(E){s(E);return}b.done?a(U):Promise.resolve(U).then(u,e)}function W(t){return function(){var a=this,s=arguments;return new Promise(function(u,e){var d=t.apply(a,s);function m(U){C(d,u,e,m,b,"next",U)}function b(U){C(d,u,e,m,b,"throw",U)}m(void 0)})}}function $(t,a){return pn(t)||mn(t,a)||hn(t,a)||nn()}function nn(){throw new TypeError(`Invalid attempt to destructure non-iterable instance.
In order to be iterable, non-array objects must have a [Symbol.iterator]() method.`)}function hn(t,a){if(t){if(typeof t=="string")return _(t,a);var s=Object.prototype.toString.call(t).slice(8,-1);if(s==="Object"&&t.constructor&&(s=t.constructor.name),s==="Map"||s==="Set")return Array.from(t);if(s==="Arguments"||/^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(s))return _(t,a)}}function _(t,a){(a==null||a>t.length)&&(a=t.length);for(var s=0,u=new Array(a);s<a;s++)u[s]=t[s];return u}function mn(t,a){var s=t==null?null:typeof Symbol!="undefined"&&t[Symbol.iterator]||t["@@iterator"];if(s!=null){var u,e,d,m,b=[],U=!0,E=!1;try{if(d=(s=s.call(t)).next,a===0){if(Object(s)!==s)return;U=!1}else for(;!(U=(u=d.call(s)).done)&&(b.push(u.value),b.length!==a);U=!0);}catch(L){E=!0,e=L}finally{try{if(!U&&s.return!=null&&(m=s.return(),Object(m)!==m))return}finally{if(E)throw e}}return b}}function pn(t){if(Array.isArray(t))return t}var dn=function(a){return new Promise(function(s,u){var e=new FileReader;e.readAsDataURL(a),e.onload=function(){return s(e.result)},e.onerror=function(d){return u(d)}})},z=function(){var a=(0,S.useState)(!1),s=$(a,2),u=s[0],e=s[1],d=(0,S.useState)(""),m=$(d,2),b=m[0],U=m[1],E=(0,S.useState)(""),L=$(E,2),I=L[0],Z=L[1],cn=(0,S.useState)([{uid:"-1",name:"image.png",status:"done",url:"https://zos.alipayobjects.com/rmsportal/jkjgkEfvpUPVyRjUImniVslZfWPnJuuZ.png"},{uid:"-2",name:"image.png",status:"done",url:"https://zos.alipayobjects.com/rmsportal/jkjgkEfvpUPVyRjUImniVslZfWPnJuuZ.png"},{uid:"-3",name:"image.png",status:"done",url:"https://zos.alipayobjects.com/rmsportal/jkjgkEfvpUPVyRjUImniVslZfWPnJuuZ.png"},{uid:"-4",name:"image.png",status:"done",url:"https://zos.alipayobjects.com/rmsportal/jkjgkEfvpUPVyRjUImniVslZfWPnJuuZ.png"},{uid:"-xxx",percent:50,name:"image.png",status:"uploading",url:"https://zos.alipayobjects.com/rmsportal/jkjgkEfvpUPVyRjUImniVslZfWPnJuuZ.png"},{uid:"-5",name:"image.png",status:"error"}]),K=$(cn,2),rn=K[0],yn=K[1],wn=function(){return e(!1)},on=function(){var ln=W(M().mark(function en(an){return M().wrap(function(On){for(;;)switch(On.prev=On.next){case 0:if(!(!an.url&&!an.preview)){On.next=4;break}return On.next=3,dn(an.originFileObj);case 3:an.preview=On.sent;case 4:U(an.url||an.preview),e(!0),Z(an.name||an.url.substring(an.url.lastIndexOf("/")+1));case 7:case"end":return On.stop()}},en)}));return function(an){return ln.apply(this,arguments)}}(),fn=function(en){var an=en.fileList;return yn(an)},X=S.default.createElement("div",null,S.default.createElement(F.PlusOutlined,null),S.default.createElement("div",{style:{marginTop:8}},"Upload"));return S.default.createElement(S.default.Fragment,null,S.default.createElement(O.Upload,{action:"https://www.mocky.io/v2/5cc8019d300000980a055e76",listType:"picture-card",fileList:rn,onPreview:on,onChange:fn},rn.length>=8?null:X),S.default.createElement(O.Modal,{open:u,title:I,footer:null,onCancel:wn},S.default.createElement("img",{alt:"example",style:{width:"100%"},src:b})))},J=z;return N.createElement(J)}}},4810:function(Y,kn,g){Y.exports={content:{"zh-CN":[["p","\u4E0A\u4F20\u6587\u4EF6\u4E3A\u56FE\u7247\uFF0C\u53EF\u5C55\u793A\u672C\u5730\u7F29\u7565\u56FE\u3002",["code","IE8/9"]," \u4E0D\u652F\u6301\u6D4F\u89C8\u5668\u672C\u5730\u7F29\u7565\u56FE\u5C55\u793A\uFF08",["a",{title:null,href:"https://developer.mozilla.org/en-US/docs/Web/API/FileReader/readAsDataURL"},"Ref"],"\uFF09\uFF0C\u53EF\u4EE5\u5199 ",["code","thumbUrl"]," \u5C5E\u6027\u6765\u4EE3\u66FF\u3002"]],"en-US":[["p","If uploaded file is a picture, the thumbnail can be shown. ",["code","IE8/9"]," do not support local thumbnail show. Please use ",["code","thumbUrl"]," instead."]]},meta:{order:8,title:{"zh-CN":"\u56FE\u7247\u5217\u8868\u6837\u5F0F","en-US":"Pictures with list style"},filename:"components/upload/demo/picture-style.md",id:"components-upload-demo-picture-style"},toc:["ul",["li",["a",{className:"bisheng-toc-h2",href:"#zh-CN",title:"zh-CN"},"zh-CN"]],["li",["a",{className:"bisheng-toc-h2",href:"#en-US",title:"en-US"},"en-US"]]],highlightedCode:["pre",{lang:"tsx",highlighted:`import { UploadOutlined } from <span class="token string">'@ant-design/icons'</span><span class="token comment" spellcheck="true">;</span>
import { Button<span class="token punctuation">,</span> Upload } from <span class="token string">'antd'</span><span class="token comment" spellcheck="true">;</span>
import type { UploadFile } from <span class="token string">'antd/es/upload/interface'</span><span class="token comment" spellcheck="true">;</span>
import React from <span class="token string">'react'</span><span class="token comment" spellcheck="true">;</span>

<span class="token keyword">const</span> fileList<span class="token punctuation">:</span> UploadFile<span class="token punctuation">[</span><span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token punctuation">[</span>
  {
    uid<span class="token punctuation">:</span> <span class="token string">'-1'</span><span class="token punctuation">,</span>
    name<span class="token punctuation">:</span> <span class="token string">'xxx.png'</span><span class="token punctuation">,</span>
    status<span class="token punctuation">:</span> <span class="token string">'done'</span><span class="token punctuation">,</span>
    url<span class="token punctuation">:</span> <span class="token string">'https://zos.alipayobjects.com/rmsportal/jkjgkEfvpUPVyRjUImniVslZfWPnJuuZ.png'</span><span class="token punctuation">,</span>
    thumbUrl<span class="token punctuation">:</span> <span class="token string">'https://zos.alipayobjects.com/rmsportal/jkjgkEfvpUPVyRjUImniVslZfWPnJuuZ.png'</span><span class="token punctuation">,</span>
  }<span class="token punctuation">,</span>
  {
    uid<span class="token punctuation">:</span> <span class="token string">'-2'</span><span class="token punctuation">,</span>
    name<span class="token punctuation">:</span> <span class="token string">'yyy.png'</span><span class="token punctuation">,</span>
    status<span class="token punctuation">:</span> <span class="token string">'error'</span><span class="token punctuation">,</span>
  }<span class="token punctuation">,</span>
<span class="token punctuation">]</span><span class="token comment" spellcheck="true">;</span>

<span class="token keyword">const</span> App<span class="token punctuation">:</span> React<span class="token punctuation">.</span>FC <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=</span><span class="token operator">></span> <span class="token punctuation">(</span>
  <span class="token operator">&lt;></span>
    <span class="token operator">&lt;</span>Upload
      action<span class="token operator">=</span><span class="token string">"https://www.mocky.io/v2/5cc8019d300000980a055e76"</span>
      listType<span class="token operator">=</span><span class="token string">"picture"</span>
      defaultFileList<span class="token operator">=</span>{<span class="token punctuation">[</span><span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token punctuation">.</span>fileList<span class="token punctuation">]</span>}
    <span class="token operator">></span>
      <span class="token operator">&lt;</span>Button icon<span class="token operator">=</span>{<span class="token operator">&lt;</span>UploadOutlined <span class="token operator">/</span><span class="token operator">></span>}<span class="token operator">></span>Upload<span class="token operator">&lt;</span><span class="token operator">/</span>Button<span class="token operator">></span>
    <span class="token operator">&lt;</span><span class="token operator">/</span>Upload<span class="token operator">></span>
    <span class="token operator">&lt;</span>br <span class="token operator">/</span><span class="token operator">></span>
    <span class="token operator">&lt;</span>br <span class="token operator">/</span><span class="token operator">></span>
    <span class="token operator">&lt;</span>Upload
      action<span class="token operator">=</span><span class="token string">"https://www.mocky.io/v2/5cc8019d300000980a055e76"</span>
      listType<span class="token operator">=</span><span class="token string">"picture"</span>
      defaultFileList<span class="token operator">=</span>{<span class="token punctuation">[</span><span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token punctuation">.</span>fileList<span class="token punctuation">]</span>}
      className<span class="token operator">=</span><span class="token string">"upload-list-inline"</span>
    <span class="token operator">></span>
      <span class="token operator">&lt;</span>Button icon<span class="token operator">=</span>{<span class="token operator">&lt;</span>UploadOutlined <span class="token operator">/</span><span class="token operator">></span>}<span class="token operator">></span>Upload<span class="token operator">&lt;</span><span class="token operator">/</span>Button<span class="token operator">></span>
    <span class="token operator">&lt;</span><span class="token operator">/</span>Upload<span class="token operator">></span>
  <span class="token operator">&lt;</span><span class="token operator">/</span><span class="token operator">></span>
<span class="token punctuation">)</span><span class="token comment" spellcheck="true">;</span>

export <span class="token keyword">default</span> App<span class="token comment" spellcheck="true">;</span>`}],highlightedCodes:{tsx:`<span class="token keyword">import</span> <span class="token punctuation">{</span> UploadOutlined <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">'@ant-design/icons'</span><span class="token punctuation">;</span>
<span class="token keyword">import</span> <span class="token punctuation">{</span> Button<span class="token punctuation">,</span> Upload <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">'antd'</span><span class="token punctuation">;</span>
<span class="token keyword">import</span> type <span class="token punctuation">{</span> UploadFile <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">'antd/es/upload/interface'</span><span class="token punctuation">;</span>
<span class="token keyword">import</span> React <span class="token keyword">from</span> <span class="token string">'react'</span><span class="token punctuation">;</span>

<span class="token keyword">const</span> fileList<span class="token operator">:</span> UploadFile<span class="token punctuation">[</span><span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token punctuation">[</span>
  <span class="token punctuation">{</span>
    uid<span class="token operator">:</span> <span class="token string">'-1'</span><span class="token punctuation">,</span>
    name<span class="token operator">:</span> <span class="token string">'xxx.png'</span><span class="token punctuation">,</span>
    status<span class="token operator">:</span> <span class="token string">'done'</span><span class="token punctuation">,</span>
    url<span class="token operator">:</span> <span class="token string">'https://zos.alipayobjects.com/rmsportal/jkjgkEfvpUPVyRjUImniVslZfWPnJuuZ.png'</span><span class="token punctuation">,</span>
    thumbUrl<span class="token operator">:</span> <span class="token string">'https://zos.alipayobjects.com/rmsportal/jkjgkEfvpUPVyRjUImniVslZfWPnJuuZ.png'</span><span class="token punctuation">,</span>
  <span class="token punctuation">}</span><span class="token punctuation">,</span>
  <span class="token punctuation">{</span>
    uid<span class="token operator">:</span> <span class="token string">'-2'</span><span class="token punctuation">,</span>
    name<span class="token operator">:</span> <span class="token string">'yyy.png'</span><span class="token punctuation">,</span>
    status<span class="token operator">:</span> <span class="token string">'error'</span><span class="token punctuation">,</span>
  <span class="token punctuation">}</span><span class="token punctuation">,</span>
<span class="token punctuation">]</span><span class="token punctuation">;</span>

<span class="token keyword">const</span> App<span class="token operator">:</span> React<span class="token punctuation">.</span><span class="token function-variable function">FC</span> <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=></span> <span class="token punctuation">(</span>
  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span></span><span class="token punctuation">></span></span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span><span class="token class-name">Upload</span></span>
      <span class="token attr-name">action</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>https://www.mocky.io/v2/5cc8019d300000980a055e76<span class="token punctuation">"</span></span>
      <span class="token attr-name">listType</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>picture<span class="token punctuation">"</span></span>
      <span class="token attr-name">defaultFileList</span><span class="token script language-javascript"><span class="token script-punctuation punctuation">=</span><span class="token punctuation">{</span><span class="token punctuation">[</span><span class="token operator">...</span>fileList<span class="token punctuation">]</span><span class="token punctuation">}</span></span>
    <span class="token punctuation">></span></span>
      <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span><span class="token class-name">Button</span></span> <span class="token attr-name">icon</span><span class="token script language-javascript"><span class="token script-punctuation punctuation">=</span><span class="token punctuation">{</span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span><span class="token class-name">UploadOutlined</span></span> <span class="token punctuation">/></span></span><span class="token punctuation">}</span></span><span class="token punctuation">></span></span>Upload<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span><span class="token class-name">Button</span></span><span class="token punctuation">></span></span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span><span class="token class-name">Upload</span></span><span class="token punctuation">></span></span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>br</span> <span class="token punctuation">/></span></span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>br</span> <span class="token punctuation">/></span></span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span><span class="token class-name">Upload</span></span>
      <span class="token attr-name">action</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>https://www.mocky.io/v2/5cc8019d300000980a055e76<span class="token punctuation">"</span></span>
      <span class="token attr-name">listType</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>picture<span class="token punctuation">"</span></span>
      <span class="token attr-name">defaultFileList</span><span class="token script language-javascript"><span class="token script-punctuation punctuation">=</span><span class="token punctuation">{</span><span class="token punctuation">[</span><span class="token operator">...</span>fileList<span class="token punctuation">]</span><span class="token punctuation">}</span></span>
      <span class="token attr-name">className</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>upload-list-inline<span class="token punctuation">"</span></span>
    <span class="token punctuation">></span></span>
      <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span><span class="token class-name">Button</span></span> <span class="token attr-name">icon</span><span class="token script language-javascript"><span class="token script-punctuation punctuation">=</span><span class="token punctuation">{</span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span><span class="token class-name">UploadOutlined</span></span> <span class="token punctuation">/></span></span><span class="token punctuation">}</span></span><span class="token punctuation">></span></span>Upload<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span><span class="token class-name">Button</span></span><span class="token punctuation">></span></span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span><span class="token class-name">Upload</span></span><span class="token punctuation">></span></span>
  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span></span><span class="token punctuation">></span></span>
<span class="token punctuation">)</span><span class="token punctuation">;</span>

<span class="token keyword">export</span> <span class="token keyword">default</span> App<span class="token punctuation">;</span>`,jsx:`<span class="token keyword">import</span> <span class="token punctuation">{</span> UploadOutlined <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">'@ant-design/icons'</span><span class="token punctuation">;</span>
<span class="token keyword">import</span> <span class="token punctuation">{</span> Button<span class="token punctuation">,</span> Upload <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">'antd'</span><span class="token punctuation">;</span>
<span class="token keyword">import</span> React <span class="token keyword">from</span> <span class="token string">'react'</span><span class="token punctuation">;</span>
<span class="token keyword">const</span> fileList <span class="token operator">=</span> <span class="token punctuation">[</span>
  <span class="token punctuation">{</span>
    <span class="token literal-property property">uid</span><span class="token operator">:</span> <span class="token string">'-1'</span><span class="token punctuation">,</span>
    <span class="token literal-property property">name</span><span class="token operator">:</span> <span class="token string">'xxx.png'</span><span class="token punctuation">,</span>
    <span class="token literal-property property">status</span><span class="token operator">:</span> <span class="token string">'done'</span><span class="token punctuation">,</span>
    <span class="token literal-property property">url</span><span class="token operator">:</span> <span class="token string">'https://zos.alipayobjects.com/rmsportal/jkjgkEfvpUPVyRjUImniVslZfWPnJuuZ.png'</span><span class="token punctuation">,</span>
    <span class="token literal-property property">thumbUrl</span><span class="token operator">:</span> <span class="token string">'https://zos.alipayobjects.com/rmsportal/jkjgkEfvpUPVyRjUImniVslZfWPnJuuZ.png'</span><span class="token punctuation">,</span>
  <span class="token punctuation">}</span><span class="token punctuation">,</span>
  <span class="token punctuation">{</span>
    <span class="token literal-property property">uid</span><span class="token operator">:</span> <span class="token string">'-2'</span><span class="token punctuation">,</span>
    <span class="token literal-property property">name</span><span class="token operator">:</span> <span class="token string">'yyy.png'</span><span class="token punctuation">,</span>
    <span class="token literal-property property">status</span><span class="token operator">:</span> <span class="token string">'error'</span><span class="token punctuation">,</span>
  <span class="token punctuation">}</span><span class="token punctuation">,</span>
<span class="token punctuation">]</span><span class="token punctuation">;</span>
<span class="token keyword">const</span> <span class="token function-variable function">App</span> <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=></span> <span class="token punctuation">(</span>
  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span></span><span class="token punctuation">></span></span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span><span class="token class-name">Upload</span></span>
      <span class="token attr-name">action</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>https://www.mocky.io/v2/5cc8019d300000980a055e76<span class="token punctuation">"</span></span>
      <span class="token attr-name">listType</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>picture<span class="token punctuation">"</span></span>
      <span class="token attr-name">defaultFileList</span><span class="token script language-javascript"><span class="token script-punctuation punctuation">=</span><span class="token punctuation">{</span><span class="token punctuation">[</span><span class="token operator">...</span>fileList<span class="token punctuation">]</span><span class="token punctuation">}</span></span>
    <span class="token punctuation">></span></span>
      <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span><span class="token class-name">Button</span></span> <span class="token attr-name">icon</span><span class="token script language-javascript"><span class="token script-punctuation punctuation">=</span><span class="token punctuation">{</span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span><span class="token class-name">UploadOutlined</span></span> <span class="token punctuation">/></span></span><span class="token punctuation">}</span></span><span class="token punctuation">></span></span>Upload<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span><span class="token class-name">Button</span></span><span class="token punctuation">></span></span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span><span class="token class-name">Upload</span></span><span class="token punctuation">></span></span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>br</span> <span class="token punctuation">/></span></span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>br</span> <span class="token punctuation">/></span></span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span><span class="token class-name">Upload</span></span>
      <span class="token attr-name">action</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>https://www.mocky.io/v2/5cc8019d300000980a055e76<span class="token punctuation">"</span></span>
      <span class="token attr-name">listType</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>picture<span class="token punctuation">"</span></span>
      <span class="token attr-name">defaultFileList</span><span class="token script language-javascript"><span class="token script-punctuation punctuation">=</span><span class="token punctuation">{</span><span class="token punctuation">[</span><span class="token operator">...</span>fileList<span class="token punctuation">]</span><span class="token punctuation">}</span></span>
      <span class="token attr-name">className</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>upload-list-inline<span class="token punctuation">"</span></span>
    <span class="token punctuation">></span></span>
      <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span><span class="token class-name">Button</span></span> <span class="token attr-name">icon</span><span class="token script language-javascript"><span class="token script-punctuation punctuation">=</span><span class="token punctuation">{</span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span><span class="token class-name">UploadOutlined</span></span> <span class="token punctuation">/></span></span><span class="token punctuation">}</span></span><span class="token punctuation">></span></span>Upload<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span><span class="token class-name">Button</span></span><span class="token punctuation">></span></span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span><span class="token class-name">Upload</span></span><span class="token punctuation">></span></span>
  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span></span><span class="token punctuation">></span></span>
<span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token keyword">export</span> <span class="token keyword">default</span> App<span class="token punctuation">;</span>
`},preview:function(){var N=g(0),H=g(47),R=g(61),F=g(12),O=S(g(0));function S(C){return C&&C.__esModule?C:{default:C}}var D=[{uid:"-1",name:"xxx.png",status:"done",url:"https://zos.alipayobjects.com/rmsportal/jkjgkEfvpUPVyRjUImniVslZfWPnJuuZ.png",thumbUrl:"https://zos.alipayobjects.com/rmsportal/jkjgkEfvpUPVyRjUImniVslZfWPnJuuZ.png"},{uid:"-2",name:"yyy.png",status:"error"}],V=function(){return O.default.createElement(O.default.Fragment,null,O.default.createElement(F.Upload,{action:"https://www.mocky.io/v2/5cc8019d300000980a055e76",listType:"picture",defaultFileList:[].concat(D)},O.default.createElement(F.Button,{icon:O.default.createElement(R.UploadOutlined,null)},"Upload")),O.default.createElement("br",null),O.default.createElement("br",null),O.default.createElement(F.Upload,{action:"https://www.mocky.io/v2/5cc8019d300000980a055e76",listType:"picture",defaultFileList:[].concat(D),className:"upload-list-inline"},O.default.createElement(F.Button,{icon:O.default.createElement(R.UploadOutlined,null)},"Upload")))},M=V;return N.createElement(M)},style:`/* tile uploaded pictures */
.upload-list-inline .ant-upload-list-item {
  float: left;
  width: 200px;
  margin-right: 8px;
}

.upload-list-inline [class*='-upload-list-rtl'] .ant-upload-list-item {
  float: right;
}`,highlightedStyle:`<span class="token comment" spellcheck="true">/* tile uploaded pictures */</span>
<span class="token selector"><span class="token class">.upload-list-inline</span> <span class="token class">.ant-upload-list-item</span> </span><span class="token punctuation">{</span>
  <span class="token property">float</span><span class="token punctuation">:</span> left<span class="token punctuation">;</span>
  <span class="token property">width</span><span class="token punctuation">:</span> <span class="token number">200</span>px<span class="token punctuation">;</span>
  <span class="token property">margin-right</span><span class="token punctuation">:</span> <span class="token number">8</span>px<span class="token punctuation">;</span>
<span class="token punctuation">}</span>

<span class="token selector"><span class="token class">.upload-list-inline</span> <span class="token attribute">[class*='-upload-list-rtl']</span> <span class="token class">.ant-upload-list-item</span> </span><span class="token punctuation">{</span>
  <span class="token property">float</span><span class="token punctuation">:</span> right<span class="token punctuation">;</span>
<span class="token punctuation">}</span>`}},4811:function(Y,kn,g){Y.exports={content:{"zh-CN":[["p","\u81EA\u5B9A\u4E49\u672C\u5730\u9884\u89C8\uFF0C\u7528\u4E8E\u5904\u7406\u975E\u56FE\u7247\u683C\u5F0F\u6587\u4EF6\uFF08\u4F8B\u5982\u89C6\u9891\u6587\u4EF6\uFF09\u3002"]],"en-US":[["p","Customize local preview. Can handle with non-image format files such as video."]]},meta:{order:9,title:{"zh-CN":"\u81EA\u5B9A\u4E49\u9884\u89C8","en-US":"Customize preview file"},filename:"components/upload/demo/preview-file.md",id:"components-upload-demo-preview-file"},toc:["ul",["li",["a",{className:"bisheng-toc-h2",href:"#zh-CN",title:"zh-CN"},"zh-CN"]],["li",["a",{className:"bisheng-toc-h2",href:"#en-US",title:"en-US"},"en-US"]]],highlightedCode:["pre",{lang:"tsx",highlighted:`import { UploadOutlined } from <span class="token string">'@ant-design/icons'</span><span class="token comment" spellcheck="true">;</span>
import type { UploadProps } from <span class="token string">'antd'</span><span class="token comment" spellcheck="true">;</span>
import { Button<span class="token punctuation">,</span> Upload } from <span class="token string">'antd'</span><span class="token comment" spellcheck="true">;</span>
import React from <span class="token string">'react'</span><span class="token comment" spellcheck="true">;</span>

<span class="token keyword">const</span> props<span class="token punctuation">:</span> UploadProps <span class="token operator">=</span> {
  action<span class="token punctuation">:</span> <span class="token string">'//jsonplaceholder.typicode.com/posts/'</span><span class="token punctuation">,</span>
  listType<span class="token punctuation">:</span> <span class="token string">'picture'</span><span class="token punctuation">,</span>
  <span class="token function">previewFile</span><span class="token punctuation">(</span>file<span class="token punctuation">)</span> {
    console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">'Your upload file:'</span><span class="token punctuation">,</span> file<span class="token punctuation">)</span><span class="token comment" spellcheck="true">;</span>
    <span class="token operator">/</span><span class="token operator">/</span> Your process logic<span class="token punctuation">.</span> Here we just mock <span class="token keyword">to</span> the same file
    return <span class="token function">fetch</span><span class="token punctuation">(</span><span class="token string">'https://next.json-generator.com/api/json/get/4ytyBoLK8'</span><span class="token punctuation">,</span> {
      method<span class="token punctuation">:</span> <span class="token string">'POST'</span><span class="token punctuation">,</span>
      body<span class="token punctuation">:</span> file<span class="token punctuation">,</span>
    }<span class="token punctuation">)</span>
      <span class="token punctuation">.</span><span class="token function">then</span><span class="token punctuation">(</span>res <span class="token operator">=</span><span class="token operator">></span> res<span class="token punctuation">.</span><span class="token function">json</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span>
      <span class="token punctuation">.</span><span class="token function">then</span><span class="token punctuation">(</span><span class="token punctuation">(</span>{ thumbnail }<span class="token punctuation">)</span> <span class="token operator">=</span><span class="token operator">></span> thumbnail<span class="token punctuation">)</span><span class="token comment" spellcheck="true">;</span>
  }<span class="token punctuation">,</span>
}<span class="token comment" spellcheck="true">;</span>

<span class="token keyword">const</span> App<span class="token punctuation">:</span> React<span class="token punctuation">.</span>FC <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=</span><span class="token operator">></span> <span class="token punctuation">(</span>
  <span class="token operator">&lt;</span>Upload {<span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token punctuation">.</span>props}<span class="token operator">></span>
    <span class="token operator">&lt;</span>Button icon<span class="token operator">=</span>{<span class="token operator">&lt;</span>UploadOutlined <span class="token operator">/</span><span class="token operator">></span>}<span class="token operator">></span>Upload<span class="token operator">&lt;</span><span class="token operator">/</span>Button<span class="token operator">></span>
  <span class="token operator">&lt;</span><span class="token operator">/</span>Upload<span class="token operator">></span>
<span class="token punctuation">)</span><span class="token comment" spellcheck="true">;</span>

export <span class="token keyword">default</span> App<span class="token comment" spellcheck="true">;</span>`}],highlightedCodes:{tsx:`<span class="token keyword">import</span> <span class="token punctuation">{</span> UploadOutlined <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">'@ant-design/icons'</span><span class="token punctuation">;</span>
<span class="token keyword">import</span> type <span class="token punctuation">{</span> UploadProps <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">'antd'</span><span class="token punctuation">;</span>
<span class="token keyword">import</span> <span class="token punctuation">{</span> Button<span class="token punctuation">,</span> Upload <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">'antd'</span><span class="token punctuation">;</span>
<span class="token keyword">import</span> React <span class="token keyword">from</span> <span class="token string">'react'</span><span class="token punctuation">;</span>

<span class="token keyword">const</span> props<span class="token operator">:</span> UploadProps <span class="token operator">=</span> <span class="token punctuation">{</span>
  action<span class="token operator">:</span> <span class="token string">'//jsonplaceholder.typicode.com/posts/'</span><span class="token punctuation">,</span>
  listType<span class="token operator">:</span> <span class="token string">'picture'</span><span class="token punctuation">,</span>
  <span class="token function">previewFile</span><span class="token punctuation">(</span>file<span class="token punctuation">)</span> <span class="token punctuation">{</span>
    console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">'Your upload file:'</span><span class="token punctuation">,</span> file<span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token comment">// Your process logic. Here we just mock to the same file</span>
    <span class="token keyword">return</span> <span class="token function">fetch</span><span class="token punctuation">(</span><span class="token string">'https://next.json-generator.com/api/json/get/4ytyBoLK8'</span><span class="token punctuation">,</span> <span class="token punctuation">{</span>
      method<span class="token operator">:</span> <span class="token string">'POST'</span><span class="token punctuation">,</span>
      body<span class="token operator">:</span> file<span class="token punctuation">,</span>
    <span class="token punctuation">}</span><span class="token punctuation">)</span>
      <span class="token punctuation">.</span><span class="token function">then</span><span class="token punctuation">(</span>res <span class="token operator">=></span> res<span class="token punctuation">.</span><span class="token function">json</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span>
      <span class="token punctuation">.</span><span class="token function">then</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token punctuation">{</span> thumbnail <span class="token punctuation">}</span><span class="token punctuation">)</span> <span class="token operator">=></span> thumbnail<span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token punctuation">}</span><span class="token punctuation">,</span>
<span class="token punctuation">}</span><span class="token punctuation">;</span>

<span class="token keyword">const</span> App<span class="token operator">:</span> React<span class="token punctuation">.</span><span class="token function-variable function">FC</span> <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=></span> <span class="token punctuation">(</span>
  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span><span class="token class-name">Upload</span></span> <span class="token spread"><span class="token punctuation">{</span><span class="token operator">...</span>props<span class="token punctuation">}</span></span><span class="token punctuation">></span></span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span><span class="token class-name">Button</span></span> <span class="token attr-name">icon</span><span class="token script language-javascript"><span class="token script-punctuation punctuation">=</span><span class="token punctuation">{</span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span><span class="token class-name">UploadOutlined</span></span> <span class="token punctuation">/></span></span><span class="token punctuation">}</span></span><span class="token punctuation">></span></span>Upload<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span><span class="token class-name">Button</span></span><span class="token punctuation">></span></span>
  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span><span class="token class-name">Upload</span></span><span class="token punctuation">></span></span>
<span class="token punctuation">)</span><span class="token punctuation">;</span>

<span class="token keyword">export</span> <span class="token keyword">default</span> App<span class="token punctuation">;</span>`,jsx:`<span class="token keyword">import</span> <span class="token punctuation">{</span> UploadOutlined <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">'@ant-design/icons'</span><span class="token punctuation">;</span>
<span class="token keyword">import</span> <span class="token punctuation">{</span> Button<span class="token punctuation">,</span> Upload <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">'antd'</span><span class="token punctuation">;</span>
<span class="token keyword">import</span> React <span class="token keyword">from</span> <span class="token string">'react'</span><span class="token punctuation">;</span>
<span class="token keyword">const</span> props <span class="token operator">=</span> <span class="token punctuation">{</span>
  <span class="token literal-property property">action</span><span class="token operator">:</span> <span class="token string">'//jsonplaceholder.typicode.com/posts/'</span><span class="token punctuation">,</span>
  <span class="token literal-property property">listType</span><span class="token operator">:</span> <span class="token string">'picture'</span><span class="token punctuation">,</span>
  <span class="token function">previewFile</span><span class="token punctuation">(</span><span class="token parameter">file</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">'Your upload file:'</span><span class="token punctuation">,</span> file<span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token comment">// Your process logic. Here we just mock to the same file</span>
    <span class="token keyword">return</span> <span class="token function">fetch</span><span class="token punctuation">(</span><span class="token string">'https://next.json-generator.com/api/json/get/4ytyBoLK8'</span><span class="token punctuation">,</span> <span class="token punctuation">{</span>
      <span class="token literal-property property">method</span><span class="token operator">:</span> <span class="token string">'POST'</span><span class="token punctuation">,</span>
      <span class="token literal-property property">body</span><span class="token operator">:</span> file<span class="token punctuation">,</span>
    <span class="token punctuation">}</span><span class="token punctuation">)</span>
      <span class="token punctuation">.</span><span class="token function">then</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token parameter">res</span><span class="token punctuation">)</span> <span class="token operator">=></span> res<span class="token punctuation">.</span><span class="token function">json</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span>
      <span class="token punctuation">.</span><span class="token function">then</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token parameter"><span class="token punctuation">{</span> thumbnail <span class="token punctuation">}</span></span><span class="token punctuation">)</span> <span class="token operator">=></span> thumbnail<span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token punctuation">}</span><span class="token punctuation">,</span>
<span class="token punctuation">}</span><span class="token punctuation">;</span>
<span class="token keyword">const</span> <span class="token function-variable function">App</span> <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=></span> <span class="token punctuation">(</span>
  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span><span class="token class-name">Upload</span></span> <span class="token spread"><span class="token punctuation">{</span><span class="token operator">...</span>props<span class="token punctuation">}</span></span><span class="token punctuation">></span></span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span><span class="token class-name">Button</span></span> <span class="token attr-name">icon</span><span class="token script language-javascript"><span class="token script-punctuation punctuation">=</span><span class="token punctuation">{</span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span><span class="token class-name">UploadOutlined</span></span> <span class="token punctuation">/></span></span><span class="token punctuation">}</span></span><span class="token punctuation">></span></span>Upload<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span><span class="token class-name">Button</span></span><span class="token punctuation">></span></span>
  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span><span class="token class-name">Upload</span></span><span class="token punctuation">></span></span>
<span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token keyword">export</span> <span class="token keyword">default</span> App<span class="token punctuation">;</span>
`},preview:function(){var N=g(0),H=g(47),R=g(61),F=g(12),O=S(g(0));function S(C){return C&&C.__esModule?C:{default:C}}var D={action:"//jsonplaceholder.typicode.com/posts/",listType:"picture",previewFile:function(W){return console.log("Your upload file:",W),fetch("https://next.json-generator.com/api/json/get/4ytyBoLK8",{method:"POST",body:W}).then(function($){return $.json()}).then(function($){var nn=$.thumbnail;return nn})}},V=function(){return O.default.createElement(F.Upload,D,O.default.createElement(F.Button,{icon:O.default.createElement(R.UploadOutlined,null)},"Upload"))},M=V;return N.createElement(M)}}},4812:function(Y,kn,g){Y.exports={content:{"zh-CN":[["p","\u4F7F\u7528 ",["code","beforeUpload"]," \u8F6C\u6362\u4E0A\u4F20\u7684\u6587\u4EF6\uFF08\u4F8B\u5982\u6DFB\u52A0\u6C34\u5370\uFF09\u3002"]],"en-US":[["p","Use ",["code","beforeUpload"]," for transform file before request such as add a watermark."]]},meta:{order:10,title:{"zh-CN":"\u4E0A\u4F20\u524D\u8F6C\u6362\u6587\u4EF6","en-US":"Transform file before request"},filename:"components/upload/demo/transform-file.md",id:"components-upload-demo-transform-file"},toc:["ul",["li",["a",{className:"bisheng-toc-h2",href:"#zh-CN",title:"zh-CN"},"zh-CN"]],["li",["a",{className:"bisheng-toc-h2",href:"#en-US",title:"en-US"},"en-US"]]],highlightedCode:["pre",{lang:"tsx",highlighted:`import { UploadOutlined } from <span class="token string">'@ant-design/icons'</span><span class="token comment" spellcheck="true">;</span>
import type { UploadProps } from <span class="token string">'antd'</span><span class="token comment" spellcheck="true">;</span>
import { Button<span class="token punctuation">,</span> Upload } from <span class="token string">'antd'</span><span class="token comment" spellcheck="true">;</span>
import React from <span class="token string">'react'</span><span class="token comment" spellcheck="true">;</span>

<span class="token keyword">const</span> props<span class="token punctuation">:</span> UploadProps <span class="token operator">=</span> {
  action<span class="token punctuation">:</span> <span class="token string">'https://www.mocky.io/v2/5cc8019d300000980a055e76'</span><span class="token punctuation">,</span>
  listType<span class="token punctuation">:</span> <span class="token string">'picture'</span><span class="token punctuation">,</span>
  <span class="token function">beforeUpload</span><span class="token punctuation">(</span>file<span class="token punctuation">)</span> {
    return new <span class="token function">Promise</span><span class="token punctuation">(</span>resolve <span class="token operator">=</span><span class="token operator">></span> {
      <span class="token keyword">const</span> reader <span class="token operator">=</span> new <span class="token function">FileReader</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token comment" spellcheck="true">;</span>
      reader<span class="token punctuation">.</span><span class="token function">readAsDataURL</span><span class="token punctuation">(</span>file<span class="token punctuation">)</span><span class="token comment" spellcheck="true">;</span>
      reader<span class="token punctuation">.</span>onload <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=</span><span class="token operator">></span> {
        <span class="token keyword">const</span> img <span class="token operator">=</span> document<span class="token punctuation">.</span><span class="token function">createElement</span><span class="token punctuation">(</span><span class="token string">'img'</span><span class="token punctuation">)</span><span class="token comment" spellcheck="true">;</span>
        img<span class="token punctuation">.</span>src <span class="token operator">=</span> reader<span class="token punctuation">.</span>result as string<span class="token comment" spellcheck="true">;</span>
        img<span class="token punctuation">.</span>onload <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=</span><span class="token operator">></span> {
          <span class="token keyword">const</span> canvas <span class="token operator">=</span> document<span class="token punctuation">.</span><span class="token function">createElement</span><span class="token punctuation">(</span><span class="token string">'canvas'</span><span class="token punctuation">)</span><span class="token comment" spellcheck="true">;</span>
          canvas<span class="token punctuation">.</span>width <span class="token operator">=</span> img<span class="token punctuation">.</span>naturalWidth<span class="token comment" spellcheck="true">;</span>
          canvas<span class="token punctuation">.</span>height <span class="token operator">=</span> img<span class="token punctuation">.</span>naturalHeight<span class="token comment" spellcheck="true">;</span>
          <span class="token keyword">const</span> ctx <span class="token operator">=</span> canvas<span class="token punctuation">.</span><span class="token function">getContext</span><span class="token punctuation">(</span><span class="token string">'2d'</span><span class="token punctuation">)</span>!<span class="token comment" spellcheck="true">;</span>
          ctx<span class="token punctuation">.</span><span class="token function">drawImage</span><span class="token punctuation">(</span>img<span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">)</span><span class="token comment" spellcheck="true">;</span>
          ctx<span class="token punctuation">.</span>fillStyle <span class="token operator">=</span> <span class="token string">'red'</span><span class="token comment" spellcheck="true">;</span>
          ctx<span class="token punctuation">.</span>textBaseline <span class="token operator">=</span> <span class="token string">'middle'</span><span class="token comment" spellcheck="true">;</span>
          ctx<span class="token punctuation">.</span>font <span class="token operator">=</span> <span class="token string">'33px Arial'</span><span class="token comment" spellcheck="true">;</span>
          ctx<span class="token punctuation">.</span><span class="token function">fillText</span><span class="token punctuation">(</span><span class="token string">'Ant Design'</span><span class="token punctuation">,</span> <span class="token number">20</span><span class="token punctuation">,</span> <span class="token number">20</span><span class="token punctuation">)</span><span class="token comment" spellcheck="true">;</span>
          canvas<span class="token punctuation">.</span><span class="token function">toBlob</span><span class="token punctuation">(</span>result <span class="token operator">=</span><span class="token operator">></span> <span class="token function">resolve</span><span class="token punctuation">(</span>result as any<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token comment" spellcheck="true">;</span>
        }<span class="token comment" spellcheck="true">;</span>
      }<span class="token comment" spellcheck="true">;</span>
    }<span class="token punctuation">)</span><span class="token comment" spellcheck="true">;</span>
  }<span class="token punctuation">,</span>
}<span class="token comment" spellcheck="true">;</span>

<span class="token keyword">const</span> App<span class="token punctuation">:</span> React<span class="token punctuation">.</span>FC <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=</span><span class="token operator">></span> <span class="token punctuation">(</span>
  <span class="token operator">&lt;</span>Upload {<span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token punctuation">.</span>props}<span class="token operator">></span>
    <span class="token operator">&lt;</span>Button icon<span class="token operator">=</span>{<span class="token operator">&lt;</span>UploadOutlined <span class="token operator">/</span><span class="token operator">></span>}<span class="token operator">></span>Upload<span class="token operator">&lt;</span><span class="token operator">/</span>Button<span class="token operator">></span>
  <span class="token operator">&lt;</span><span class="token operator">/</span>Upload<span class="token operator">></span>
<span class="token punctuation">)</span><span class="token comment" spellcheck="true">;</span>

export <span class="token keyword">default</span> App<span class="token comment" spellcheck="true">;</span>`}],highlightedCodes:{tsx:`<span class="token keyword">import</span> <span class="token punctuation">{</span> UploadOutlined <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">'@ant-design/icons'</span><span class="token punctuation">;</span>
<span class="token keyword">import</span> type <span class="token punctuation">{</span> UploadProps <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">'antd'</span><span class="token punctuation">;</span>
<span class="token keyword">import</span> <span class="token punctuation">{</span> Button<span class="token punctuation">,</span> Upload <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">'antd'</span><span class="token punctuation">;</span>
<span class="token keyword">import</span> React <span class="token keyword">from</span> <span class="token string">'react'</span><span class="token punctuation">;</span>

<span class="token keyword">const</span> props<span class="token operator">:</span> UploadProps <span class="token operator">=</span> <span class="token punctuation">{</span>
  action<span class="token operator">:</span> <span class="token string">'https://www.mocky.io/v2/5cc8019d300000980a055e76'</span><span class="token punctuation">,</span>
  listType<span class="token operator">:</span> <span class="token string">'picture'</span><span class="token punctuation">,</span>
  <span class="token function">beforeUpload</span><span class="token punctuation">(</span>file<span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">return</span> <span class="token keyword">new</span> <span class="token class-name">Promise</span><span class="token punctuation">(</span>resolve <span class="token operator">=></span> <span class="token punctuation">{</span>
      <span class="token keyword">const</span> reader <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">FileReader</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
      reader<span class="token punctuation">.</span><span class="token function">readAsDataURL</span><span class="token punctuation">(</span>file<span class="token punctuation">)</span><span class="token punctuation">;</span>
      reader<span class="token punctuation">.</span><span class="token function-variable function">onload</span> <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=></span> <span class="token punctuation">{</span>
        <span class="token keyword">const</span> img <span class="token operator">=</span> document<span class="token punctuation">.</span><span class="token function">createElement</span><span class="token punctuation">(</span><span class="token string">'img'</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        img<span class="token punctuation">.</span>src <span class="token operator">=</span> reader<span class="token punctuation">.</span>result <span class="token keyword">as</span> string<span class="token punctuation">;</span>
        img<span class="token punctuation">.</span><span class="token function-variable function">onload</span> <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=></span> <span class="token punctuation">{</span>
          <span class="token keyword">const</span> canvas <span class="token operator">=</span> document<span class="token punctuation">.</span><span class="token function">createElement</span><span class="token punctuation">(</span><span class="token string">'canvas'</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
          canvas<span class="token punctuation">.</span>width <span class="token operator">=</span> img<span class="token punctuation">.</span>naturalWidth<span class="token punctuation">;</span>
          canvas<span class="token punctuation">.</span>height <span class="token operator">=</span> img<span class="token punctuation">.</span>naturalHeight<span class="token punctuation">;</span>
          <span class="token keyword">const</span> ctx <span class="token operator">=</span> canvas<span class="token punctuation">.</span><span class="token function">getContext</span><span class="token punctuation">(</span><span class="token string">'2d'</span><span class="token punctuation">)</span><span class="token operator">!</span><span class="token punctuation">;</span>
          ctx<span class="token punctuation">.</span><span class="token function">drawImage</span><span class="token punctuation">(</span>img<span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
          ctx<span class="token punctuation">.</span>fillStyle <span class="token operator">=</span> <span class="token string">'red'</span><span class="token punctuation">;</span>
          ctx<span class="token punctuation">.</span>textBaseline <span class="token operator">=</span> <span class="token string">'middle'</span><span class="token punctuation">;</span>
          ctx<span class="token punctuation">.</span>font <span class="token operator">=</span> <span class="token string">'33px Arial'</span><span class="token punctuation">;</span>
          ctx<span class="token punctuation">.</span><span class="token function">fillText</span><span class="token punctuation">(</span><span class="token string">'Ant Design'</span><span class="token punctuation">,</span> <span class="token number">20</span><span class="token punctuation">,</span> <span class="token number">20</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
          canvas<span class="token punctuation">.</span><span class="token function">toBlob</span><span class="token punctuation">(</span>result <span class="token operator">=></span> <span class="token function">resolve</span><span class="token punctuation">(</span>result <span class="token keyword">as</span> any<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span><span class="token punctuation">;</span>
      <span class="token punctuation">}</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token punctuation">}</span><span class="token punctuation">,</span>
<span class="token punctuation">}</span><span class="token punctuation">;</span>

<span class="token keyword">const</span> App<span class="token operator">:</span> React<span class="token punctuation">.</span><span class="token function-variable function">FC</span> <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=></span> <span class="token punctuation">(</span>
  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span><span class="token class-name">Upload</span></span> <span class="token spread"><span class="token punctuation">{</span><span class="token operator">...</span>props<span class="token punctuation">}</span></span><span class="token punctuation">></span></span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span><span class="token class-name">Button</span></span> <span class="token attr-name">icon</span><span class="token script language-javascript"><span class="token script-punctuation punctuation">=</span><span class="token punctuation">{</span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span><span class="token class-name">UploadOutlined</span></span> <span class="token punctuation">/></span></span><span class="token punctuation">}</span></span><span class="token punctuation">></span></span>Upload<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span><span class="token class-name">Button</span></span><span class="token punctuation">></span></span>
  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span><span class="token class-name">Upload</span></span><span class="token punctuation">></span></span>
<span class="token punctuation">)</span><span class="token punctuation">;</span>

<span class="token keyword">export</span> <span class="token keyword">default</span> App<span class="token punctuation">;</span>`,jsx:`<span class="token keyword">import</span> <span class="token punctuation">{</span> UploadOutlined <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">'@ant-design/icons'</span><span class="token punctuation">;</span>
<span class="token keyword">import</span> <span class="token punctuation">{</span> Button<span class="token punctuation">,</span> Upload <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">'antd'</span><span class="token punctuation">;</span>
<span class="token keyword">import</span> React <span class="token keyword">from</span> <span class="token string">'react'</span><span class="token punctuation">;</span>
<span class="token keyword">const</span> props <span class="token operator">=</span> <span class="token punctuation">{</span>
  <span class="token literal-property property">action</span><span class="token operator">:</span> <span class="token string">'https://www.mocky.io/v2/5cc8019d300000980a055e76'</span><span class="token punctuation">,</span>
  <span class="token literal-property property">listType</span><span class="token operator">:</span> <span class="token string">'picture'</span><span class="token punctuation">,</span>
  <span class="token function">beforeUpload</span><span class="token punctuation">(</span><span class="token parameter">file</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">return</span> <span class="token keyword">new</span> <span class="token class-name">Promise</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token parameter">resolve</span><span class="token punctuation">)</span> <span class="token operator">=></span> <span class="token punctuation">{</span>
      <span class="token keyword">const</span> reader <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">FileReader</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
      reader<span class="token punctuation">.</span><span class="token function">readAsDataURL</span><span class="token punctuation">(</span>file<span class="token punctuation">)</span><span class="token punctuation">;</span>
      reader<span class="token punctuation">.</span><span class="token function-variable function">onload</span> <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=></span> <span class="token punctuation">{</span>
        <span class="token keyword">const</span> img <span class="token operator">=</span> document<span class="token punctuation">.</span><span class="token function">createElement</span><span class="token punctuation">(</span><span class="token string">'img'</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        img<span class="token punctuation">.</span>src <span class="token operator">=</span> reader<span class="token punctuation">.</span>result<span class="token punctuation">;</span>
        img<span class="token punctuation">.</span><span class="token function-variable function">onload</span> <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=></span> <span class="token punctuation">{</span>
          <span class="token keyword">const</span> canvas <span class="token operator">=</span> document<span class="token punctuation">.</span><span class="token function">createElement</span><span class="token punctuation">(</span><span class="token string">'canvas'</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
          canvas<span class="token punctuation">.</span>width <span class="token operator">=</span> img<span class="token punctuation">.</span>naturalWidth<span class="token punctuation">;</span>
          canvas<span class="token punctuation">.</span>height <span class="token operator">=</span> img<span class="token punctuation">.</span>naturalHeight<span class="token punctuation">;</span>
          <span class="token keyword">const</span> ctx <span class="token operator">=</span> canvas<span class="token punctuation">.</span><span class="token function">getContext</span><span class="token punctuation">(</span><span class="token string">'2d'</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
          ctx<span class="token punctuation">.</span><span class="token function">drawImage</span><span class="token punctuation">(</span>img<span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
          ctx<span class="token punctuation">.</span>fillStyle <span class="token operator">=</span> <span class="token string">'red'</span><span class="token punctuation">;</span>
          ctx<span class="token punctuation">.</span>textBaseline <span class="token operator">=</span> <span class="token string">'middle'</span><span class="token punctuation">;</span>
          ctx<span class="token punctuation">.</span>font <span class="token operator">=</span> <span class="token string">'33px Arial'</span><span class="token punctuation">;</span>
          ctx<span class="token punctuation">.</span><span class="token function">fillText</span><span class="token punctuation">(</span><span class="token string">'Ant Design'</span><span class="token punctuation">,</span> <span class="token number">20</span><span class="token punctuation">,</span> <span class="token number">20</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
          canvas<span class="token punctuation">.</span><span class="token function">toBlob</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token parameter">result</span><span class="token punctuation">)</span> <span class="token operator">=></span> <span class="token function">resolve</span><span class="token punctuation">(</span>result<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span><span class="token punctuation">;</span>
      <span class="token punctuation">}</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token punctuation">}</span><span class="token punctuation">,</span>
<span class="token punctuation">}</span><span class="token punctuation">;</span>
<span class="token keyword">const</span> <span class="token function-variable function">App</span> <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=></span> <span class="token punctuation">(</span>
  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span><span class="token class-name">Upload</span></span> <span class="token spread"><span class="token punctuation">{</span><span class="token operator">...</span>props<span class="token punctuation">}</span></span><span class="token punctuation">></span></span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span><span class="token class-name">Button</span></span> <span class="token attr-name">icon</span><span class="token script language-javascript"><span class="token script-punctuation punctuation">=</span><span class="token punctuation">{</span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span><span class="token class-name">UploadOutlined</span></span> <span class="token punctuation">/></span></span><span class="token punctuation">}</span></span><span class="token punctuation">></span></span>Upload<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span><span class="token class-name">Button</span></span><span class="token punctuation">></span></span>
  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span><span class="token class-name">Upload</span></span><span class="token punctuation">></span></span>
<span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token keyword">export</span> <span class="token keyword">default</span> App<span class="token punctuation">;</span>
`},preview:function(){var N=g(0),H=g(47),R=g(61),F=g(12),O=S(g(0));function S(C){return C&&C.__esModule?C:{default:C}}var D={action:"https://www.mocky.io/v2/5cc8019d300000980a055e76",listType:"picture",beforeUpload:function(W){return new Promise(function($){var nn=new FileReader;nn.readAsDataURL(W),nn.onload=function(){var hn=document.createElement("img");hn.src=nn.result,hn.onload=function(){var _=document.createElement("canvas");_.width=hn.naturalWidth,_.height=hn.naturalHeight;var mn=_.getContext("2d");mn.drawImage(hn,0,0),mn.fillStyle="red",mn.textBaseline="middle",mn.font="33px Arial",mn.fillText("Ant Design",20,20),_.toBlob(function(pn){return $(pn)})}}})}},V=function(){return O.default.createElement(F.Upload,D,O.default.createElement(F.Button,{icon:O.default.createElement(R.UploadOutlined,null)},"Upload"))},M=V;return N.createElement(M)}}},4813:function(Y,kn,g){Y.exports={content:{"zh-CN":[["p","\u4F7F\u7528 ",["code","showUploadList"]," \u8BBE\u7F6E\u5217\u8868\u4EA4\u4E92\u56FE\u6807\u3002"]],"en-US":[["p","Use ",["code","showUploadList"]," for custom action icons of files."]]},meta:{order:12,title:{"zh-CN":"\u81EA\u5B9A\u4E49\u4EA4\u4E92\u56FE\u6807","en-US":"custom action icon"},filename:"components/upload/demo/upload-custom-action-icon.md",id:"components-upload-demo-upload-custom-action-icon"},toc:["ul",["li",["a",{className:"bisheng-toc-h2",href:"#zh-CN",title:"zh-CN"},"zh-CN"]],["li",["a",{className:"bisheng-toc-h2",href:"#en-US",title:"en-US"},"en-US"]]],highlightedCode:["pre",{lang:"tsx",highlighted:`import { StarOutlined<span class="token punctuation">,</span> UploadOutlined } from <span class="token string">'@ant-design/icons'</span><span class="token comment" spellcheck="true">;</span>
import type { UploadProps } from <span class="token string">'antd'</span><span class="token comment" spellcheck="true">;</span>
import { Button<span class="token punctuation">,</span> Upload } from <span class="token string">'antd'</span><span class="token comment" spellcheck="true">;</span>
import React from <span class="token string">'react'</span><span class="token comment" spellcheck="true">;</span>

<span class="token keyword">const</span> props<span class="token punctuation">:</span> UploadProps <span class="token operator">=</span> {
  action<span class="token punctuation">:</span> <span class="token string">'https://www.mocky.io/v2/5cc8019d300000980a055e76'</span><span class="token punctuation">,</span>
  <span class="token function">onChange</span><span class="token punctuation">(</span>{ file<span class="token punctuation">,</span> fileList }<span class="token punctuation">)</span> {
    <span class="token keyword">if</span> <span class="token punctuation">(</span>file<span class="token punctuation">.</span>status !<span class="token operator">==</span> <span class="token string">'uploading'</span><span class="token punctuation">)</span> {
      console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>file<span class="token punctuation">,</span> fileList<span class="token punctuation">)</span><span class="token comment" spellcheck="true">;</span>
    }
  }<span class="token punctuation">,</span>
  defaultFileList<span class="token punctuation">:</span> <span class="token punctuation">[</span>
    {
      uid<span class="token punctuation">:</span> <span class="token string">'1'</span><span class="token punctuation">,</span>
      name<span class="token punctuation">:</span> <span class="token string">'xxx.png'</span><span class="token punctuation">,</span>
      status<span class="token punctuation">:</span> <span class="token string">'done'</span><span class="token punctuation">,</span>
      response<span class="token punctuation">:</span> <span class="token string">'Server Error 500'</span><span class="token punctuation">,</span> <span class="token operator">/</span><span class="token operator">/</span> custom error message <span class="token keyword">to</span> show
      url<span class="token punctuation">:</span> <span class="token string">'http://www.baidu.com/xxx.png'</span><span class="token punctuation">,</span>
    }<span class="token punctuation">,</span>
    {
      uid<span class="token punctuation">:</span> <span class="token string">'2'</span><span class="token punctuation">,</span>
      name<span class="token punctuation">:</span> <span class="token string">'yyy.png'</span><span class="token punctuation">,</span>
      status<span class="token punctuation">:</span> <span class="token string">'done'</span><span class="token punctuation">,</span>
      url<span class="token punctuation">:</span> <span class="token string">'http://www.baidu.com/yyy.png'</span><span class="token punctuation">,</span>
    }<span class="token punctuation">,</span>
    {
      uid<span class="token punctuation">:</span> <span class="token string">'3'</span><span class="token punctuation">,</span>
      name<span class="token punctuation">:</span> <span class="token string">'zzz.png'</span><span class="token punctuation">,</span>
      status<span class="token punctuation">:</span> <span class="token string">'error'</span><span class="token punctuation">,</span>
      response<span class="token punctuation">:</span> <span class="token string">'Server Error 500'</span><span class="token punctuation">,</span> <span class="token operator">/</span><span class="token operator">/</span> custom error message <span class="token keyword">to</span> show
      url<span class="token punctuation">:</span> <span class="token string">'http://www.baidu.com/zzz.png'</span><span class="token punctuation">,</span>
    }<span class="token punctuation">,</span>
  <span class="token punctuation">]</span><span class="token punctuation">,</span>
  showUploadList<span class="token punctuation">:</span> {
    showDownloadIcon<span class="token punctuation">:</span> <span class="token boolean">true</span><span class="token punctuation">,</span>
    downloadIcon<span class="token punctuation">:</span> <span class="token string">'Download'</span><span class="token punctuation">,</span>
    showRemoveIcon<span class="token punctuation">:</span> <span class="token boolean">true</span><span class="token punctuation">,</span>
    removeIcon<span class="token punctuation">:</span> <span class="token operator">&lt;</span>StarOutlined onClick<span class="token operator">=</span>{e <span class="token operator">=</span><span class="token operator">></span> console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>e<span class="token punctuation">,</span> <span class="token string">'custom removeIcon event'</span><span class="token punctuation">)</span>} <span class="token operator">/</span><span class="token operator">></span><span class="token punctuation">,</span>
  }<span class="token punctuation">,</span>
}<span class="token comment" spellcheck="true">;</span>

<span class="token keyword">const</span> App<span class="token punctuation">:</span> React<span class="token punctuation">.</span>FC <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=</span><span class="token operator">></span> <span class="token punctuation">(</span>
  <span class="token operator">&lt;</span>Upload {<span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token punctuation">.</span>props}<span class="token operator">></span>
    <span class="token operator">&lt;</span>Button icon<span class="token operator">=</span>{<span class="token operator">&lt;</span>UploadOutlined <span class="token operator">/</span><span class="token operator">></span>}<span class="token operator">></span>Upload<span class="token operator">&lt;</span><span class="token operator">/</span>Button<span class="token operator">></span>
  <span class="token operator">&lt;</span><span class="token operator">/</span>Upload<span class="token operator">></span>
<span class="token punctuation">)</span><span class="token comment" spellcheck="true">;</span>

export <span class="token keyword">default</span> App<span class="token comment" spellcheck="true">;</span>`}],highlightedCodes:{tsx:`<span class="token keyword">import</span> <span class="token punctuation">{</span> StarOutlined<span class="token punctuation">,</span> UploadOutlined <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">'@ant-design/icons'</span><span class="token punctuation">;</span>
<span class="token keyword">import</span> type <span class="token punctuation">{</span> UploadProps <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">'antd'</span><span class="token punctuation">;</span>
<span class="token keyword">import</span> <span class="token punctuation">{</span> Button<span class="token punctuation">,</span> Upload <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">'antd'</span><span class="token punctuation">;</span>
<span class="token keyword">import</span> React <span class="token keyword">from</span> <span class="token string">'react'</span><span class="token punctuation">;</span>

<span class="token keyword">const</span> props<span class="token operator">:</span> UploadProps <span class="token operator">=</span> <span class="token punctuation">{</span>
  action<span class="token operator">:</span> <span class="token string">'https://www.mocky.io/v2/5cc8019d300000980a055e76'</span><span class="token punctuation">,</span>
  <span class="token function">onChange</span><span class="token punctuation">(</span><span class="token punctuation">{</span> file<span class="token punctuation">,</span> fileList <span class="token punctuation">}</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">if</span> <span class="token punctuation">(</span>file<span class="token punctuation">.</span>status <span class="token operator">!==</span> <span class="token string">'uploading'</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
      console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>file<span class="token punctuation">,</span> fileList<span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
  <span class="token punctuation">}</span><span class="token punctuation">,</span>
  defaultFileList<span class="token operator">:</span> <span class="token punctuation">[</span>
    <span class="token punctuation">{</span>
      uid<span class="token operator">:</span> <span class="token string">'1'</span><span class="token punctuation">,</span>
      name<span class="token operator">:</span> <span class="token string">'xxx.png'</span><span class="token punctuation">,</span>
      status<span class="token operator">:</span> <span class="token string">'done'</span><span class="token punctuation">,</span>
      response<span class="token operator">:</span> <span class="token string">'Server Error 500'</span><span class="token punctuation">,</span> <span class="token comment">// custom error message to show</span>
      url<span class="token operator">:</span> <span class="token string">'http://www.baidu.com/xxx.png'</span><span class="token punctuation">,</span>
    <span class="token punctuation">}</span><span class="token punctuation">,</span>
    <span class="token punctuation">{</span>
      uid<span class="token operator">:</span> <span class="token string">'2'</span><span class="token punctuation">,</span>
      name<span class="token operator">:</span> <span class="token string">'yyy.png'</span><span class="token punctuation">,</span>
      status<span class="token operator">:</span> <span class="token string">'done'</span><span class="token punctuation">,</span>
      url<span class="token operator">:</span> <span class="token string">'http://www.baidu.com/yyy.png'</span><span class="token punctuation">,</span>
    <span class="token punctuation">}</span><span class="token punctuation">,</span>
    <span class="token punctuation">{</span>
      uid<span class="token operator">:</span> <span class="token string">'3'</span><span class="token punctuation">,</span>
      name<span class="token operator">:</span> <span class="token string">'zzz.png'</span><span class="token punctuation">,</span>
      status<span class="token operator">:</span> <span class="token string">'error'</span><span class="token punctuation">,</span>
      response<span class="token operator">:</span> <span class="token string">'Server Error 500'</span><span class="token punctuation">,</span> <span class="token comment">// custom error message to show</span>
      url<span class="token operator">:</span> <span class="token string">'http://www.baidu.com/zzz.png'</span><span class="token punctuation">,</span>
    <span class="token punctuation">}</span><span class="token punctuation">,</span>
  <span class="token punctuation">]</span><span class="token punctuation">,</span>
  showUploadList<span class="token operator">:</span> <span class="token punctuation">{</span>
    showDownloadIcon<span class="token operator">:</span> <span class="token boolean">true</span><span class="token punctuation">,</span>
    downloadIcon<span class="token operator">:</span> <span class="token string">'Download'</span><span class="token punctuation">,</span>
    showRemoveIcon<span class="token operator">:</span> <span class="token boolean">true</span><span class="token punctuation">,</span>
    removeIcon<span class="token operator">:</span> <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span><span class="token class-name">StarOutlined</span></span> <span class="token attr-name">onClick</span><span class="token script language-javascript"><span class="token script-punctuation punctuation">=</span><span class="token punctuation">{</span>e <span class="token operator">=></span> console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>e<span class="token punctuation">,</span> <span class="token string">'custom removeIcon event'</span><span class="token punctuation">)</span><span class="token punctuation">}</span></span> <span class="token punctuation">/></span></span><span class="token punctuation">,</span>
  <span class="token punctuation">}</span><span class="token punctuation">,</span>
<span class="token punctuation">}</span><span class="token punctuation">;</span>

<span class="token keyword">const</span> App<span class="token operator">:</span> React<span class="token punctuation">.</span><span class="token function-variable function">FC</span> <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=></span> <span class="token punctuation">(</span>
  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span><span class="token class-name">Upload</span></span> <span class="token spread"><span class="token punctuation">{</span><span class="token operator">...</span>props<span class="token punctuation">}</span></span><span class="token punctuation">></span></span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span><span class="token class-name">Button</span></span> <span class="token attr-name">icon</span><span class="token script language-javascript"><span class="token script-punctuation punctuation">=</span><span class="token punctuation">{</span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span><span class="token class-name">UploadOutlined</span></span> <span class="token punctuation">/></span></span><span class="token punctuation">}</span></span><span class="token punctuation">></span></span>Upload<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span><span class="token class-name">Button</span></span><span class="token punctuation">></span></span>
  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span><span class="token class-name">Upload</span></span><span class="token punctuation">></span></span>
<span class="token punctuation">)</span><span class="token punctuation">;</span>

<span class="token keyword">export</span> <span class="token keyword">default</span> App<span class="token punctuation">;</span>`,jsx:`<span class="token keyword">import</span> <span class="token punctuation">{</span> StarOutlined<span class="token punctuation">,</span> UploadOutlined <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">'@ant-design/icons'</span><span class="token punctuation">;</span>
<span class="token keyword">import</span> <span class="token punctuation">{</span> Button<span class="token punctuation">,</span> Upload <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">'antd'</span><span class="token punctuation">;</span>
<span class="token keyword">import</span> React <span class="token keyword">from</span> <span class="token string">'react'</span><span class="token punctuation">;</span>
<span class="token keyword">const</span> props <span class="token operator">=</span> <span class="token punctuation">{</span>
  <span class="token literal-property property">action</span><span class="token operator">:</span> <span class="token string">'https://www.mocky.io/v2/5cc8019d300000980a055e76'</span><span class="token punctuation">,</span>
  <span class="token function">onChange</span><span class="token punctuation">(</span><span class="token parameter"><span class="token punctuation">{</span> file<span class="token punctuation">,</span> fileList <span class="token punctuation">}</span></span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">if</span> <span class="token punctuation">(</span>file<span class="token punctuation">.</span>status <span class="token operator">!==</span> <span class="token string">'uploading'</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
      console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>file<span class="token punctuation">,</span> fileList<span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
  <span class="token punctuation">}</span><span class="token punctuation">,</span>
  <span class="token literal-property property">defaultFileList</span><span class="token operator">:</span> <span class="token punctuation">[</span>
    <span class="token punctuation">{</span>
      <span class="token literal-property property">uid</span><span class="token operator">:</span> <span class="token string">'1'</span><span class="token punctuation">,</span>
      <span class="token literal-property property">name</span><span class="token operator">:</span> <span class="token string">'xxx.png'</span><span class="token punctuation">,</span>
      <span class="token literal-property property">status</span><span class="token operator">:</span> <span class="token string">'done'</span><span class="token punctuation">,</span>
      <span class="token literal-property property">response</span><span class="token operator">:</span> <span class="token string">'Server Error 500'</span><span class="token punctuation">,</span>
      <span class="token comment">// custom error message to show</span>
      <span class="token literal-property property">url</span><span class="token operator">:</span> <span class="token string">'http://www.baidu.com/xxx.png'</span><span class="token punctuation">,</span>
    <span class="token punctuation">}</span><span class="token punctuation">,</span>
    <span class="token punctuation">{</span>
      <span class="token literal-property property">uid</span><span class="token operator">:</span> <span class="token string">'2'</span><span class="token punctuation">,</span>
      <span class="token literal-property property">name</span><span class="token operator">:</span> <span class="token string">'yyy.png'</span><span class="token punctuation">,</span>
      <span class="token literal-property property">status</span><span class="token operator">:</span> <span class="token string">'done'</span><span class="token punctuation">,</span>
      <span class="token literal-property property">url</span><span class="token operator">:</span> <span class="token string">'http://www.baidu.com/yyy.png'</span><span class="token punctuation">,</span>
    <span class="token punctuation">}</span><span class="token punctuation">,</span>
    <span class="token punctuation">{</span>
      <span class="token literal-property property">uid</span><span class="token operator">:</span> <span class="token string">'3'</span><span class="token punctuation">,</span>
      <span class="token literal-property property">name</span><span class="token operator">:</span> <span class="token string">'zzz.png'</span><span class="token punctuation">,</span>
      <span class="token literal-property property">status</span><span class="token operator">:</span> <span class="token string">'error'</span><span class="token punctuation">,</span>
      <span class="token literal-property property">response</span><span class="token operator">:</span> <span class="token string">'Server Error 500'</span><span class="token punctuation">,</span>
      <span class="token comment">// custom error message to show</span>
      <span class="token literal-property property">url</span><span class="token operator">:</span> <span class="token string">'http://www.baidu.com/zzz.png'</span><span class="token punctuation">,</span>
    <span class="token punctuation">}</span><span class="token punctuation">,</span>
  <span class="token punctuation">]</span><span class="token punctuation">,</span>
  <span class="token literal-property property">showUploadList</span><span class="token operator">:</span> <span class="token punctuation">{</span>
    <span class="token literal-property property">showDownloadIcon</span><span class="token operator">:</span> <span class="token boolean">true</span><span class="token punctuation">,</span>
    <span class="token literal-property property">downloadIcon</span><span class="token operator">:</span> <span class="token string">'Download'</span><span class="token punctuation">,</span>
    <span class="token literal-property property">showRemoveIcon</span><span class="token operator">:</span> <span class="token boolean">true</span><span class="token punctuation">,</span>
    <span class="token literal-property property">removeIcon</span><span class="token operator">:</span> <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span><span class="token class-name">StarOutlined</span></span> <span class="token attr-name">onClick</span><span class="token script language-javascript"><span class="token script-punctuation punctuation">=</span><span class="token punctuation">{</span><span class="token punctuation">(</span><span class="token parameter">e</span><span class="token punctuation">)</span> <span class="token operator">=></span> console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>e<span class="token punctuation">,</span> <span class="token string">'custom removeIcon event'</span><span class="token punctuation">)</span><span class="token punctuation">}</span></span> <span class="token punctuation">/></span></span><span class="token punctuation">,</span>
  <span class="token punctuation">}</span><span class="token punctuation">,</span>
<span class="token punctuation">}</span><span class="token punctuation">;</span>
<span class="token keyword">const</span> <span class="token function-variable function">App</span> <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=></span> <span class="token punctuation">(</span>
  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span><span class="token class-name">Upload</span></span> <span class="token spread"><span class="token punctuation">{</span><span class="token operator">...</span>props<span class="token punctuation">}</span></span><span class="token punctuation">></span></span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span><span class="token class-name">Button</span></span> <span class="token attr-name">icon</span><span class="token script language-javascript"><span class="token script-punctuation punctuation">=</span><span class="token punctuation">{</span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span><span class="token class-name">UploadOutlined</span></span> <span class="token punctuation">/></span></span><span class="token punctuation">}</span></span><span class="token punctuation">></span></span>Upload<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span><span class="token class-name">Button</span></span><span class="token punctuation">></span></span>
  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span><span class="token class-name">Upload</span></span><span class="token punctuation">></span></span>
<span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token keyword">export</span> <span class="token keyword">default</span> App<span class="token punctuation">;</span>
`},preview:function(){var N=g(0),H=g(47),R=g(61),F=g(12),O=S(g(0));function S(C){return C&&C.__esModule?C:{default:C}}var D={action:"https://www.mocky.io/v2/5cc8019d300000980a055e76",onChange:function(W){var $=W.file,nn=W.fileList;$.status!=="uploading"&&console.log($,nn)},defaultFileList:[{uid:"1",name:"xxx.png",status:"done",response:"Server Error 500",url:"http://www.baidu.com/xxx.png"},{uid:"2",name:"yyy.png",status:"done",url:"http://www.baidu.com/yyy.png"},{uid:"3",name:"zzz.png",status:"error",response:"Server Error 500",url:"http://www.baidu.com/zzz.png"}],showUploadList:{showDownloadIcon:!0,downloadIcon:"Download",showRemoveIcon:!0,removeIcon:O.default.createElement(R.StarOutlined,{onClick:function(W){return console.log(W,"custom removeIcon event")}})}},V=function(){return O.default.createElement(F.Upload,D,O.default.createElement(F.Button,{icon:O.default.createElement(R.UploadOutlined,null)},"Upload"))},M=V;return N.createElement(M)}}},4814:function(Y,kn,g){Y.exports={content:{"zh-CN":[["p",["code","beforeUpload"]," \u8FD4\u56DE ",["code","false"]," \u540E\uFF0C\u624B\u52A8\u4E0A\u4F20\u6587\u4EF6\u3002"]],"en-US":[["p","Upload files manually after ",["code","beforeUpload"]," returns ",["code","false"],"."]]},meta:{order:7,title:{"zh-CN":"\u624B\u52A8\u4E0A\u4F20","en-US":"Upload manually"},filename:"components/upload/demo/upload-manually.md",id:"components-upload-demo-upload-manually"},toc:["ul",["li",["a",{className:"bisheng-toc-h2",href:"#zh-CN",title:"zh-CN"},"zh-CN"]],["li",["a",{className:"bisheng-toc-h2",href:"#en-US",title:"en-US"},"en-US"]]],highlightedCode:["pre",{lang:"tsx",highlighted:`import { UploadOutlined } from <span class="token string">'@ant-design/icons'</span><span class="token comment" spellcheck="true">;</span>
import { Button<span class="token punctuation">,</span> message<span class="token punctuation">,</span> Upload } from <span class="token string">'antd'</span><span class="token comment" spellcheck="true">;</span>
import type { RcFile<span class="token punctuation">,</span> UploadFile<span class="token punctuation">,</span> UploadProps } from <span class="token string">'antd/es/upload/interface'</span><span class="token comment" spellcheck="true">;</span>
import React<span class="token punctuation">,</span> { useState } from <span class="token string">'react'</span><span class="token comment" spellcheck="true">;</span>

<span class="token keyword">const</span> App<span class="token punctuation">:</span> React<span class="token punctuation">.</span>FC <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=</span><span class="token operator">></span> {
  <span class="token keyword">const</span> <span class="token punctuation">[</span>fileList<span class="token punctuation">,</span> setFileList<span class="token punctuation">]</span> <span class="token operator">=</span> useState<span class="token operator">&lt;</span>UploadFile<span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token operator">></span><span class="token punctuation">(</span><span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token comment" spellcheck="true">;</span>
  <span class="token keyword">const</span> <span class="token punctuation">[</span>uploading<span class="token punctuation">,</span> setUploading<span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token function">useState</span><span class="token punctuation">(</span><span class="token boolean">false</span><span class="token punctuation">)</span><span class="token comment" spellcheck="true">;</span>

  <span class="token keyword">const</span> handleUpload <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=</span><span class="token operator">></span> {
    <span class="token keyword">const</span> formData <span class="token operator">=</span> new <span class="token function">FormData</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token comment" spellcheck="true">;</span>
    fileList<span class="token punctuation">.</span><span class="token function">forEach</span><span class="token punctuation">(</span>file <span class="token operator">=</span><span class="token operator">></span> {
      formData<span class="token punctuation">.</span><span class="token function">append</span><span class="token punctuation">(</span><span class="token string">'files[]'</span><span class="token punctuation">,</span> file as RcFile<span class="token punctuation">)</span><span class="token comment" spellcheck="true">;</span>
    }<span class="token punctuation">)</span><span class="token comment" spellcheck="true">;</span>
    <span class="token function">setUploading</span><span class="token punctuation">(</span><span class="token boolean">true</span><span class="token punctuation">)</span><span class="token comment" spellcheck="true">;</span>
    <span class="token operator">/</span><span class="token operator">/</span> You can use any AJAX library you like
    <span class="token function">fetch</span><span class="token punctuation">(</span><span class="token string">'https://www.mocky.io/v2/5cc8019d300000980a055e76'</span><span class="token punctuation">,</span> {
      method<span class="token punctuation">:</span> <span class="token string">'POST'</span><span class="token punctuation">,</span>
      body<span class="token punctuation">:</span> formData<span class="token punctuation">,</span>
    }<span class="token punctuation">)</span>
      <span class="token punctuation">.</span><span class="token function">then</span><span class="token punctuation">(</span>res <span class="token operator">=</span><span class="token operator">></span> res<span class="token punctuation">.</span><span class="token function">json</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span>
      <span class="token punctuation">.</span><span class="token function">then</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=</span><span class="token operator">></span> {
        <span class="token function">setFileList</span><span class="token punctuation">(</span><span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token comment" spellcheck="true">;</span>
        message<span class="token punctuation">.</span><span class="token function">success</span><span class="token punctuation">(</span><span class="token string">'upload successfully.'</span><span class="token punctuation">)</span><span class="token comment" spellcheck="true">;</span>
      }<span class="token punctuation">)</span>
      <span class="token punctuation">.</span><span class="token function">catch</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=</span><span class="token operator">></span> {
        message<span class="token punctuation">.</span><span class="token function">error</span><span class="token punctuation">(</span><span class="token string">'upload failed.'</span><span class="token punctuation">)</span><span class="token comment" spellcheck="true">;</span>
      }<span class="token punctuation">)</span>
      <span class="token punctuation">.</span><span class="token function">finally</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=</span><span class="token operator">></span> {
        <span class="token function">setUploading</span><span class="token punctuation">(</span><span class="token boolean">false</span><span class="token punctuation">)</span><span class="token comment" spellcheck="true">;</span>
      }<span class="token punctuation">)</span><span class="token comment" spellcheck="true">;</span>
  }<span class="token comment" spellcheck="true">;</span>

  <span class="token keyword">const</span> props<span class="token punctuation">:</span> UploadProps <span class="token operator">=</span> {
    onRemove<span class="token punctuation">:</span> file <span class="token operator">=</span><span class="token operator">></span> {
      <span class="token keyword">const</span> index <span class="token operator">=</span> fileList<span class="token punctuation">.</span><span class="token function">indexOf</span><span class="token punctuation">(</span>file<span class="token punctuation">)</span><span class="token comment" spellcheck="true">;</span>
      <span class="token keyword">const</span> newFileList <span class="token operator">=</span> fileList<span class="token punctuation">.</span><span class="token function">slice</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token comment" spellcheck="true">;</span>
      newFileList<span class="token punctuation">.</span><span class="token function">splice</span><span class="token punctuation">(</span>index<span class="token punctuation">,</span> <span class="token number">1</span><span class="token punctuation">)</span><span class="token comment" spellcheck="true">;</span>
      <span class="token function">setFileList</span><span class="token punctuation">(</span>newFileList<span class="token punctuation">)</span><span class="token comment" spellcheck="true">;</span>
    }<span class="token punctuation">,</span>
    beforeUpload<span class="token punctuation">:</span> file <span class="token operator">=</span><span class="token operator">></span> {
      <span class="token function">setFileList</span><span class="token punctuation">(</span><span class="token punctuation">[</span><span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token punctuation">.</span>fileList<span class="token punctuation">,</span> file<span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token comment" spellcheck="true">;</span>

      return <span class="token boolean">false</span><span class="token comment" spellcheck="true">;</span>
    }<span class="token punctuation">,</span>
    fileList<span class="token punctuation">,</span>
  }<span class="token comment" spellcheck="true">;</span>

  return <span class="token punctuation">(</span>
    <span class="token operator">&lt;></span>
      <span class="token operator">&lt;</span>Upload {<span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token punctuation">.</span>props}<span class="token operator">></span>
        <span class="token operator">&lt;</span>Button icon<span class="token operator">=</span>{<span class="token operator">&lt;</span>UploadOutlined <span class="token operator">/</span><span class="token operator">></span>}<span class="token operator">></span><span class="token keyword">Select</span> File<span class="token operator">&lt;</span><span class="token operator">/</span>Button<span class="token operator">></span>
      <span class="token operator">&lt;</span><span class="token operator">/</span>Upload<span class="token operator">></span>
      <span class="token operator">&lt;</span>Button
        type<span class="token operator">=</span><span class="token string">"primary"</span>
        onClick<span class="token operator">=</span>{handleUpload}
        disabled<span class="token operator">=</span>{fileList<span class="token punctuation">.</span>length <span class="token operator">==</span><span class="token operator">=</span> <span class="token number">0</span>}
        loading<span class="token operator">=</span>{uploading}
        style<span class="token operator">=</span>{{ marginTop<span class="token punctuation">:</span> <span class="token number">16</span> }}
      <span class="token operator">></span>
        {uploading <span class="token operator">?</span> <span class="token string">'Uploading'</span> <span class="token punctuation">:</span> <span class="token string">'Start Upload'</span>}
      <span class="token operator">&lt;</span><span class="token operator">/</span>Button<span class="token operator">></span>
    <span class="token operator">&lt;</span><span class="token operator">/</span><span class="token operator">></span>
  <span class="token punctuation">)</span><span class="token comment" spellcheck="true">;</span>
}<span class="token comment" spellcheck="true">;</span>

export <span class="token keyword">default</span> App<span class="token comment" spellcheck="true">;</span>`}],highlightedCodes:{tsx:`<span class="token keyword">import</span> <span class="token punctuation">{</span> UploadOutlined <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">'@ant-design/icons'</span><span class="token punctuation">;</span>
<span class="token keyword">import</span> <span class="token punctuation">{</span> Button<span class="token punctuation">,</span> message<span class="token punctuation">,</span> Upload <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">'antd'</span><span class="token punctuation">;</span>
<span class="token keyword">import</span> type <span class="token punctuation">{</span> RcFile<span class="token punctuation">,</span> UploadFile<span class="token punctuation">,</span> UploadProps <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">'antd/es/upload/interface'</span><span class="token punctuation">;</span>
<span class="token keyword">import</span> React<span class="token punctuation">,</span> <span class="token punctuation">{</span> useState <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">'react'</span><span class="token punctuation">;</span>

<span class="token keyword">const</span> App<span class="token operator">:</span> React<span class="token punctuation">.</span><span class="token function-variable function">FC</span> <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=></span> <span class="token punctuation">{</span>
  <span class="token keyword">const</span> <span class="token punctuation">[</span>fileList<span class="token punctuation">,</span> setFileList<span class="token punctuation">]</span> <span class="token operator">=</span> useState<span class="token operator">&lt;</span>UploadFile<span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token operator">></span><span class="token punctuation">(</span><span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token keyword">const</span> <span class="token punctuation">[</span>uploading<span class="token punctuation">,</span> setUploading<span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token function">useState</span><span class="token punctuation">(</span><span class="token boolean">false</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

  <span class="token keyword">const</span> <span class="token function-variable function">handleUpload</span> <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=></span> <span class="token punctuation">{</span>
    <span class="token keyword">const</span> formData <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">FormData</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    fileList<span class="token punctuation">.</span><span class="token function">forEach</span><span class="token punctuation">(</span>file <span class="token operator">=></span> <span class="token punctuation">{</span>
      formData<span class="token punctuation">.</span><span class="token function">append</span><span class="token punctuation">(</span><span class="token string">'files[]'</span><span class="token punctuation">,</span> file <span class="token keyword">as</span> RcFile<span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token function">setUploading</span><span class="token punctuation">(</span><span class="token boolean">true</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token comment">// You can use any AJAX library you like</span>
    <span class="token function">fetch</span><span class="token punctuation">(</span><span class="token string">'https://www.mocky.io/v2/5cc8019d300000980a055e76'</span><span class="token punctuation">,</span> <span class="token punctuation">{</span>
      method<span class="token operator">:</span> <span class="token string">'POST'</span><span class="token punctuation">,</span>
      body<span class="token operator">:</span> formData<span class="token punctuation">,</span>
    <span class="token punctuation">}</span><span class="token punctuation">)</span>
      <span class="token punctuation">.</span><span class="token function">then</span><span class="token punctuation">(</span>res <span class="token operator">=></span> res<span class="token punctuation">.</span><span class="token function">json</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span>
      <span class="token punctuation">.</span><span class="token function">then</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=></span> <span class="token punctuation">{</span>
        <span class="token function">setFileList</span><span class="token punctuation">(</span><span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        message<span class="token punctuation">.</span><span class="token function">success</span><span class="token punctuation">(</span><span class="token string">'upload successfully.'</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
      <span class="token punctuation">}</span><span class="token punctuation">)</span>
      <span class="token punctuation">.</span><span class="token function">catch</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=></span> <span class="token punctuation">{</span>
        message<span class="token punctuation">.</span><span class="token function">error</span><span class="token punctuation">(</span><span class="token string">'upload failed.'</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
      <span class="token punctuation">}</span><span class="token punctuation">)</span>
      <span class="token punctuation">.</span><span class="token function">finally</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=></span> <span class="token punctuation">{</span>
        <span class="token function">setUploading</span><span class="token punctuation">(</span><span class="token boolean">false</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
      <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token punctuation">}</span><span class="token punctuation">;</span>

  <span class="token keyword">const</span> props<span class="token operator">:</span> UploadProps <span class="token operator">=</span> <span class="token punctuation">{</span>
    <span class="token function-variable function">onRemove</span><span class="token operator">:</span> file <span class="token operator">=></span> <span class="token punctuation">{</span>
      <span class="token keyword">const</span> index <span class="token operator">=</span> fileList<span class="token punctuation">.</span><span class="token function">indexOf</span><span class="token punctuation">(</span>file<span class="token punctuation">)</span><span class="token punctuation">;</span>
      <span class="token keyword">const</span> newFileList <span class="token operator">=</span> fileList<span class="token punctuation">.</span><span class="token function">slice</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
      newFileList<span class="token punctuation">.</span><span class="token function">splice</span><span class="token punctuation">(</span>index<span class="token punctuation">,</span> <span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
      <span class="token function">setFileList</span><span class="token punctuation">(</span>newFileList<span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span><span class="token punctuation">,</span>
    <span class="token function-variable function">beforeUpload</span><span class="token operator">:</span> file <span class="token operator">=></span> <span class="token punctuation">{</span>
      <span class="token function">setFileList</span><span class="token punctuation">(</span><span class="token punctuation">[</span><span class="token operator">...</span>fileList<span class="token punctuation">,</span> file<span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

      <span class="token keyword">return</span> <span class="token boolean">false</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span><span class="token punctuation">,</span>
    fileList<span class="token punctuation">,</span>
  <span class="token punctuation">}</span><span class="token punctuation">;</span>

  <span class="token keyword">return</span> <span class="token punctuation">(</span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span></span><span class="token punctuation">></span></span>
      <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span><span class="token class-name">Upload</span></span> <span class="token spread"><span class="token punctuation">{</span><span class="token operator">...</span>props<span class="token punctuation">}</span></span><span class="token punctuation">></span></span>
        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span><span class="token class-name">Button</span></span> <span class="token attr-name">icon</span><span class="token script language-javascript"><span class="token script-punctuation punctuation">=</span><span class="token punctuation">{</span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span><span class="token class-name">UploadOutlined</span></span> <span class="token punctuation">/></span></span><span class="token punctuation">}</span></span><span class="token punctuation">></span></span>Select File<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span><span class="token class-name">Button</span></span><span class="token punctuation">></span></span>
      <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span><span class="token class-name">Upload</span></span><span class="token punctuation">></span></span>
      <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span><span class="token class-name">Button</span></span>
        <span class="token attr-name">type</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>primary<span class="token punctuation">"</span></span>
        <span class="token attr-name">onClick</span><span class="token script language-javascript"><span class="token script-punctuation punctuation">=</span><span class="token punctuation">{</span>handleUpload<span class="token punctuation">}</span></span>
        <span class="token attr-name">disabled</span><span class="token script language-javascript"><span class="token script-punctuation punctuation">=</span><span class="token punctuation">{</span>fileList<span class="token punctuation">.</span>length <span class="token operator">===</span> <span class="token number">0</span><span class="token punctuation">}</span></span>
        <span class="token attr-name">loading</span><span class="token script language-javascript"><span class="token script-punctuation punctuation">=</span><span class="token punctuation">{</span>uploading<span class="token punctuation">}</span></span>
        <span class="token attr-name">style</span><span class="token script language-javascript"><span class="token script-punctuation punctuation">=</span><span class="token punctuation">{</span><span class="token punctuation">{</span> marginTop<span class="token operator">:</span> <span class="token number">16</span> <span class="token punctuation">}</span><span class="token punctuation">}</span></span>
      <span class="token punctuation">></span></span>
        <span class="token punctuation">{</span>uploading <span class="token operator">?</span> <span class="token string">'Uploading'</span> <span class="token operator">:</span> <span class="token string">'Start Upload'</span><span class="token punctuation">}</span>
      <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span><span class="token class-name">Button</span></span><span class="token punctuation">></span></span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span></span><span class="token punctuation">></span></span>
  <span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span><span class="token punctuation">;</span>

<span class="token keyword">export</span> <span class="token keyword">default</span> App<span class="token punctuation">;</span>`,jsx:`<span class="token keyword">import</span> <span class="token punctuation">{</span> UploadOutlined <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">'@ant-design/icons'</span><span class="token punctuation">;</span>
<span class="token keyword">import</span> <span class="token punctuation">{</span> Button<span class="token punctuation">,</span> message<span class="token punctuation">,</span> Upload <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">'antd'</span><span class="token punctuation">;</span>
<span class="token keyword">import</span> React<span class="token punctuation">,</span> <span class="token punctuation">{</span> useState <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">'react'</span><span class="token punctuation">;</span>
<span class="token keyword">const</span> <span class="token function-variable function">App</span> <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=></span> <span class="token punctuation">{</span>
  <span class="token keyword">const</span> <span class="token punctuation">[</span>fileList<span class="token punctuation">,</span> setFileList<span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token function">useState</span><span class="token punctuation">(</span><span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token keyword">const</span> <span class="token punctuation">[</span>uploading<span class="token punctuation">,</span> setUploading<span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token function">useState</span><span class="token punctuation">(</span><span class="token boolean">false</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token keyword">const</span> <span class="token function-variable function">handleUpload</span> <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=></span> <span class="token punctuation">{</span>
    <span class="token keyword">const</span> formData <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">FormData</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    fileList<span class="token punctuation">.</span><span class="token function">forEach</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token parameter">file</span><span class="token punctuation">)</span> <span class="token operator">=></span> <span class="token punctuation">{</span>
      formData<span class="token punctuation">.</span><span class="token function">append</span><span class="token punctuation">(</span><span class="token string">'files[]'</span><span class="token punctuation">,</span> file<span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token function">setUploading</span><span class="token punctuation">(</span><span class="token boolean">true</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token comment">// You can use any AJAX library you like</span>
    <span class="token function">fetch</span><span class="token punctuation">(</span><span class="token string">'https://www.mocky.io/v2/5cc8019d300000980a055e76'</span><span class="token punctuation">,</span> <span class="token punctuation">{</span>
      <span class="token literal-property property">method</span><span class="token operator">:</span> <span class="token string">'POST'</span><span class="token punctuation">,</span>
      <span class="token literal-property property">body</span><span class="token operator">:</span> formData<span class="token punctuation">,</span>
    <span class="token punctuation">}</span><span class="token punctuation">)</span>
      <span class="token punctuation">.</span><span class="token function">then</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token parameter">res</span><span class="token punctuation">)</span> <span class="token operator">=></span> res<span class="token punctuation">.</span><span class="token function">json</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span>
      <span class="token punctuation">.</span><span class="token function">then</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=></span> <span class="token punctuation">{</span>
        <span class="token function">setFileList</span><span class="token punctuation">(</span><span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        message<span class="token punctuation">.</span><span class="token function">success</span><span class="token punctuation">(</span><span class="token string">'upload successfully.'</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
      <span class="token punctuation">}</span><span class="token punctuation">)</span>
      <span class="token punctuation">.</span><span class="token function">catch</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=></span> <span class="token punctuation">{</span>
        message<span class="token punctuation">.</span><span class="token function">error</span><span class="token punctuation">(</span><span class="token string">'upload failed.'</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
      <span class="token punctuation">}</span><span class="token punctuation">)</span>
      <span class="token punctuation">.</span><span class="token function">finally</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=></span> <span class="token punctuation">{</span>
        <span class="token function">setUploading</span><span class="token punctuation">(</span><span class="token boolean">false</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
      <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token punctuation">}</span><span class="token punctuation">;</span>
  <span class="token keyword">const</span> props <span class="token operator">=</span> <span class="token punctuation">{</span>
    <span class="token function-variable function">onRemove</span><span class="token operator">:</span> <span class="token punctuation">(</span><span class="token parameter">file</span><span class="token punctuation">)</span> <span class="token operator">=></span> <span class="token punctuation">{</span>
      <span class="token keyword">const</span> index <span class="token operator">=</span> fileList<span class="token punctuation">.</span><span class="token function">indexOf</span><span class="token punctuation">(</span>file<span class="token punctuation">)</span><span class="token punctuation">;</span>
      <span class="token keyword">const</span> newFileList <span class="token operator">=</span> fileList<span class="token punctuation">.</span><span class="token function">slice</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
      newFileList<span class="token punctuation">.</span><span class="token function">splice</span><span class="token punctuation">(</span>index<span class="token punctuation">,</span> <span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
      <span class="token function">setFileList</span><span class="token punctuation">(</span>newFileList<span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span><span class="token punctuation">,</span>
    <span class="token function-variable function">beforeUpload</span><span class="token operator">:</span> <span class="token punctuation">(</span><span class="token parameter">file</span><span class="token punctuation">)</span> <span class="token operator">=></span> <span class="token punctuation">{</span>
      <span class="token function">setFileList</span><span class="token punctuation">(</span><span class="token punctuation">[</span><span class="token operator">...</span>fileList<span class="token punctuation">,</span> file<span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
      <span class="token keyword">return</span> <span class="token boolean">false</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span><span class="token punctuation">,</span>
    fileList<span class="token punctuation">,</span>
  <span class="token punctuation">}</span><span class="token punctuation">;</span>
  <span class="token keyword">return</span> <span class="token punctuation">(</span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span></span><span class="token punctuation">></span></span>
      <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span><span class="token class-name">Upload</span></span> <span class="token spread"><span class="token punctuation">{</span><span class="token operator">...</span>props<span class="token punctuation">}</span></span><span class="token punctuation">></span></span>
        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span><span class="token class-name">Button</span></span> <span class="token attr-name">icon</span><span class="token script language-javascript"><span class="token script-punctuation punctuation">=</span><span class="token punctuation">{</span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span><span class="token class-name">UploadOutlined</span></span> <span class="token punctuation">/></span></span><span class="token punctuation">}</span></span><span class="token punctuation">></span></span>Select File<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span><span class="token class-name">Button</span></span><span class="token punctuation">></span></span>
      <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span><span class="token class-name">Upload</span></span><span class="token punctuation">></span></span>
      <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span><span class="token class-name">Button</span></span>
        <span class="token attr-name">type</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>primary<span class="token punctuation">"</span></span>
        <span class="token attr-name">onClick</span><span class="token script language-javascript"><span class="token script-punctuation punctuation">=</span><span class="token punctuation">{</span>handleUpload<span class="token punctuation">}</span></span>
        <span class="token attr-name">disabled</span><span class="token script language-javascript"><span class="token script-punctuation punctuation">=</span><span class="token punctuation">{</span>fileList<span class="token punctuation">.</span>length <span class="token operator">===</span> <span class="token number">0</span><span class="token punctuation">}</span></span>
        <span class="token attr-name">loading</span><span class="token script language-javascript"><span class="token script-punctuation punctuation">=</span><span class="token punctuation">{</span>uploading<span class="token punctuation">}</span></span>
        <span class="token attr-name">style</span><span class="token script language-javascript"><span class="token script-punctuation punctuation">=</span><span class="token punctuation">{</span><span class="token punctuation">{</span>
          <span class="token literal-property property">marginTop</span><span class="token operator">:</span> <span class="token number">16</span><span class="token punctuation">,</span>
        <span class="token punctuation">}</span><span class="token punctuation">}</span></span>
      <span class="token punctuation">></span></span>
        <span class="token punctuation">{</span>uploading <span class="token operator">?</span> <span class="token string">'Uploading'</span> <span class="token operator">:</span> <span class="token string">'Start Upload'</span><span class="token punctuation">}</span>
      <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span><span class="token class-name">Button</span></span><span class="token punctuation">></span></span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span></span><span class="token punctuation">></span></span>
  <span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span><span class="token punctuation">;</span>
<span class="token keyword">export</span> <span class="token keyword">default</span> App<span class="token punctuation">;</span>
`},preview:function(){var N=g(0),H=g(47);function R(t){return R=typeof Symbol=="function"&&typeof Symbol.iterator=="symbol"?function(a){return typeof a}:function(a){return a&&typeof Symbol=="function"&&a.constructor===Symbol&&a!==Symbol.prototype?"symbol":typeof a},R(t)}var F=g(61),O=g(12),S=V(g(0));function D(t){if(typeof WeakMap!="function")return null;var a=new WeakMap,s=new WeakMap;return(D=function(e){return e?s:a})(t)}function V(t,a){if(!a&&t&&t.__esModule)return t;if(t===null||R(t)!=="object"&&typeof t!="function")return{default:t};var s=D(a);if(s&&s.has(t))return s.get(t);var u={},e=Object.defineProperty&&Object.getOwnPropertyDescriptor;for(var d in t)if(d!=="default"&&Object.prototype.hasOwnProperty.call(t,d)){var m=e?Object.getOwnPropertyDescriptor(t,d):null;m&&(m.get||m.set)?Object.defineProperty(u,d,m):u[d]=t[d]}return u.default=t,s&&s.set(t,u),u}function M(t){return $(t)||W(t)||_(t)||C()}function C(){throw new TypeError(`Invalid attempt to spread non-iterable instance.
In order to be iterable, non-array objects must have a [Symbol.iterator]() method.`)}function W(t){if(typeof Symbol!="undefined"&&t[Symbol.iterator]!=null||t["@@iterator"]!=null)return Array.from(t)}function $(t){if(Array.isArray(t))return mn(t)}function nn(t,a){return dn(t)||pn(t,a)||_(t,a)||hn()}function hn(){throw new TypeError(`Invalid attempt to destructure non-iterable instance.
In order to be iterable, non-array objects must have a [Symbol.iterator]() method.`)}function _(t,a){if(t){if(typeof t=="string")return mn(t,a);var s=Object.prototype.toString.call(t).slice(8,-1);if(s==="Object"&&t.constructor&&(s=t.constructor.name),s==="Map"||s==="Set")return Array.from(t);if(s==="Arguments"||/^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(s))return mn(t,a)}}function mn(t,a){(a==null||a>t.length)&&(a=t.length);for(var s=0,u=new Array(a);s<a;s++)u[s]=t[s];return u}function pn(t,a){var s=t==null?null:typeof Symbol!="undefined"&&t[Symbol.iterator]||t["@@iterator"];if(s!=null){var u,e,d,m,b=[],U=!0,E=!1;try{if(d=(s=s.call(t)).next,a===0){if(Object(s)!==s)return;U=!1}else for(;!(U=(u=d.call(s)).done)&&(b.push(u.value),b.length!==a);U=!0);}catch(L){E=!0,e=L}finally{try{if(!U&&s.return!=null&&(m=s.return(),Object(m)!==m))return}finally{if(E)throw e}}return b}}function dn(t){if(Array.isArray(t))return t}var z=function(){var a=(0,S.useState)([]),s=nn(a,2),u=s[0],e=s[1],d=(0,S.useState)(!1),m=nn(d,2),b=m[0],U=m[1],E=function(){var Z=new FormData;u.forEach(function(cn){Z.append("files[]",cn)}),U(!0),fetch("https://www.mocky.io/v2/5cc8019d300000980a055e76",{method:"POST",body:Z}).then(function(cn){return cn.json()}).then(function(){e([]),O.message.success("upload successfully.")}).catch(function(){O.message.error("upload failed.")}).finally(function(){U(!1)})},L={onRemove:function(Z){var cn=u.indexOf(Z),K=u.slice();K.splice(cn,1),e(K)},beforeUpload:function(Z){return e([].concat(M(u),[Z])),!1},fileList:u};return S.default.createElement(S.default.Fragment,null,S.default.createElement(O.Upload,L,S.default.createElement(O.Button,{icon:S.default.createElement(F.UploadOutlined,null)},"Select File")),S.default.createElement(O.Button,{type:"primary",onClick:E,disabled:u.length===0,loading:b,style:{marginTop:16}},b?"Uploading":"Start Upload"))},J=z;return N.createElement(J)}}},4815:function(Y,kn,g){Y.exports={content:{"zh-CN":[["p",["code","beforeUpload"]," \u8FD4\u56DE ",["code","false"]," \u6216 ",["code","Promise.reject"]," \u65F6\uFF0C\u53EA\u7528\u4E8E\u62E6\u622A\u4E0A\u4F20\u884C\u4E3A\uFF0C\u4E0D\u4F1A\u963B\u6B62\u6587\u4EF6\u8FDB\u5165\u4E0A\u4F20\u5217\u8868\uFF08",["a",{title:null,href:"https://github.com/ant-design/ant-design/issues/15561#issuecomment-475108235"},"\u539F\u56E0"],"\uFF09\u3002\u5982\u679C\u9700\u8981\u963B\u6B62\u5217\u8868\u5C55\u73B0\uFF0C\u53EF\u4EE5\u901A\u8FC7\u8FD4\u56DE ",["code","Upload.LIST_IGNORE"]," \u5B9E\u73B0\u3002"]],"en-US":[["p",["code","beforeUpload"]," only prevent upload behavior when return false or reject promise, the prevented file would still show in file list. Here is the example you can keep prevented files out of list by return ",["code","UPLOAD.LIST_IGNORE"],"."]]},meta:{order:7.1,title:{"zh-CN":"\u53EA\u4E0A\u4F20 png \u56FE\u7247","en-US":"Upload png file only"},filename:"components/upload/demo/upload-png-only.md",id:"components-upload-demo-upload-png-only"},toc:["ul",["li",["a",{className:"bisheng-toc-h2",href:"#zh-CN",title:"zh-CN"},"zh-CN"]],["li",["a",{className:"bisheng-toc-h2",href:"#en-US",title:"en-US"},"en-US"]]],highlightedCode:["pre",{lang:"tsx",highlighted:`import { UploadOutlined } from <span class="token string">'@ant-design/icons'</span><span class="token comment" spellcheck="true">;</span>
import type { UploadProps } from <span class="token string">'antd'</span><span class="token comment" spellcheck="true">;</span>
import { Button<span class="token punctuation">,</span> message<span class="token punctuation">,</span> Upload } from <span class="token string">'antd'</span><span class="token comment" spellcheck="true">;</span>
import React from <span class="token string">'react'</span><span class="token comment" spellcheck="true">;</span>

<span class="token keyword">const</span> props<span class="token punctuation">:</span> UploadProps <span class="token operator">=</span> {
  beforeUpload<span class="token punctuation">:</span> file <span class="token operator">=</span><span class="token operator">></span> {
    <span class="token keyword">const</span> isPNG <span class="token operator">=</span> file<span class="token punctuation">.</span>type <span class="token operator">==</span><span class="token operator">=</span> <span class="token string">'image/png'</span><span class="token comment" spellcheck="true">;</span>
    <span class="token keyword">if</span> <span class="token punctuation">(</span>!isPNG<span class="token punctuation">)</span> {
      message<span class="token punctuation">.</span><span class="token function">error</span><span class="token punctuation">(</span>\`\${file<span class="token punctuation">.</span>name} is <span class="token operator">not</span> a png file\`<span class="token punctuation">)</span><span class="token comment" spellcheck="true">;</span>
    }
    return isPNG || Upload<span class="token punctuation">.</span>LIST_IGNORE<span class="token comment" spellcheck="true">;</span>
  }<span class="token punctuation">,</span>
  onChange<span class="token punctuation">:</span> info <span class="token operator">=</span><span class="token operator">></span> {
    console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>info<span class="token punctuation">.</span>fileList<span class="token punctuation">)</span><span class="token comment" spellcheck="true">;</span>
  }<span class="token punctuation">,</span>
}<span class="token comment" spellcheck="true">;</span>

<span class="token keyword">const</span> App<span class="token punctuation">:</span> React<span class="token punctuation">.</span>FC <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=</span><span class="token operator">></span> <span class="token punctuation">(</span>
  <span class="token operator">&lt;</span>Upload {<span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token punctuation">.</span>props}<span class="token operator">></span>
    <span class="token operator">&lt;</span>Button icon<span class="token operator">=</span>{<span class="token operator">&lt;</span>UploadOutlined <span class="token operator">/</span><span class="token operator">></span>}<span class="token operator">></span>Upload png only<span class="token operator">&lt;</span><span class="token operator">/</span>Button<span class="token operator">></span>
  <span class="token operator">&lt;</span><span class="token operator">/</span>Upload<span class="token operator">></span>
<span class="token punctuation">)</span><span class="token comment" spellcheck="true">;</span>

export <span class="token keyword">default</span> App<span class="token comment" spellcheck="true">;</span>`}],highlightedCodes:{tsx:`<span class="token keyword">import</span> <span class="token punctuation">{</span> UploadOutlined <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">'@ant-design/icons'</span><span class="token punctuation">;</span>
<span class="token keyword">import</span> type <span class="token punctuation">{</span> UploadProps <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">'antd'</span><span class="token punctuation">;</span>
<span class="token keyword">import</span> <span class="token punctuation">{</span> Button<span class="token punctuation">,</span> message<span class="token punctuation">,</span> Upload <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">'antd'</span><span class="token punctuation">;</span>
<span class="token keyword">import</span> React <span class="token keyword">from</span> <span class="token string">'react'</span><span class="token punctuation">;</span>

<span class="token keyword">const</span> props<span class="token operator">:</span> UploadProps <span class="token operator">=</span> <span class="token punctuation">{</span>
  <span class="token function-variable function">beforeUpload</span><span class="token operator">:</span> file <span class="token operator">=></span> <span class="token punctuation">{</span>
    <span class="token keyword">const</span> isPNG <span class="token operator">=</span> file<span class="token punctuation">.</span>type <span class="token operator">===</span> <span class="token string">'image/png'</span><span class="token punctuation">;</span>
    <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token operator">!</span>isPNG<span class="token punctuation">)</span> <span class="token punctuation">{</span>
      message<span class="token punctuation">.</span><span class="token function">error</span><span class="token punctuation">(</span><span class="token template-string"><span class="token template-punctuation string">\`</span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">\${</span>file<span class="token punctuation">.</span>name<span class="token interpolation-punctuation punctuation">}</span></span><span class="token string"> is not a png file</span><span class="token template-punctuation string">\`</span></span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
    <span class="token keyword">return</span> isPNG <span class="token operator">||</span> Upload<span class="token punctuation">.</span><span class="token constant">LIST_IGNORE</span><span class="token punctuation">;</span>
  <span class="token punctuation">}</span><span class="token punctuation">,</span>
  <span class="token function-variable function">onChange</span><span class="token operator">:</span> info <span class="token operator">=></span> <span class="token punctuation">{</span>
    console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>info<span class="token punctuation">.</span>fileList<span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token punctuation">}</span><span class="token punctuation">,</span>
<span class="token punctuation">}</span><span class="token punctuation">;</span>

<span class="token keyword">const</span> App<span class="token operator">:</span> React<span class="token punctuation">.</span><span class="token function-variable function">FC</span> <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=></span> <span class="token punctuation">(</span>
  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span><span class="token class-name">Upload</span></span> <span class="token spread"><span class="token punctuation">{</span><span class="token operator">...</span>props<span class="token punctuation">}</span></span><span class="token punctuation">></span></span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span><span class="token class-name">Button</span></span> <span class="token attr-name">icon</span><span class="token script language-javascript"><span class="token script-punctuation punctuation">=</span><span class="token punctuation">{</span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span><span class="token class-name">UploadOutlined</span></span> <span class="token punctuation">/></span></span><span class="token punctuation">}</span></span><span class="token punctuation">></span></span>Upload png only<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span><span class="token class-name">Button</span></span><span class="token punctuation">></span></span>
  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span><span class="token class-name">Upload</span></span><span class="token punctuation">></span></span>
<span class="token punctuation">)</span><span class="token punctuation">;</span>

<span class="token keyword">export</span> <span class="token keyword">default</span> App<span class="token punctuation">;</span>`,jsx:`<span class="token keyword">import</span> <span class="token punctuation">{</span> UploadOutlined <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">'@ant-design/icons'</span><span class="token punctuation">;</span>
<span class="token keyword">import</span> <span class="token punctuation">{</span> Button<span class="token punctuation">,</span> message<span class="token punctuation">,</span> Upload <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">'antd'</span><span class="token punctuation">;</span>
<span class="token keyword">import</span> React <span class="token keyword">from</span> <span class="token string">'react'</span><span class="token punctuation">;</span>
<span class="token keyword">const</span> props <span class="token operator">=</span> <span class="token punctuation">{</span>
  <span class="token function-variable function">beforeUpload</span><span class="token operator">:</span> <span class="token punctuation">(</span><span class="token parameter">file</span><span class="token punctuation">)</span> <span class="token operator">=></span> <span class="token punctuation">{</span>
    <span class="token keyword">const</span> isPNG <span class="token operator">=</span> file<span class="token punctuation">.</span>type <span class="token operator">===</span> <span class="token string">'image/png'</span><span class="token punctuation">;</span>
    <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token operator">!</span>isPNG<span class="token punctuation">)</span> <span class="token punctuation">{</span>
      message<span class="token punctuation">.</span><span class="token function">error</span><span class="token punctuation">(</span><span class="token template-string"><span class="token template-punctuation string">\`</span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">\${</span>file<span class="token punctuation">.</span>name<span class="token interpolation-punctuation punctuation">}</span></span><span class="token string"> is not a png file</span><span class="token template-punctuation string">\`</span></span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
    <span class="token keyword">return</span> isPNG <span class="token operator">||</span> Upload<span class="token punctuation">.</span><span class="token constant">LIST_IGNORE</span><span class="token punctuation">;</span>
  <span class="token punctuation">}</span><span class="token punctuation">,</span>
  <span class="token function-variable function">onChange</span><span class="token operator">:</span> <span class="token punctuation">(</span><span class="token parameter">info</span><span class="token punctuation">)</span> <span class="token operator">=></span> <span class="token punctuation">{</span>
    console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>info<span class="token punctuation">.</span>fileList<span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token punctuation">}</span><span class="token punctuation">,</span>
<span class="token punctuation">}</span><span class="token punctuation">;</span>
<span class="token keyword">const</span> <span class="token function-variable function">App</span> <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=></span> <span class="token punctuation">(</span>
  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span><span class="token class-name">Upload</span></span> <span class="token spread"><span class="token punctuation">{</span><span class="token operator">...</span>props<span class="token punctuation">}</span></span><span class="token punctuation">></span></span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span><span class="token class-name">Button</span></span> <span class="token attr-name">icon</span><span class="token script language-javascript"><span class="token script-punctuation punctuation">=</span><span class="token punctuation">{</span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span><span class="token class-name">UploadOutlined</span></span> <span class="token punctuation">/></span></span><span class="token punctuation">}</span></span><span class="token punctuation">></span></span>Upload png only<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span><span class="token class-name">Button</span></span><span class="token punctuation">></span></span>
  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span><span class="token class-name">Upload</span></span><span class="token punctuation">></span></span>
<span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token keyword">export</span> <span class="token keyword">default</span> App<span class="token punctuation">;</span>
`},preview:function(){var N=g(0),H=g(47),R=g(61),F=g(12),O=S(g(0));function S(C){return C&&C.__esModule?C:{default:C}}var D={beforeUpload:function(W){var $=W.type==="image/png";return $||F.message.error("".concat(W.name," is not a png file")),$||F.Upload.LIST_IGNORE},onChange:function(W){console.log(W.fileList)}},V=function(){return O.default.createElement(F.Upload,D,O.default.createElement(F.Button,{icon:O.default.createElement(R.UploadOutlined,null)},"Upload png only"))},M=V;return N.createElement(M)}}},4816:function(Y,kn,g){Y.exports={content:{"zh-CN":[["p","\u4F7F\u7528\u963F\u91CC\u4E91 OSS \u4E0A\u4F20\u793A\u4F8B."]],"en-US":[["p","Use Aliyun OSS upload example."]]},meta:{order:11,title:{"zh-CN":"\u963F\u91CC\u4E91 OSS","en-US":"Aliyun OSS"},filename:"components/upload/demo/upload-with-aliyun-oss.md",id:"components-upload-demo-upload-with-aliyun-oss"},toc:["ul",["li",["a",{className:"bisheng-toc-h2",href:"#zh-CN",title:"zh-CN"},"zh-CN"]],["li",["a",{className:"bisheng-toc-h2",href:"#en-US",title:"en-US"},"en-US"]]],highlightedCode:["pre",{lang:"tsx",highlighted:`import { UploadOutlined } from <span class="token string">'@ant-design/icons'</span><span class="token comment" spellcheck="true">;</span>
import type { UploadProps } from <span class="token string">'antd'</span><span class="token comment" spellcheck="true">;</span>
import { Button<span class="token punctuation">,</span> Form<span class="token punctuation">,</span> message<span class="token punctuation">,</span> Upload } from <span class="token string">'antd'</span><span class="token comment" spellcheck="true">;</span>
import type { UploadFile } from <span class="token string">'antd/es/upload/interface'</span><span class="token comment" spellcheck="true">;</span>
import React<span class="token punctuation">,</span> { useEffect<span class="token punctuation">,</span> useState } from <span class="token string">'react'</span><span class="token comment" spellcheck="true">;</span>

interface OSSDataType {
  dir<span class="token punctuation">:</span> string<span class="token comment" spellcheck="true">;</span>
  expire<span class="token punctuation">:</span> string<span class="token comment" spellcheck="true">;</span>
  host<span class="token punctuation">:</span> string<span class="token comment" spellcheck="true">;</span>
  accessId<span class="token punctuation">:</span> string<span class="token comment" spellcheck="true">;</span>
  policy<span class="token punctuation">:</span> string<span class="token comment" spellcheck="true">;</span>
  signature<span class="token punctuation">:</span> string<span class="token comment" spellcheck="true">;</span>
}

interface AliyunOSSUploadProps {
  value<span class="token operator">?</span><span class="token punctuation">:</span> UploadFile<span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token comment" spellcheck="true">;</span>
  onChange<span class="token operator">?</span><span class="token punctuation">:</span> <span class="token punctuation">(</span>fileList<span class="token punctuation">:</span> UploadFile<span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">)</span> <span class="token operator">=</span><span class="token operator">></span> void<span class="token comment" spellcheck="true">;</span>
}

<span class="token keyword">const</span> AliyunOSSUpload <span class="token operator">=</span> <span class="token punctuation">(</span>{ value<span class="token punctuation">,</span> onChange }<span class="token punctuation">:</span> AliyunOSSUploadProps<span class="token punctuation">)</span> <span class="token operator">=</span><span class="token operator">></span> {
  <span class="token keyword">const</span> <span class="token punctuation">[</span>OSSData<span class="token punctuation">,</span> setOSSData<span class="token punctuation">]</span> <span class="token operator">=</span> useState<span class="token operator">&lt;</span>OSSDataType<span class="token operator">></span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token comment" spellcheck="true">;</span>

  <span class="token operator">/</span><span class="token operator">/</span> Mock get OSS api
  <span class="token operator">/</span><span class="token operator">/</span> https<span class="token punctuation">:</span><span class="token operator">/</span><span class="token operator">/</span>help<span class="token punctuation">.</span>aliyun<span class="token punctuation">.</span>com<span class="token operator">/</span>document_detail<span class="token operator">/</span><span class="token number">31988</span><span class="token punctuation">.</span>html
  <span class="token keyword">const</span> mockGetOSSData <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=</span><span class="token operator">></span> <span class="token punctuation">(</span>{
    dir<span class="token punctuation">:</span> <span class="token string">'user-dir/'</span><span class="token punctuation">,</span>
    expire<span class="token punctuation">:</span> <span class="token string">'1577811661'</span><span class="token punctuation">,</span>
    host<span class="token punctuation">:</span> <span class="token string">'//www.mocky.io/v2/5cc8019d300000980a055e76'</span><span class="token punctuation">,</span>
    accessId<span class="token punctuation">:</span> <span class="token string">'c2hhb2RhaG9uZw=='</span><span class="token punctuation">,</span>
    policy<span class="token punctuation">:</span> <span class="token string">'eGl4aWhhaGFrdWt1ZGFkYQ=='</span><span class="token punctuation">,</span>
    signature<span class="token punctuation">:</span> <span class="token string">'ZGFob25nc2hhbw=='</span><span class="token punctuation">,</span>
  }<span class="token punctuation">)</span><span class="token comment" spellcheck="true">;</span>

  <span class="token keyword">const</span> init <span class="token operator">=</span> async <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=</span><span class="token operator">></span> {
    try {
      <span class="token keyword">const</span> result <span class="token operator">=</span> await <span class="token function">mockGetOSSData</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token comment" spellcheck="true">;</span>
      <span class="token function">setOSSData</span><span class="token punctuation">(</span>result<span class="token punctuation">)</span><span class="token comment" spellcheck="true">;</span>
    } catch <span class="token punctuation">(</span>error<span class="token punctuation">)</span> {
      message<span class="token punctuation">.</span><span class="token function">error</span><span class="token punctuation">(</span>error<span class="token punctuation">)</span><span class="token comment" spellcheck="true">;</span>
    }
  }<span class="token comment" spellcheck="true">;</span>

  <span class="token function">useEffect</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=</span><span class="token operator">></span> {
    <span class="token function">init</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token comment" spellcheck="true">;</span>
  }<span class="token punctuation">,</span> <span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token comment" spellcheck="true">;</span>

  <span class="token keyword">const</span> handleChange<span class="token punctuation">:</span> UploadProps<span class="token punctuation">[</span><span class="token string">'onChange'</span><span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token punctuation">(</span>{ fileList }<span class="token punctuation">)</span> <span class="token operator">=</span><span class="token operator">></span> {
    console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">'Aliyun OSS:'</span><span class="token punctuation">,</span> fileList<span class="token punctuation">)</span><span class="token comment" spellcheck="true">;</span>
    onChange<span class="token operator">?</span><span class="token punctuation">.</span><span class="token punctuation">(</span><span class="token punctuation">[</span><span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token punctuation">.</span>fileList<span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token comment" spellcheck="true">;</span>
  }<span class="token comment" spellcheck="true">;</span>

  <span class="token keyword">const</span> onRemove <span class="token operator">=</span> <span class="token punctuation">(</span>file<span class="token punctuation">:</span> UploadFile<span class="token punctuation">)</span> <span class="token operator">=</span><span class="token operator">></span> {
    <span class="token keyword">const</span> files <span class="token operator">=</span> <span class="token punctuation">(</span>value || <span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">filter</span><span class="token punctuation">(</span>v <span class="token operator">=</span><span class="token operator">></span> v<span class="token punctuation">.</span>url !<span class="token operator">==</span> file<span class="token punctuation">.</span>url<span class="token punctuation">)</span><span class="token comment" spellcheck="true">;</span>

    <span class="token keyword">if</span> <span class="token punctuation">(</span>onChange<span class="token punctuation">)</span> {
      <span class="token function">onChange</span><span class="token punctuation">(</span>files<span class="token punctuation">)</span><span class="token comment" spellcheck="true">;</span>
    }
  }<span class="token comment" spellcheck="true">;</span>

  <span class="token keyword">const</span> getExtraData<span class="token punctuation">:</span> UploadProps<span class="token punctuation">[</span><span class="token string">'data'</span><span class="token punctuation">]</span> <span class="token operator">=</span> file <span class="token operator">=</span><span class="token operator">></span> <span class="token punctuation">(</span>{
    key<span class="token punctuation">:</span> file<span class="token punctuation">.</span>url<span class="token punctuation">,</span>
    OSSAccessKeyId<span class="token punctuation">:</span> OSSData<span class="token operator">?</span><span class="token punctuation">.</span>accessId<span class="token punctuation">,</span>
    policy<span class="token punctuation">:</span> OSSData<span class="token operator">?</span><span class="token punctuation">.</span>policy<span class="token punctuation">,</span>
    Signature<span class="token punctuation">:</span> OSSData<span class="token operator">?</span><span class="token punctuation">.</span>signature<span class="token punctuation">,</span>
  }<span class="token punctuation">)</span><span class="token comment" spellcheck="true">;</span>

  <span class="token keyword">const</span> beforeUpload<span class="token punctuation">:</span> UploadProps<span class="token punctuation">[</span><span class="token string">'beforeUpload'</span><span class="token punctuation">]</span> <span class="token operator">=</span> async file <span class="token operator">=</span><span class="token operator">></span> {
    <span class="token keyword">if</span> <span class="token punctuation">(</span>!OSSData<span class="token punctuation">)</span> return <span class="token boolean">false</span><span class="token comment" spellcheck="true">;</span>

    <span class="token keyword">const</span> expire <span class="token operator">=</span> <span class="token function">Number</span><span class="token punctuation">(</span>OSSData<span class="token punctuation">.</span>expire<span class="token punctuation">)</span> <span class="token operator">*</span> <span class="token number">1000</span><span class="token comment" spellcheck="true">;</span>

    <span class="token keyword">if</span> <span class="token punctuation">(</span>expire <span class="token operator">&lt;</span> Date<span class="token punctuation">.</span><span class="token function">now</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span> {
      await <span class="token function">init</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token comment" spellcheck="true">;</span>
    }

    <span class="token keyword">const</span> suffix <span class="token operator">=</span> file<span class="token punctuation">.</span>name<span class="token punctuation">.</span><span class="token function">slice</span><span class="token punctuation">(</span>file<span class="token punctuation">.</span>name<span class="token punctuation">.</span><span class="token function">lastIndexOf</span><span class="token punctuation">(</span><span class="token string">'.'</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token comment" spellcheck="true">;</span>
    <span class="token keyword">const</span> filename <span class="token operator">=</span> Date<span class="token punctuation">.</span><span class="token function">now</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">+</span> suffix<span class="token comment" spellcheck="true">;</span>
    <span class="token operator">/</span><span class="token operator">/</span> <span class="token variable">@ts</span><span class="token operator">-</span>ignore
    file<span class="token punctuation">.</span>url <span class="token operator">=</span> OSSData<span class="token punctuation">.</span>dir <span class="token operator">+</span> filename<span class="token comment" spellcheck="true">;</span>

    return file<span class="token comment" spellcheck="true">;</span>
  }<span class="token comment" spellcheck="true">;</span>

  <span class="token keyword">const</span> uploadProps<span class="token punctuation">:</span> UploadProps <span class="token operator">=</span> {
    name<span class="token punctuation">:</span> <span class="token string">'file'</span><span class="token punctuation">,</span>
    fileList<span class="token punctuation">:</span> value<span class="token punctuation">,</span>
    action<span class="token punctuation">:</span> OSSData<span class="token operator">?</span><span class="token punctuation">.</span>host<span class="token punctuation">,</span>
    onChange<span class="token punctuation">:</span> handleChange<span class="token punctuation">,</span>
    onRemove<span class="token punctuation">,</span>
    data<span class="token punctuation">:</span> getExtraData<span class="token punctuation">,</span>
    beforeUpload<span class="token punctuation">,</span>
  }<span class="token comment" spellcheck="true">;</span>

  return <span class="token punctuation">(</span>
    <span class="token operator">&lt;</span>Upload {<span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token punctuation">.</span>uploadProps}<span class="token operator">></span>
      <span class="token operator">&lt;</span>Button icon<span class="token operator">=</span>{<span class="token operator">&lt;</span>UploadOutlined <span class="token operator">/</span><span class="token operator">></span>}<span class="token operator">></span>Click <span class="token keyword">to</span> Upload<span class="token operator">&lt;</span><span class="token operator">/</span>Button<span class="token operator">></span>
    <span class="token operator">&lt;</span><span class="token operator">/</span>Upload<span class="token operator">></span>
  <span class="token punctuation">)</span><span class="token comment" spellcheck="true">;</span>
}<span class="token comment" spellcheck="true">;</span>

<span class="token keyword">const</span> App<span class="token punctuation">:</span> React<span class="token punctuation">.</span>FC <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=</span><span class="token operator">></span> <span class="token punctuation">(</span>
  <span class="token operator">&lt;</span>Form labelCol<span class="token operator">=</span>{{ span<span class="token punctuation">:</span> <span class="token number">4</span> }}<span class="token operator">></span>
    <span class="token operator">&lt;</span>Form<span class="token punctuation">.</span>Item label<span class="token operator">=</span><span class="token string">"Photos"</span> name<span class="token operator">=</span><span class="token string">"photos"</span><span class="token operator">></span>
      <span class="token operator">&lt;</span>AliyunOSSUpload <span class="token operator">/</span><span class="token operator">></span>
    <span class="token operator">&lt;</span><span class="token operator">/</span>Form<span class="token punctuation">.</span>Item<span class="token operator">></span>
  <span class="token operator">&lt;</span><span class="token operator">/</span>Form<span class="token operator">></span>
<span class="token punctuation">)</span><span class="token comment" spellcheck="true">;</span>

export <span class="token keyword">default</span> App<span class="token comment" spellcheck="true">;</span>`}],highlightedCodes:{tsx:`<span class="token keyword">import</span> <span class="token punctuation">{</span> UploadOutlined <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">'@ant-design/icons'</span><span class="token punctuation">;</span>
<span class="token keyword">import</span> type <span class="token punctuation">{</span> UploadProps <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">'antd'</span><span class="token punctuation">;</span>
<span class="token keyword">import</span> <span class="token punctuation">{</span> Button<span class="token punctuation">,</span> Form<span class="token punctuation">,</span> message<span class="token punctuation">,</span> Upload <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">'antd'</span><span class="token punctuation">;</span>
<span class="token keyword">import</span> type <span class="token punctuation">{</span> UploadFile <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">'antd/es/upload/interface'</span><span class="token punctuation">;</span>
<span class="token keyword">import</span> React<span class="token punctuation">,</span> <span class="token punctuation">{</span> useEffect<span class="token punctuation">,</span> useState <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">'react'</span><span class="token punctuation">;</span>

<span class="token keyword">interface</span> <span class="token class-name">OSSDataType</span> <span class="token punctuation">{</span>
  dir<span class="token operator">:</span> string<span class="token punctuation">;</span>
  expire<span class="token operator">:</span> string<span class="token punctuation">;</span>
  host<span class="token operator">:</span> string<span class="token punctuation">;</span>
  accessId<span class="token operator">:</span> string<span class="token punctuation">;</span>
  policy<span class="token operator">:</span> string<span class="token punctuation">;</span>
  signature<span class="token operator">:</span> string<span class="token punctuation">;</span>
<span class="token punctuation">}</span>

<span class="token keyword">interface</span> <span class="token class-name">AliyunOSSUploadProps</span> <span class="token punctuation">{</span>
  value<span class="token operator">?</span><span class="token operator">:</span> UploadFile<span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">;</span>
  onChange<span class="token operator">?</span><span class="token operator">:</span> <span class="token punctuation">(</span>fileList<span class="token operator">:</span> UploadFile<span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">)</span> <span class="token operator">=></span> <span class="token keyword">void</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>

<span class="token keyword">const</span> <span class="token function-variable function">AliyunOSSUpload</span> <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token punctuation">{</span> value<span class="token punctuation">,</span> onChange <span class="token punctuation">}</span><span class="token operator">:</span> AliyunOSSUploadProps<span class="token punctuation">)</span> <span class="token operator">=></span> <span class="token punctuation">{</span>
  <span class="token keyword">const</span> <span class="token punctuation">[</span>OSSData<span class="token punctuation">,</span> setOSSData<span class="token punctuation">]</span> <span class="token operator">=</span> useState<span class="token operator">&lt;</span>OSSDataType<span class="token operator">></span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

  <span class="token comment">// Mock get OSS api</span>
  <span class="token comment">// https://help.aliyun.com/document_detail/31988.html</span>
  <span class="token keyword">const</span> <span class="token function-variable function">mockGetOSSData</span> <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=></span> <span class="token punctuation">(</span><span class="token punctuation">{</span>
    dir<span class="token operator">:</span> <span class="token string">'user-dir/'</span><span class="token punctuation">,</span>
    expire<span class="token operator">:</span> <span class="token string">'1577811661'</span><span class="token punctuation">,</span>
    host<span class="token operator">:</span> <span class="token string">'//www.mocky.io/v2/5cc8019d300000980a055e76'</span><span class="token punctuation">,</span>
    accessId<span class="token operator">:</span> <span class="token string">'c2hhb2RhaG9uZw=='</span><span class="token punctuation">,</span>
    policy<span class="token operator">:</span> <span class="token string">'eGl4aWhhaGFrdWt1ZGFkYQ=='</span><span class="token punctuation">,</span>
    signature<span class="token operator">:</span> <span class="token string">'ZGFob25nc2hhbw=='</span><span class="token punctuation">,</span>
  <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

  <span class="token keyword">const</span> <span class="token function-variable function">init</span> <span class="token operator">=</span> <span class="token keyword">async</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=></span> <span class="token punctuation">{</span>
    <span class="token keyword">try</span> <span class="token punctuation">{</span>
      <span class="token keyword">const</span> result <span class="token operator">=</span> <span class="token keyword">await</span> <span class="token function">mockGetOSSData</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
      <span class="token function">setOSSData</span><span class="token punctuation">(</span>result<span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span> <span class="token keyword">catch</span> <span class="token punctuation">(</span>error<span class="token punctuation">)</span> <span class="token punctuation">{</span>
      message<span class="token punctuation">.</span><span class="token function">error</span><span class="token punctuation">(</span>error<span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
  <span class="token punctuation">}</span><span class="token punctuation">;</span>

  <span class="token function">useEffect</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=></span> <span class="token punctuation">{</span>
    <span class="token function">init</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token punctuation">}</span><span class="token punctuation">,</span> <span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

  <span class="token keyword">const</span> handleChange<span class="token operator">:</span> UploadProps<span class="token punctuation">[</span><span class="token string">'onChange'</span><span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token punctuation">{</span> fileList <span class="token punctuation">}</span><span class="token punctuation">)</span> <span class="token operator">=></span> <span class="token punctuation">{</span>
    console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">'Aliyun OSS:'</span><span class="token punctuation">,</span> fileList<span class="token punctuation">)</span><span class="token punctuation">;</span>
    onChange<span class="token operator">?.</span><span class="token punctuation">(</span><span class="token punctuation">[</span><span class="token operator">...</span>fileList<span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token punctuation">}</span><span class="token punctuation">;</span>

  <span class="token keyword">const</span> <span class="token function-variable function">onRemove</span> <span class="token operator">=</span> <span class="token punctuation">(</span>file<span class="token operator">:</span> UploadFile<span class="token punctuation">)</span> <span class="token operator">=></span> <span class="token punctuation">{</span>
    <span class="token keyword">const</span> files <span class="token operator">=</span> <span class="token punctuation">(</span>value <span class="token operator">||</span> <span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">filter</span><span class="token punctuation">(</span>v <span class="token operator">=></span> v<span class="token punctuation">.</span>url <span class="token operator">!==</span> file<span class="token punctuation">.</span>url<span class="token punctuation">)</span><span class="token punctuation">;</span>

    <span class="token keyword">if</span> <span class="token punctuation">(</span>onChange<span class="token punctuation">)</span> <span class="token punctuation">{</span>
      <span class="token function">onChange</span><span class="token punctuation">(</span>files<span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
  <span class="token punctuation">}</span><span class="token punctuation">;</span>

  <span class="token keyword">const</span> getExtraData<span class="token operator">:</span> UploadProps<span class="token punctuation">[</span><span class="token string">'data'</span><span class="token punctuation">]</span> <span class="token operator">=</span> file <span class="token operator">=></span> <span class="token punctuation">(</span><span class="token punctuation">{</span>
    key<span class="token operator">:</span> file<span class="token punctuation">.</span>url<span class="token punctuation">,</span>
    OSSAccessKeyId<span class="token operator">:</span> OSSData<span class="token operator">?.</span>accessId<span class="token punctuation">,</span>
    policy<span class="token operator">:</span> OSSData<span class="token operator">?.</span>policy<span class="token punctuation">,</span>
    Signature<span class="token operator">:</span> OSSData<span class="token operator">?.</span>signature<span class="token punctuation">,</span>
  <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

  <span class="token keyword">const</span> beforeUpload<span class="token operator">:</span> UploadProps<span class="token punctuation">[</span><span class="token string">'beforeUpload'</span><span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token keyword">async</span> file <span class="token operator">=></span> <span class="token punctuation">{</span>
    <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token operator">!</span>OSSData<span class="token punctuation">)</span> <span class="token keyword">return</span> <span class="token boolean">false</span><span class="token punctuation">;</span>

    <span class="token keyword">const</span> expire <span class="token operator">=</span> <span class="token function">Number</span><span class="token punctuation">(</span>OSSData<span class="token punctuation">.</span>expire<span class="token punctuation">)</span> <span class="token operator">*</span> <span class="token number">1000</span><span class="token punctuation">;</span>

    <span class="token keyword">if</span> <span class="token punctuation">(</span>expire <span class="token operator">&lt;</span> Date<span class="token punctuation">.</span><span class="token function">now</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
      <span class="token keyword">await</span> <span class="token function">init</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>

    <span class="token keyword">const</span> suffix <span class="token operator">=</span> file<span class="token punctuation">.</span>name<span class="token punctuation">.</span><span class="token function">slice</span><span class="token punctuation">(</span>file<span class="token punctuation">.</span>name<span class="token punctuation">.</span><span class="token function">lastIndexOf</span><span class="token punctuation">(</span><span class="token string">'.'</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token keyword">const</span> filename <span class="token operator">=</span> Date<span class="token punctuation">.</span><span class="token function">now</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">+</span> suffix<span class="token punctuation">;</span>
    <span class="token comment">// @ts-ignore</span>
    file<span class="token punctuation">.</span>url <span class="token operator">=</span> OSSData<span class="token punctuation">.</span>dir <span class="token operator">+</span> filename<span class="token punctuation">;</span>

    <span class="token keyword">return</span> file<span class="token punctuation">;</span>
  <span class="token punctuation">}</span><span class="token punctuation">;</span>

  <span class="token keyword">const</span> uploadProps<span class="token operator">:</span> UploadProps <span class="token operator">=</span> <span class="token punctuation">{</span>
    name<span class="token operator">:</span> <span class="token string">'file'</span><span class="token punctuation">,</span>
    fileList<span class="token operator">:</span> value<span class="token punctuation">,</span>
    action<span class="token operator">:</span> OSSData<span class="token operator">?.</span>host<span class="token punctuation">,</span>
    onChange<span class="token operator">:</span> handleChange<span class="token punctuation">,</span>
    onRemove<span class="token punctuation">,</span>
    data<span class="token operator">:</span> getExtraData<span class="token punctuation">,</span>
    beforeUpload<span class="token punctuation">,</span>
  <span class="token punctuation">}</span><span class="token punctuation">;</span>

  <span class="token keyword">return</span> <span class="token punctuation">(</span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span><span class="token class-name">Upload</span></span> <span class="token spread"><span class="token punctuation">{</span><span class="token operator">...</span>uploadProps<span class="token punctuation">}</span></span><span class="token punctuation">></span></span>
      <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span><span class="token class-name">Button</span></span> <span class="token attr-name">icon</span><span class="token script language-javascript"><span class="token script-punctuation punctuation">=</span><span class="token punctuation">{</span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span><span class="token class-name">UploadOutlined</span></span> <span class="token punctuation">/></span></span><span class="token punctuation">}</span></span><span class="token punctuation">></span></span>Click to Upload<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span><span class="token class-name">Button</span></span><span class="token punctuation">></span></span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span><span class="token class-name">Upload</span></span><span class="token punctuation">></span></span>
  <span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span><span class="token punctuation">;</span>

<span class="token keyword">const</span> App<span class="token operator">:</span> React<span class="token punctuation">.</span><span class="token function-variable function">FC</span> <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=></span> <span class="token punctuation">(</span>
  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span><span class="token class-name">Form</span></span> <span class="token attr-name">labelCol</span><span class="token script language-javascript"><span class="token script-punctuation punctuation">=</span><span class="token punctuation">{</span><span class="token punctuation">{</span> span<span class="token operator">:</span> <span class="token number">4</span> <span class="token punctuation">}</span><span class="token punctuation">}</span></span><span class="token punctuation">></span></span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span><span class="token class-name">Form.Item</span></span> <span class="token attr-name">label</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>Photos<span class="token punctuation">"</span></span> <span class="token attr-name">name</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>photos<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>
      <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span><span class="token class-name">AliyunOSSUpload</span></span> <span class="token punctuation">/></span></span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span><span class="token class-name">Form.Item</span></span><span class="token punctuation">></span></span>
  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span><span class="token class-name">Form</span></span><span class="token punctuation">></span></span>
<span class="token punctuation">)</span><span class="token punctuation">;</span>

<span class="token keyword">export</span> <span class="token keyword">default</span> App<span class="token punctuation">;</span>`,jsx:`<span class="token keyword">import</span> <span class="token punctuation">{</span> UploadOutlined <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">'@ant-design/icons'</span><span class="token punctuation">;</span>
<span class="token keyword">import</span> <span class="token punctuation">{</span> Button<span class="token punctuation">,</span> Form<span class="token punctuation">,</span> message<span class="token punctuation">,</span> Upload <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">'antd'</span><span class="token punctuation">;</span>
<span class="token keyword">import</span> React<span class="token punctuation">,</span> <span class="token punctuation">{</span> useEffect<span class="token punctuation">,</span> useState <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">'react'</span><span class="token punctuation">;</span>
<span class="token keyword">const</span> <span class="token function-variable function">AliyunOSSUpload</span> <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token parameter"><span class="token punctuation">{</span> value<span class="token punctuation">,</span> onChange <span class="token punctuation">}</span></span><span class="token punctuation">)</span> <span class="token operator">=></span> <span class="token punctuation">{</span>
  <span class="token keyword">const</span> <span class="token punctuation">[</span>OSSData<span class="token punctuation">,</span> setOSSData<span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token function">useState</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

  <span class="token comment">// Mock get OSS api</span>
  <span class="token comment">// https://help.aliyun.com/document_detail/31988.html</span>
  <span class="token keyword">const</span> <span class="token function-variable function">mockGetOSSData</span> <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=></span> <span class="token punctuation">(</span><span class="token punctuation">{</span>
    <span class="token literal-property property">dir</span><span class="token operator">:</span> <span class="token string">'user-dir/'</span><span class="token punctuation">,</span>
    <span class="token literal-property property">expire</span><span class="token operator">:</span> <span class="token string">'1577811661'</span><span class="token punctuation">,</span>
    <span class="token literal-property property">host</span><span class="token operator">:</span> <span class="token string">'//www.mocky.io/v2/5cc8019d300000980a055e76'</span><span class="token punctuation">,</span>
    <span class="token literal-property property">accessId</span><span class="token operator">:</span> <span class="token string">'c2hhb2RhaG9uZw=='</span><span class="token punctuation">,</span>
    <span class="token literal-property property">policy</span><span class="token operator">:</span> <span class="token string">'eGl4aWhhaGFrdWt1ZGFkYQ=='</span><span class="token punctuation">,</span>
    <span class="token literal-property property">signature</span><span class="token operator">:</span> <span class="token string">'ZGFob25nc2hhbw=='</span><span class="token punctuation">,</span>
  <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token keyword">const</span> <span class="token function-variable function">init</span> <span class="token operator">=</span> <span class="token keyword">async</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=></span> <span class="token punctuation">{</span>
    <span class="token keyword">try</span> <span class="token punctuation">{</span>
      <span class="token keyword">const</span> result <span class="token operator">=</span> <span class="token keyword">await</span> <span class="token function">mockGetOSSData</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
      <span class="token function">setOSSData</span><span class="token punctuation">(</span>result<span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span> <span class="token keyword">catch</span> <span class="token punctuation">(</span>error<span class="token punctuation">)</span> <span class="token punctuation">{</span>
      message<span class="token punctuation">.</span><span class="token function">error</span><span class="token punctuation">(</span>error<span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
  <span class="token punctuation">}</span><span class="token punctuation">;</span>
  <span class="token function">useEffect</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=></span> <span class="token punctuation">{</span>
    <span class="token function">init</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token punctuation">}</span><span class="token punctuation">,</span> <span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token keyword">const</span> <span class="token function-variable function">handleChange</span> <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token parameter"><span class="token punctuation">{</span> fileList <span class="token punctuation">}</span></span><span class="token punctuation">)</span> <span class="token operator">=></span> <span class="token punctuation">{</span>
    console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">'Aliyun OSS:'</span><span class="token punctuation">,</span> fileList<span class="token punctuation">)</span><span class="token punctuation">;</span>
    onChange<span class="token operator">?.</span><span class="token punctuation">(</span><span class="token punctuation">[</span><span class="token operator">...</span>fileList<span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token punctuation">}</span><span class="token punctuation">;</span>
  <span class="token keyword">const</span> <span class="token function-variable function">onRemove</span> <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token parameter">file</span><span class="token punctuation">)</span> <span class="token operator">=></span> <span class="token punctuation">{</span>
    <span class="token keyword">const</span> files <span class="token operator">=</span> <span class="token punctuation">(</span>value <span class="token operator">||</span> <span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">filter</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token parameter">v</span><span class="token punctuation">)</span> <span class="token operator">=></span> v<span class="token punctuation">.</span>url <span class="token operator">!==</span> file<span class="token punctuation">.</span>url<span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token keyword">if</span> <span class="token punctuation">(</span>onChange<span class="token punctuation">)</span> <span class="token punctuation">{</span>
      <span class="token function">onChange</span><span class="token punctuation">(</span>files<span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
  <span class="token punctuation">}</span><span class="token punctuation">;</span>
  <span class="token keyword">const</span> <span class="token function-variable function">getExtraData</span> <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token parameter">file</span><span class="token punctuation">)</span> <span class="token operator">=></span> <span class="token punctuation">(</span><span class="token punctuation">{</span>
    <span class="token literal-property property">key</span><span class="token operator">:</span> file<span class="token punctuation">.</span>url<span class="token punctuation">,</span>
    <span class="token literal-property property">OSSAccessKeyId</span><span class="token operator">:</span> OSSData<span class="token operator">?.</span>accessId<span class="token punctuation">,</span>
    <span class="token literal-property property">policy</span><span class="token operator">:</span> OSSData<span class="token operator">?.</span>policy<span class="token punctuation">,</span>
    <span class="token literal-property property">Signature</span><span class="token operator">:</span> OSSData<span class="token operator">?.</span>signature<span class="token punctuation">,</span>
  <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token keyword">const</span> <span class="token function-variable function">beforeUpload</span> <span class="token operator">=</span> <span class="token keyword">async</span> <span class="token punctuation">(</span><span class="token parameter">file</span><span class="token punctuation">)</span> <span class="token operator">=></span> <span class="token punctuation">{</span>
    <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token operator">!</span>OSSData<span class="token punctuation">)</span> <span class="token keyword">return</span> <span class="token boolean">false</span><span class="token punctuation">;</span>
    <span class="token keyword">const</span> expire <span class="token operator">=</span> <span class="token function">Number</span><span class="token punctuation">(</span>OSSData<span class="token punctuation">.</span>expire<span class="token punctuation">)</span> <span class="token operator">*</span> <span class="token number">1000</span><span class="token punctuation">;</span>
    <span class="token keyword">if</span> <span class="token punctuation">(</span>expire <span class="token operator">&lt;</span> Date<span class="token punctuation">.</span><span class="token function">now</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
      <span class="token keyword">await</span> <span class="token function">init</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
    <span class="token keyword">const</span> suffix <span class="token operator">=</span> file<span class="token punctuation">.</span>name<span class="token punctuation">.</span><span class="token function">slice</span><span class="token punctuation">(</span>file<span class="token punctuation">.</span>name<span class="token punctuation">.</span><span class="token function">lastIndexOf</span><span class="token punctuation">(</span><span class="token string">'.'</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token keyword">const</span> filename <span class="token operator">=</span> Date<span class="token punctuation">.</span><span class="token function">now</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">+</span> suffix<span class="token punctuation">;</span>
    <span class="token comment">// @ts-ignore</span>
    file<span class="token punctuation">.</span>url <span class="token operator">=</span> OSSData<span class="token punctuation">.</span>dir <span class="token operator">+</span> filename<span class="token punctuation">;</span>
    <span class="token keyword">return</span> file<span class="token punctuation">;</span>
  <span class="token punctuation">}</span><span class="token punctuation">;</span>
  <span class="token keyword">const</span> uploadProps <span class="token operator">=</span> <span class="token punctuation">{</span>
    <span class="token literal-property property">name</span><span class="token operator">:</span> <span class="token string">'file'</span><span class="token punctuation">,</span>
    <span class="token literal-property property">fileList</span><span class="token operator">:</span> value<span class="token punctuation">,</span>
    <span class="token literal-property property">action</span><span class="token operator">:</span> OSSData<span class="token operator">?.</span>host<span class="token punctuation">,</span>
    <span class="token literal-property property">onChange</span><span class="token operator">:</span> handleChange<span class="token punctuation">,</span>
    onRemove<span class="token punctuation">,</span>
    <span class="token literal-property property">data</span><span class="token operator">:</span> getExtraData<span class="token punctuation">,</span>
    beforeUpload<span class="token punctuation">,</span>
  <span class="token punctuation">}</span><span class="token punctuation">;</span>
  <span class="token keyword">return</span> <span class="token punctuation">(</span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span><span class="token class-name">Upload</span></span> <span class="token spread"><span class="token punctuation">{</span><span class="token operator">...</span>uploadProps<span class="token punctuation">}</span></span><span class="token punctuation">></span></span>
      <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span><span class="token class-name">Button</span></span> <span class="token attr-name">icon</span><span class="token script language-javascript"><span class="token script-punctuation punctuation">=</span><span class="token punctuation">{</span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span><span class="token class-name">UploadOutlined</span></span> <span class="token punctuation">/></span></span><span class="token punctuation">}</span></span><span class="token punctuation">></span></span>Click to Upload<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span><span class="token class-name">Button</span></span><span class="token punctuation">></span></span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span><span class="token class-name">Upload</span></span><span class="token punctuation">></span></span>
  <span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span><span class="token punctuation">;</span>
<span class="token keyword">const</span> <span class="token function-variable function">App</span> <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=></span> <span class="token punctuation">(</span>
  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span><span class="token class-name">Form</span></span>
    <span class="token attr-name">labelCol</span><span class="token script language-javascript"><span class="token script-punctuation punctuation">=</span><span class="token punctuation">{</span><span class="token punctuation">{</span>
      <span class="token literal-property property">span</span><span class="token operator">:</span> <span class="token number">4</span><span class="token punctuation">,</span>
    <span class="token punctuation">}</span><span class="token punctuation">}</span></span>
  <span class="token punctuation">></span></span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span><span class="token class-name">Form.Item</span></span> <span class="token attr-name">label</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>Photos<span class="token punctuation">"</span></span> <span class="token attr-name">name</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>photos<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>
      <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span><span class="token class-name">AliyunOSSUpload</span></span> <span class="token punctuation">/></span></span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span><span class="token class-name">Form.Item</span></span><span class="token punctuation">></span></span>
  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span><span class="token class-name">Form</span></span><span class="token punctuation">></span></span>
<span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token keyword">export</span> <span class="token keyword">default</span> App<span class="token punctuation">;</span>
`},preview:function(){var N=g(0),H=g(47);function R(e){return R=typeof Symbol=="function"&&typeof Symbol.iterator=="symbol"?function(d){return typeof d}:function(d){return d&&typeof Symbol=="function"&&d.constructor===Symbol&&d!==Symbol.prototype?"symbol":typeof d},R(e)}var F=g(61),O=g(12),S=V(g(0));function D(e){if(typeof WeakMap!="function")return null;var d=new WeakMap,m=new WeakMap;return(D=function(U){return U?m:d})(e)}function V(e,d){if(!d&&e&&e.__esModule)return e;if(e===null||R(e)!=="object"&&typeof e!="function")return{default:e};var m=D(d);if(m&&m.has(e))return m.get(e);var b={},U=Object.defineProperty&&Object.getOwnPropertyDescriptor;for(var E in e)if(E!=="default"&&Object.prototype.hasOwnProperty.call(e,E)){var L=U?Object.getOwnPropertyDescriptor(e,E):null;L&&(L.get||L.set)?Object.defineProperty(b,E,L):b[E]=e[E]}return b.default=e,m&&m.set(e,b),b}function M(e){return $(e)||W(e)||dn(e)||C()}function C(){throw new TypeError(`Invalid attempt to spread non-iterable instance.
In order to be iterable, non-array objects must have a [Symbol.iterator]() method.`)}function W(e){if(typeof Symbol!="undefined"&&e[Symbol.iterator]!=null||e["@@iterator"]!=null)return Array.from(e)}function $(e){if(Array.isArray(e))return z(e)}function nn(){"use strict";/*! regenerator-runtime -- Copyright (c) 2014-present, Facebook, Inc. -- license (MIT): https://github.com/facebook/regenerator/blob/main/LICENSE */nn=function(){return e};var e={},d=Object.prototype,m=d.hasOwnProperty,b=Object.defineProperty||function(k,c,y){k[c]=y.value},U=typeof Symbol=="function"?Symbol:{},E=U.iterator||"@@iterator",L=U.asyncIterator||"@@asyncIterator",I=U.toStringTag||"@@toStringTag";function Z(k,c,y){return Object.defineProperty(k,c,{value:y,enumerable:!0,configurable:!0,writable:!0}),k[c]}try{Z({},"")}catch(k){Z=function(y,P,j){return y[P]=j}}function cn(k,c,y,P){var j=c&&c.prototype instanceof yn?c:yn,B=Object.create(j.prototype),q=new p(P||[]);return b(B,"_invoke",{value:On(k,y,q)}),B}function K(k,c,y){try{return{type:"normal",arg:k.call(c,y)}}catch(P){return{type:"throw",arg:P}}}e.wrap=cn;var rn={};function yn(){}function wn(){}function on(){}var fn={};Z(fn,E,function(){return this});var X=Object.getPrototypeOf,ln=X&&X(X(o([])));ln&&ln!==d&&m.call(ln,E)&&(fn=ln);var en=on.prototype=yn.prototype=Object.create(fn);function an(k){["next","throw","return"].forEach(function(c){Z(k,c,function(y){return this._invoke(c,y)})})}function Pn(k,c){function y(j,B,q,tn){var Ln=K(k[j],k,B);if(Ln.type!=="throw"){var En=Ln.arg,jn=En.value;return jn&&R(jn)=="object"&&m.call(jn,"__await")?c.resolve(jn.__await).then(function(Dn){y("next",Dn,q,tn)},function(Dn){y("throw",Dn,q,tn)}):c.resolve(jn).then(function(Dn){En.value=Dn,q(En)},function(Dn){return y("throw",Dn,q,tn)})}tn(Ln.arg)}var P;b(this,"_invoke",{value:function(B,q){function tn(){return new c(function(Ln,En){y(B,q,Ln,En)})}return P=P?P.then(tn,tn):tn()}})}function On(k,c,y){var P="suspendedStart";return function(j,B){if(P==="executing")throw new Error("Generator is already running");if(P==="completed"){if(j==="throw")throw B;return h()}for(y.method=j,y.arg=B;;){var q=y.delegate;if(q){var tn=vn(q,y);if(tn){if(tn===rn)continue;return tn}}if(y.method==="next")y.sent=y._sent=y.arg;else if(y.method==="throw"){if(P==="suspendedStart")throw P="completed",y.arg;y.dispatchException(y.arg)}else y.method==="return"&&y.abrupt("return",y.arg);P="executing";var Ln=K(k,c,y);if(Ln.type==="normal"){if(P=y.done?"completed":"suspendedYield",Ln.arg===rn)continue;return{value:Ln.arg,done:y.done}}Ln.type==="throw"&&(P="completed",y.method="throw",y.arg=Ln.arg)}}}function vn(k,c){var y=c.method,P=k.iterator[y];if(P===void 0)return c.delegate=null,y==="throw"&&k.iterator.return&&(c.method="return",c.arg=void 0,vn(k,c),c.method==="throw")||y!=="return"&&(c.method="throw",c.arg=new TypeError("The iterator does not provide a '"+y+"' method")),rn;var j=K(P,k.iterator,c.arg);if(j.type==="throw")return c.method="throw",c.arg=j.arg,c.delegate=null,rn;var B=j.arg;return B?B.done?(c[k.resultName]=B.value,c.next=k.nextLoc,c.method!=="return"&&(c.method="next",c.arg=void 0),c.delegate=null,rn):B:(c.method="throw",c.arg=new TypeError("iterator result is not an object"),c.delegate=null,rn)}function Tn(k){var c={tryLoc:k[0]};1 in k&&(c.catchLoc=k[1]),2 in k&&(c.finallyLoc=k[2],c.afterLoc=k[3]),this.tryEntries.push(c)}function i(k){var c=k.completion||{};c.type="normal",delete c.arg,k.completion=c}function p(k){this.tryEntries=[{tryLoc:"root"}],k.forEach(Tn,this),this.reset(!0)}function o(k){if(k){var c=k[E];if(c)return c.call(k);if(typeof k.next=="function")return k;if(!isNaN(k.length)){var y=-1,P=function j(){for(;++y<k.length;)if(m.call(k,y))return j.value=k[y],j.done=!1,j;return j.value=void 0,j.done=!0,j};return P.next=P}}return{next:h}}function h(){return{value:void 0,done:!0}}return wn.prototype=on,b(en,"constructor",{value:on,configurable:!0}),b(on,"constructor",{value:wn,configurable:!0}),wn.displayName=Z(on,I,"GeneratorFunction"),e.isGeneratorFunction=function(k){var c=typeof k=="function"&&k.constructor;return!!c&&(c===wn||(c.displayName||c.name)==="GeneratorFunction")},e.mark=function(k){return Object.setPrototypeOf?Object.setPrototypeOf(k,on):(k.__proto__=on,Z(k,I,"GeneratorFunction")),k.prototype=Object.create(en),k},e.awrap=function(k){return{__await:k}},an(Pn.prototype),Z(Pn.prototype,L,function(){return this}),e.AsyncIterator=Pn,e.async=function(k,c,y,P,j){j===void 0&&(j=Promise);var B=new Pn(cn(k,c,y,P),j);return e.isGeneratorFunction(c)?B:B.next().then(function(q){return q.done?q.value:B.next()})},an(en),Z(en,I,"Generator"),Z(en,E,function(){return this}),Z(en,"toString",function(){return"[object Generator]"}),e.keys=function(k){var c=Object(k),y=[];for(var P in c)y.push(P);return y.reverse(),function j(){for(;y.length;){var B=y.pop();if(B in c)return j.value=B,j.done=!1,j}return j.done=!0,j}},e.values=o,p.prototype={constructor:p,reset:function(c){if(this.prev=0,this.next=0,this.sent=this._sent=void 0,this.done=!1,this.delegate=null,this.method="next",this.arg=void 0,this.tryEntries.forEach(i),!c)for(var y in this)y.charAt(0)==="t"&&m.call(this,y)&&!isNaN(+y.slice(1))&&(this[y]=void 0)},stop:function(){this.done=!0;var c=this.tryEntries[0].completion;if(c.type==="throw")throw c.arg;return this.rval},dispatchException:function(c){if(this.done)throw c;var y=this;function P(En,jn){return q.type="throw",q.arg=c,y.next=En,jn&&(y.method="next",y.arg=void 0),!!jn}for(var j=this.tryEntries.length-1;j>=0;--j){var B=this.tryEntries[j],q=B.completion;if(B.tryLoc==="root")return P("end");if(B.tryLoc<=this.prev){var tn=m.call(B,"catchLoc"),Ln=m.call(B,"finallyLoc");if(tn&&Ln){if(this.prev<B.catchLoc)return P(B.catchLoc,!0);if(this.prev<B.finallyLoc)return P(B.finallyLoc)}else if(tn){if(this.prev<B.catchLoc)return P(B.catchLoc,!0)}else{if(!Ln)throw new Error("try statement without catch or finally");if(this.prev<B.finallyLoc)return P(B.finallyLoc)}}}},abrupt:function(c,y){for(var P=this.tryEntries.length-1;P>=0;--P){var j=this.tryEntries[P];if(j.tryLoc<=this.prev&&m.call(j,"finallyLoc")&&this.prev<j.finallyLoc){var B=j;break}}B&&(c==="break"||c==="continue")&&B.tryLoc<=y&&y<=B.finallyLoc&&(B=null);var q=B?B.completion:{};return q.type=c,q.arg=y,B?(this.method="next",this.next=B.finallyLoc,rn):this.complete(q)},complete:function(c,y){if(c.type==="throw")throw c.arg;return c.type==="break"||c.type==="continue"?this.next=c.arg:c.type==="return"?(this.rval=this.arg=c.arg,this.method="return",this.next="end"):c.type==="normal"&&y&&(this.next=y),rn},finish:function(c){for(var y=this.tryEntries.length-1;y>=0;--y){var P=this.tryEntries[y];if(P.finallyLoc===c)return this.complete(P.completion,P.afterLoc),i(P),rn}},catch:function(c){for(var y=this.tryEntries.length-1;y>=0;--y){var P=this.tryEntries[y];if(P.tryLoc===c){var j=P.completion;if(j.type==="throw"){var B=j.arg;i(P)}return B}}throw new Error("illegal catch attempt")},delegateYield:function(c,y,P){return this.delegate={iterator:o(c),resultName:y,nextLoc:P},this.method==="next"&&(this.arg=void 0),rn}},e}function hn(e,d,m,b,U,E,L){try{var I=e[E](L),Z=I.value}catch(cn){m(cn);return}I.done?d(Z):Promise.resolve(Z).then(b,U)}function _(e){return function(){var d=this,m=arguments;return new Promise(function(b,U){var E=e.apply(d,m);function L(Z){hn(E,b,U,L,I,"next",Z)}function I(Z){hn(E,b,U,L,I,"throw",Z)}L(void 0)})}}function mn(e,d){return t(e)||J(e,d)||dn(e,d)||pn()}function pn(){throw new TypeError(`Invalid attempt to destructure non-iterable instance.
In order to be iterable, non-array objects must have a [Symbol.iterator]() method.`)}function dn(e,d){if(e){if(typeof e=="string")return z(e,d);var m=Object.prototype.toString.call(e).slice(8,-1);if(m==="Object"&&e.constructor&&(m=e.constructor.name),m==="Map"||m==="Set")return Array.from(e);if(m==="Arguments"||/^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(m))return z(e,d)}}function z(e,d){(d==null||d>e.length)&&(d=e.length);for(var m=0,b=new Array(d);m<d;m++)b[m]=e[m];return b}function J(e,d){var m=e==null?null:typeof Symbol!="undefined"&&e[Symbol.iterator]||e["@@iterator"];if(m!=null){var b,U,E,L,I=[],Z=!0,cn=!1;try{if(E=(m=m.call(e)).next,d===0){if(Object(m)!==m)return;Z=!1}else for(;!(Z=(b=E.call(m)).done)&&(I.push(b.value),I.length!==d);Z=!0);}catch(K){cn=!0,U=K}finally{try{if(!Z&&m.return!=null&&(L=m.return(),Object(L)!==L))return}finally{if(cn)throw U}}return I}}function t(e){if(Array.isArray(e))return e}var a=function(d){var m=d.value,b=d.onChange,U=(0,S.useState)(),E=mn(U,2),L=E[0],I=E[1],Z=function(){return{dir:"user-dir/",expire:"1577811661",host:"//www.mocky.io/v2/5cc8019d300000980a055e76",accessId:"c2hhb2RhaG9uZw==",policy:"eGl4aWhhaGFrdWt1ZGFkYQ==",signature:"ZGFob25nc2hhbw=="}},cn=function(){var fn=_(nn().mark(function X(){var ln;return nn().wrap(function(an){for(;;)switch(an.prev=an.next){case 0:return an.prev=0,an.next=3,Z();case 3:ln=an.sent,I(ln),an.next=10;break;case 7:an.prev=7,an.t0=an.catch(0),O.message.error(an.t0);case 10:case"end":return an.stop()}},X,null,[[0,7]])}));return function(){return fn.apply(this,arguments)}}();(0,S.useEffect)(function(){cn()},[]);var K=function(X){var ln=X.fileList;console.log("Aliyun OSS:",ln),b==null||b(M(ln))},rn=function(X){var ln=(m||[]).filter(function(en){return en.url!==X.url});b&&b(ln)},yn=function(X){return{key:X.url,OSSAccessKeyId:L==null?void 0:L.accessId,policy:L==null?void 0:L.policy,Signature:L==null?void 0:L.signature}},wn=function(){var fn=_(nn().mark(function X(ln){var en,an,Pn;return nn().wrap(function(vn){for(;;)switch(vn.prev=vn.next){case 0:if(L){vn.next=2;break}return vn.abrupt("return",!1);case 2:if(en=Number(L.expire)*1e3,!(en<Date.now())){vn.next=6;break}return vn.next=6,cn();case 6:return an=ln.name.slice(ln.name.lastIndexOf(".")),Pn=Date.now()+an,ln.url=L.dir+Pn,vn.abrupt("return",ln);case 10:case"end":return vn.stop()}},X)}));return function(ln){return fn.apply(this,arguments)}}(),on={name:"file",fileList:m,action:L==null?void 0:L.host,onChange:K,onRemove:rn,data:yn,beforeUpload:wn};return S.default.createElement(O.Upload,on,S.default.createElement(O.Button,{icon:S.default.createElement(F.UploadOutlined,null)},"Click to Upload"))},s=function(){return S.default.createElement(O.Form,{labelCol:{span:4}},S.default.createElement(O.Form.Item,{label:"Photos",name:"photos"},S.default.createElement(a,null)))},u=s;return N.createElement(u)}}},4863:function(Y,kn,g){"use strict";g.r(kn),g.d(kn,"default",function(){return As});var sn=g(22),N=g(4086),H=g(0),R=g.n(H),F=g(12),O=g(391),S=g(505);const D=(r,f)=>{const n=$(r),l=$(f),v=n.pop(),w=l.pop(),x=pn(n,l);return x!==0?x:v&&w?pn(v.split("."),w.split(".")):v||w?v?-1:1:0},V=r=>typeof r=="string"&&/^[v\d]/.test(r)&&W.test(r),M=(r,f,n)=>{J(n);const l=D(r,f);return dn[n].includes(l)},C=(r,f)=>{if(f.includes("||"))return f.split("||").some(Cn=>C(r,Cn));if(f.includes(" "))return f.trim().replace(/\s{2,}/g," ").split(" ").every(Cn=>C(r,Cn));const n=f.match(/^([<>=~^]+)/),l=n?n[1]:"=";if(l!=="^"&&l!=="~")return M(r,f,l);const[v,w,x,,T]=$(r),[G,A,Q,,gn]=$(f),un=[v,w,x],Sn=[G,A!=null?A:"x",Q!=null?Q:"x"];if(gn&&(!T||pn(un,Sn)!==0||pn(T.split("."),gn.split("."))===-1))return!1;const bn=Sn.findIndex(Cn=>Cn!=="0")+1,Un=l==="~"?2:bn>1?bn:1;return!(pn(un.slice(0,Un),Sn.slice(0,Un))!==0||pn(un.slice(Un),Sn.slice(Un))===-1)},W=/^[v^~<>=]*?(\d+)(?:\.([x*]|\d+)(?:\.([x*]|\d+)(?:\.([x*]|\d+))?(?:-([\da-z\-]+(?:\.[\da-z\-]+)*))?(?:\+[\da-z\-]+(?:\.[\da-z\-]+)*)?)?)?$/i,$=r=>{if(typeof r!="string")throw new TypeError("Invalid argument expected string");const f=r.match(W);if(!f)throw new Error(`Invalid argument not valid semver ('${r}' received)`);return f.shift(),f},nn=r=>r==="*"||r==="x"||r==="X",hn=r=>{const f=parseInt(r,10);return isNaN(f)?r:f},_=(r,f)=>typeof r!=typeof f?[String(r),String(f)]:[r,f],mn=(r,f)=>{if(nn(r)||nn(f))return 0;const[n,l]=_(hn(r),hn(f));return n>l?1:n<l?-1:0},pn=(r,f)=>{for(let n=0;n<Math.max(r.length,f.length);n++){const l=mn(r[n]||"0",f[n]||"0");if(l!==0)return l}return 0},dn={">":[1],">=":[0,1],"=":[0],"<=":[-1,0],"<":[-1]},z=Object.keys(dn),J=r=>{if(typeof r!="string")throw new TypeError(`Invalid operator type, expected string but got ${typeof r}`);if(z.indexOf(r)===-1)throw new Error(`Invalid operator, expected one of ${z.join("|")}`)};/*! *****************************************************************************
Copyright (c) Microsoft Corporation.

Permission to use, copy, modify, and/or distribute this software for any
purpose with or without fee is hereby granted.

THE SOFTWARE IS PROVIDED "AS IS" AND THE AUTHOR DISCLAIMS ALL WARRANTIES WITH
REGARD TO THIS SOFTWARE INCLUDING ALL IMPLIED WARRANTIES OF MERCHANTABILITY
AND FITNESS. IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR ANY SPECIAL, DIRECT,
INDIRECT, OR CONSEQUENTIAL DAMAGES OR ANY DAMAGES WHATSOEVER RESULTING FROM
LOSS OF USE, DATA OR PROFITS, WHETHER IN AN ACTION OF CONTRACT, NEGLIGENCE OR
OTHER TORTIOUS ACTION, ARISING OUT OF OR IN CONNECTION WITH THE USE OR
PERFORMANCE OF THIS SOFTWARE.
***************************************************************************** */var t=function(r,f){return t=Object.setPrototypeOf||{__proto__:[]}instanceof Array&&function(n,l){n.__proto__=l}||function(n,l){for(var v in l)Object.prototype.hasOwnProperty.call(l,v)&&(n[v]=l[v])},t(r,f)};function a(r,f){t(r,f);function n(){this.constructor=r}r.prototype=f===null?Object.create(f):(n.prototype=f.prototype,new n)}var s=function(){return s=Object.assign||function(f){for(var n,l=1,v=arguments.length;l<v;l++){n=arguments[l];for(var w in n)Object.prototype.hasOwnProperty.call(n,w)&&(f[w]=n[w])}return f},s.apply(this,arguments)};function u(r,f){var n={};for(var l in r)Object.prototype.hasOwnProperty.call(r,l)&&f.indexOf(l)<0&&(n[l]=r[l]);if(r!=null&&typeof Object.getOwnPropertySymbols=="function")for(var v=0,l=Object.getOwnPropertySymbols(r);v<l.length;v++)f.indexOf(l[v])<0&&Object.prototype.propertyIsEnumerable.call(r,l[v])&&(n[l[v]]=r[l[v]]);return n}function e(r,f,n,l){var v=arguments.length,w=v<3?f:l===null?l=Object.getOwnPropertyDescriptor(f,n):l,x;if(typeof Reflect=="object"&&typeof Reflect.decorate=="function")w=Reflect.decorate(r,f,n,l);else for(var T=r.length-1;T>=0;T--)(x=r[T])&&(w=(v<3?x(w):v>3?x(f,n,w):x(f,n))||w);return v>3&&w&&Object.defineProperty(f,n,w),w}function d(r,f){return function(n,l){f(n,l,r)}}function m(r,f){if(typeof Reflect=="object"&&typeof Reflect.metadata=="function")return Reflect.metadata(r,f)}function b(r,f,n,l){function v(w){return w instanceof n?w:new n(function(x){x(w)})}return new(n||(n=Promise))(function(w,x){function T(Q){try{A(l.next(Q))}catch(gn){x(gn)}}function G(Q){try{A(l.throw(Q))}catch(gn){x(gn)}}function A(Q){Q.done?w(Q.value):v(Q.value).then(T,G)}A((l=l.apply(r,f||[])).next())})}function U(r,f){var n={label:0,sent:function(){if(w[0]&1)throw w[1];return w[1]},trys:[],ops:[]},l,v,w,x;return x={next:T(0),throw:T(1),return:T(2)},typeof Symbol=="function"&&(x[Symbol.iterator]=function(){return this}),x;function T(A){return function(Q){return G([A,Q])}}function G(A){if(l)throw new TypeError("Generator is already executing.");for(;n;)try{if(l=1,v&&(w=A[0]&2?v.return:A[0]?v.throw||((w=v.return)&&w.call(v),0):v.next)&&!(w=w.call(v,A[1])).done)return w;switch(v=0,w&&(A=[A[0]&2,w.value]),A[0]){case 0:case 1:w=A;break;case 4:return n.label++,{value:A[1],done:!1};case 5:n.label++,v=A[1],A=[0];continue;case 7:A=n.ops.pop(),n.trys.pop();continue;default:if(w=n.trys,!(w=w.length>0&&w[w.length-1])&&(A[0]===6||A[0]===2)){n=0;continue}if(A[0]===3&&(!w||A[1]>w[0]&&A[1]<w[3])){n.label=A[1];break}if(A[0]===6&&n.label<w[1]){n.label=w[1],w=A;break}if(w&&n.label<w[2]){n.label=w[2],n.ops.push(A);break}w[2]&&n.ops.pop(),n.trys.pop();continue}A=f.call(r,n)}catch(Q){A=[6,Q],v=0}finally{l=w=0}if(A[0]&5)throw A[1];return{value:A[0]?A[1]:void 0,done:!0}}}var E=Object.create?function(r,f,n,l){l===void 0&&(l=n),Object.defineProperty(r,l,{enumerable:!0,get:function(){return f[n]}})}:function(r,f,n,l){l===void 0&&(l=n),r[l]=f[n]};function L(r,f){for(var n in r)n!=="default"&&!Object.prototype.hasOwnProperty.call(f,n)&&E(f,r,n)}function I(r){var f=typeof Symbol=="function"&&Symbol.iterator,n=f&&r[f],l=0;if(n)return n.call(r);if(r&&typeof r.length=="number")return{next:function(){return r&&l>=r.length&&(r=void 0),{value:r&&r[l++],done:!r}}};throw new TypeError(f?"Object is not iterable.":"Symbol.iterator is not defined.")}function Z(r,f){var n=typeof Symbol=="function"&&r[Symbol.iterator];if(!n)return r;var l=n.call(r),v,w=[],x;try{for(;(f===void 0||f-- >0)&&!(v=l.next()).done;)w.push(v.value)}catch(T){x={error:T}}finally{try{v&&!v.done&&(n=l.return)&&n.call(l)}finally{if(x)throw x.error}}return w}function cn(){for(var r=[],f=0;f<arguments.length;f++)r=r.concat(Z(arguments[f]));return r}function K(){for(var r=0,f=0,n=arguments.length;f<n;f++)r+=arguments[f].length;for(var l=Array(r),v=0,f=0;f<n;f++)for(var w=arguments[f],x=0,T=w.length;x<T;x++,v++)l[v]=w[x];return l}function rn(r){return this instanceof rn?(this.v=r,this):new rn(r)}function yn(r,f,n){if(!Symbol.asyncIterator)throw new TypeError("Symbol.asyncIterator is not defined.");var l=n.apply(r,f||[]),v,w=[];return v={},x("next"),x("throw"),x("return"),v[Symbol.asyncIterator]=function(){return this},v;function x(un){l[un]&&(v[un]=function(Sn){return new Promise(function(bn,Un){w.push([un,Sn,bn,Un])>1||T(un,Sn)})})}function T(un,Sn){try{G(l[un](Sn))}catch(bn){gn(w[0][3],bn)}}function G(un){un.value instanceof rn?Promise.resolve(un.value.v).then(A,Q):gn(w[0][2],un)}function A(un){T("next",un)}function Q(un){T("throw",un)}function gn(un,Sn){un(Sn),w.shift(),w.length&&T(w[0][0],w[0][1])}}function wn(r){var f,n;return f={},l("next"),l("throw",function(v){throw v}),l("return"),f[Symbol.iterator]=function(){return this},f;function l(v,w){f[v]=r[v]?function(x){return(n=!n)?{value:rn(r[v](x)),done:v==="return"}:w?w(x):x}:w}}function on(r){if(!Symbol.asyncIterator)throw new TypeError("Symbol.asyncIterator is not defined.");var f=r[Symbol.asyncIterator],n;return f?f.call(r):(r=typeof I=="function"?I(r):r[Symbol.iterator](),n={},l("next"),l("throw"),l("return"),n[Symbol.asyncIterator]=function(){return this},n);function l(w){n[w]=r[w]&&function(x){return new Promise(function(T,G){x=r[w](x),v(T,G,x.done,x.value)})}}function v(w,x,T,G){Promise.resolve(G).then(function(A){w({value:A,done:T})},x)}}function fn(r,f){return Object.defineProperty?Object.defineProperty(r,"raw",{value:f}):r.raw=f,r}var X=Object.create?function(r,f){Object.defineProperty(r,"default",{enumerable:!0,value:f})}:function(r,f){r.default=f};function ln(r){if(r&&r.__esModule)return r;var f={};if(r!=null)for(var n in r)n!=="default"&&Object.prototype.hasOwnProperty.call(r,n)&&E(f,r,n);return X(f,r),f}function en(r){return r&&r.__esModule?r:{default:r}}function an(r,f){if(!f.has(r))throw new TypeError("attempted to get private field on non-instance");return f.get(r)}function Pn(r,f,n){if(!f.has(r))throw new TypeError("attempted to set private field on non-instance");return f.set(r,n),n}var On=g(4796),vn=g.n(On);function Tn(r,f,n,l,v,w){w===void 0&&(w=0);var x=En(r,f,w),T=x.width,G=x.height,A=Math.min(T,n),Q=Math.min(G,l);return A>Q*v?{width:Q*v,height:Q}:{width:A,height:A/v}}function i(r){return r.width>r.height?r.width/r.naturalWidth:r.height/r.naturalHeight}function p(r,f,n,l,v){v===void 0&&(v=0);var w=En(f.width,f.height,v),x=w.width,T=w.height;return{x:o(r.x,x,n.width,l),y:o(r.y,T,n.height,l)}}function o(r,f,n,l){var v=f*l/2-n/2;return jn(r,-v,v)}function h(r,f){return Math.sqrt(Math.pow(r.y-f.y,2)+Math.pow(r.x-f.x,2))}function k(r,f){return Math.atan2(f.y-r.y,f.x-r.x)*180/Math.PI}function c(r,f,n,l,v,w,x){w===void 0&&(w=0),x===void 0&&(x=!0);var T=x?y:P,G=En(f.width,f.height,w),A=En(f.naturalWidth,f.naturalHeight,w),Q={x:T(100,((G.width-n.width/v)/2-r.x/v)/G.width*100),y:T(100,((G.height-n.height/v)/2-r.y/v)/G.height*100),width:T(100,n.width/G.width*100/v),height:T(100,n.height/G.height*100/v)},gn=Math.round(T(A.width,Q.width*A.width/100)),un=Math.round(T(A.height,Q.height*A.height/100)),Sn=A.width>=A.height*l,bn=Sn?{width:Math.round(un*l),height:un}:{width:gn,height:Math.round(gn/l)},Un=s(s({},bn),{x:Math.round(T(A.width-bn.width,Q.x*A.width/100)),y:Math.round(T(A.height-bn.height,Q.y*A.height/100))});return{croppedAreaPercentages:Q,croppedAreaPixels:Un}}function y(r,f){return Math.min(r,Math.max(0,f))}function P(r,f){return f}function j(r,f,n,l,v,w){var x=En(f.width,f.height,n),T=jn(l.width/x.width*(100/r.width),v,w),G={x:T*x.width/2-l.width/2-x.width*T*(r.x/100),y:T*x.height/2-l.height/2-x.height*T*(r.y/100)};return{crop:G,zoom:T}}function B(r,f,n){var l=i(f);return n.height>n.width?n.height/(r.height*l):n.width/(r.width*l)}function q(r,f,n,l,v,w){n===void 0&&(n=0);var x=En(f.naturalWidth,f.naturalHeight,n),T=jn(B(r,f,l),v,w),G=l.height>l.width?l.height/r.height:l.width/r.width,A={x:((x.width-r.width)/2-r.x)*G,y:((x.height-r.height)/2-r.y)*G};return{crop:A,zoom:T}}function tn(r,f){return{x:(f.x+r.x)/2,y:(f.y+r.y)/2}}function Ln(r){return r*Math.PI/180}function En(r,f,n){var l=Ln(n);return{width:Math.abs(Math.cos(l)*r)+Math.abs(Math.sin(l)*f),height:Math.abs(Math.sin(l)*r)+Math.abs(Math.cos(l)*f)}}function jn(r,f,n){return Math.min(Math.max(r,f),n)}function Dn(){for(var r=[],f=0;f<arguments.length;f++)r[f]=arguments[f];return r.filter(function(n){return typeof n=="string"&&n.length>0}).join(" ").trim()}var Cs=`.reactEasyCrop_Container {
  position: absolute;
  top: 0;
  left: 0;
  right: 0;
  bottom: 0;
  overflow: hidden;
  user-select: none;
  touch-action: none;
  cursor: move;
  display: flex;
  justify-content: center;
  align-items: center;
}

.reactEasyCrop_Image,
.reactEasyCrop_Video {
  will-change: transform; /* this improves performances and prevent painting issues on iOS Chrome */
}

.reactEasyCrop_Contain {
  max-width: 100%;
  max-height: 100%;
  margin: auto;
  position: absolute;
  top: 0;
  bottom: 0;
  left: 0;
  right: 0;
}
.reactEasyCrop_Cover_Horizontal {
  width: 100%;
  height: auto;
}
.reactEasyCrop_Cover_Vertical {
  width: auto;
  height: 100%;
}

.reactEasyCrop_CropArea {
  position: absolute;
  left: 50%;
  top: 50%;
  transform: translate(-50%, -50%);
  border: 1px solid rgba(255, 255, 255, 0.5);
  box-sizing: border-box;
  box-shadow: 0 0 0 9999em;
  color: rgba(0, 0, 0, 0.5);
  overflow: hidden;
}

.reactEasyCrop_CropAreaRound {
  border-radius: 50%;
}

.reactEasyCrop_CropAreaGrid::before {
  content: ' ';
  box-sizing: border-box;
  position: absolute;
  border: 1px solid rgba(255, 255, 255, 0.5);
  top: 0;
  bottom: 0;
  left: 33.33%;
  right: 33.33%;
  border-top: 0;
  border-bottom: 0;
}

.reactEasyCrop_CropAreaGrid::after {
  content: ' ';
  box-sizing: border-box;
  position: absolute;
  border: 1px solid rgba(255, 255, 255, 0.5);
  top: 33.33%;
  bottom: 33.33%;
  left: 0;
  right: 0;
  border-left: 0;
  border-right: 0;
}
`,Os=1,Ps=3,xs=function(r){a(f,r);function f(){var n=r!==null&&r.apply(this,arguments)||this;return n.imageRef=R.a.createRef(),n.videoRef=R.a.createRef(),n.containerRef=null,n.styleRef=null,n.containerRect=null,n.mediaSize={width:0,height:0,naturalWidth:0,naturalHeight:0},n.dragStartPosition={x:0,y:0},n.dragStartCrop={x:0,y:0},n.gestureZoomStart=0,n.gestureRotationStart=0,n.isTouching=!1,n.lastPinchDistance=0,n.lastPinchRotation=0,n.rafDragTimeout=null,n.rafPinchTimeout=null,n.wheelTimer=null,n.currentDoc=typeof document!="undefined"?document:null,n.currentWindow=typeof window!="undefined"?window:null,n.resizeObserver=null,n.state={cropSize:null,hasWheelJustStarted:!1},n.initResizeObserver=function(){if(!(typeof window.ResizeObserver=="undefined"||!n.containerRef)){var l=!0;n.resizeObserver=new window.ResizeObserver(function(v){if(l){l=!1;return}n.computeSizes()}),n.resizeObserver.observe(n.containerRef)}},n.preventZoomSafari=function(l){return l.preventDefault()},n.cleanEvents=function(){n.currentDoc&&(n.currentDoc.removeEventListener("mousemove",n.onMouseMove),n.currentDoc.removeEventListener("mouseup",n.onDragStopped),n.currentDoc.removeEventListener("touchmove",n.onTouchMove),n.currentDoc.removeEventListener("touchend",n.onDragStopped),n.currentDoc.removeEventListener("gesturemove",n.onGestureMove),n.currentDoc.removeEventListener("gestureend",n.onGestureEnd))},n.clearScrollEvent=function(){n.containerRef&&n.containerRef.removeEventListener("wheel",n.onWheel),n.wheelTimer&&clearTimeout(n.wheelTimer)},n.onMediaLoad=function(){var l=n.computeSizes();l&&(n.emitCropData(),n.setInitialCrop(l)),n.props.onMediaLoaded&&n.props.onMediaLoaded(n.mediaSize)},n.setInitialCrop=function(l){if(n.props.initialCroppedAreaPercentages){var v=j(n.props.initialCroppedAreaPercentages,n.mediaSize,n.props.rotation,l,n.props.minZoom,n.props.maxZoom),w=v.crop,x=v.zoom;n.props.onCropChange(w),n.props.onZoomChange&&n.props.onZoomChange(x)}else if(n.props.initialCroppedAreaPixels){var T=q(n.props.initialCroppedAreaPixels,n.mediaSize,n.props.rotation,l,n.props.minZoom,n.props.maxZoom),w=T.crop,x=T.zoom;n.props.onCropChange(w),n.props.onZoomChange&&n.props.onZoomChange(x)}},n.computeSizes=function(){var l,v,w,x,T,G,A=n.imageRef.current||n.videoRef.current;if(A&&n.containerRef){n.containerRect=n.containerRef.getBoundingClientRect();var Q=n.containerRect.width/n.containerRect.height,gn=((l=n.imageRef.current)===null||l===void 0?void 0:l.naturalWidth)||((v=n.videoRef.current)===null||v===void 0?void 0:v.videoWidth)||0,un=((w=n.imageRef.current)===null||w===void 0?void 0:w.naturalHeight)||((x=n.videoRef.current)===null||x===void 0?void 0:x.videoHeight)||0,Sn=A.offsetWidth<gn||A.offsetHeight<un,bn=gn/un,Un=void 0;if(Sn)switch(n.props.objectFit){default:case"contain":Un=Q>bn?{width:n.containerRect.height*bn,height:n.containerRect.height}:{width:n.containerRect.width,height:n.containerRect.width/bn};break;case"horizontal-cover":Un={width:n.containerRect.width,height:n.containerRect.width/bn};break;case"vertical-cover":Un={width:n.containerRect.height*bn,height:n.containerRect.height};break;case"auto-cover":Un=gn>un?{width:n.containerRect.width,height:n.containerRect.width/bn}:{width:n.containerRect.height*bn,height:n.containerRect.height};break}else Un={width:A.offsetWidth,height:A.offsetHeight};n.mediaSize=s(s({},Un),{naturalWidth:gn,naturalHeight:un}),n.props.setMediaSize&&n.props.setMediaSize(n.mediaSize);var Cn=n.props.cropSize?n.props.cropSize:Tn(n.mediaSize.width,n.mediaSize.height,n.containerRect.width,n.containerRect.height,n.props.aspect,n.props.rotation);return(((T=n.state.cropSize)===null||T===void 0?void 0:T.height)!==Cn.height||((G=n.state.cropSize)===null||G===void 0?void 0:G.width)!==Cn.width)&&n.props.onCropSizeChange&&n.props.onCropSizeChange(Cn),n.setState({cropSize:Cn},n.recomputeCropPosition),n.props.setCropSize&&n.props.setCropSize(Cn),Cn}},n.onMouseDown=function(l){n.currentDoc&&(l.preventDefault(),n.currentDoc.addEventListener("mousemove",n.onMouseMove),n.currentDoc.addEventListener("mouseup",n.onDragStopped),n.onDragStart(f.getMousePoint(l)))},n.onMouseMove=function(l){return n.onDrag(f.getMousePoint(l))},n.onTouchStart=function(l){n.currentDoc&&(n.isTouching=!0,!(n.props.onTouchRequest&&!n.props.onTouchRequest(l))&&(n.currentDoc.addEventListener("touchmove",n.onTouchMove,{passive:!1}),n.currentDoc.addEventListener("touchend",n.onDragStopped),l.touches.length===2?n.onPinchStart(l):l.touches.length===1&&n.onDragStart(f.getTouchPoint(l.touches[0]))))},n.onTouchMove=function(l){l.preventDefault(),l.touches.length===2?n.onPinchMove(l):l.touches.length===1&&n.onDrag(f.getTouchPoint(l.touches[0]))},n.onGestureStart=function(l){n.currentDoc&&(l.preventDefault(),n.currentDoc.addEventListener("gesturechange",n.onGestureMove),n.currentDoc.addEventListener("gestureend",n.onGestureEnd),n.gestureZoomStart=n.props.zoom,n.gestureRotationStart=n.props.rotation)},n.onGestureMove=function(l){if(l.preventDefault(),!n.isTouching){var v=f.getMousePoint(l),w=n.gestureZoomStart-1+l.scale;if(n.setNewZoom(w,v,{shouldUpdatePosition:!0}),n.props.onRotationChange){var x=n.gestureRotationStart+l.rotation;n.props.onRotationChange(x)}}},n.onGestureEnd=function(l){n.cleanEvents()},n.onDragStart=function(l){var v,w,x=l.x,T=l.y;n.dragStartPosition={x,y:T},n.dragStartCrop=s({},n.props.crop),(w=(v=n.props).onInteractionStart)===null||w===void 0||w.call(v)},n.onDrag=function(l){var v=l.x,w=l.y;n.currentWindow&&(n.rafDragTimeout&&n.currentWindow.cancelAnimationFrame(n.rafDragTimeout),n.rafDragTimeout=n.currentWindow.requestAnimationFrame(function(){if(n.state.cropSize&&!(v===void 0||w===void 0)){var x=v-n.dragStartPosition.x,T=w-n.dragStartPosition.y,G={x:n.dragStartCrop.x+x,y:n.dragStartCrop.y+T},A=n.props.restrictPosition?p(G,n.mediaSize,n.state.cropSize,n.props.zoom,n.props.rotation):G;n.props.onCropChange(A)}}))},n.onDragStopped=function(){var l,v;n.isTouching=!1,n.cleanEvents(),n.emitCropData(),(v=(l=n.props).onInteractionEnd)===null||v===void 0||v.call(l)},n.onWheel=function(l){if(n.currentWindow&&!(n.props.onWheelRequest&&!n.props.onWheelRequest(l))){l.preventDefault();var v=f.getMousePoint(l),w=vn()(l).pixelY,x=n.props.zoom-w*n.props.zoomSpeed/200;n.setNewZoom(x,v,{shouldUpdatePosition:!0}),n.state.hasWheelJustStarted||n.setState({hasWheelJustStarted:!0},function(){var T,G;return(G=(T=n.props).onInteractionStart)===null||G===void 0?void 0:G.call(T)}),n.wheelTimer&&clearTimeout(n.wheelTimer),n.wheelTimer=n.currentWindow.setTimeout(function(){return n.setState({hasWheelJustStarted:!1},function(){var T,G;return(G=(T=n.props).onInteractionEnd)===null||G===void 0?void 0:G.call(T)})},250)}},n.getPointOnContainer=function(l){var v=l.x,w=l.y;if(!n.containerRect)throw new Error("The Cropper is not mounted");return{x:n.containerRect.width/2-(v-n.containerRect.left),y:n.containerRect.height/2-(w-n.containerRect.top)}},n.getPointOnMedia=function(l){var v=l.x,w=l.y,x=n.props,T=x.crop,G=x.zoom;return{x:(v+T.x)/G,y:(w+T.y)/G}},n.setNewZoom=function(l,v,w){var x=w===void 0?{}:w,T=x.shouldUpdatePosition,G=T===void 0?!0:T;if(!(!n.state.cropSize||!n.props.onZoomChange)){var A=jn(l,n.props.minZoom,n.props.maxZoom);if(G){var Q=n.getPointOnContainer(v),gn=n.getPointOnMedia(Q),un={x:gn.x*A-Q.x,y:gn.y*A-Q.y},Sn=n.props.restrictPosition?p(un,n.mediaSize,n.state.cropSize,A,n.props.rotation):un;n.props.onCropChange(Sn)}n.props.onZoomChange(A)}},n.getCropData=function(){if(!n.state.cropSize)return null;var l=n.props.restrictPosition?p(n.props.crop,n.mediaSize,n.state.cropSize,n.props.zoom,n.props.rotation):n.props.crop;return c(l,n.mediaSize,n.state.cropSize,n.getAspect(),n.props.zoom,n.props.rotation,n.props.restrictPosition)},n.emitCropData=function(){var l=n.getCropData();if(l){var v=l.croppedAreaPercentages,w=l.croppedAreaPixels;n.props.onCropComplete&&n.props.onCropComplete(v,w),n.props.onCropAreaChange&&n.props.onCropAreaChange(v,w)}},n.emitCropAreaChange=function(){var l=n.getCropData();if(l){var v=l.croppedAreaPercentages,w=l.croppedAreaPixels;n.props.onCropAreaChange&&n.props.onCropAreaChange(v,w)}},n.recomputeCropPosition=function(){if(n.state.cropSize){var l=n.props.restrictPosition?p(n.props.crop,n.mediaSize,n.state.cropSize,n.props.zoom,n.props.rotation):n.props.crop;n.props.onCropChange(l),n.emitCropData()}},n}return f.prototype.componentDidMount=function(){!this.currentDoc||!this.currentWindow||(this.containerRef&&(this.containerRef.ownerDocument&&(this.currentDoc=this.containerRef.ownerDocument),this.currentDoc.defaultView&&(this.currentWindow=this.currentDoc.defaultView),this.initResizeObserver(),typeof window.ResizeObserver=="undefined"&&this.currentWindow.addEventListener("resize",this.computeSizes),this.props.zoomWithScroll&&this.containerRef.addEventListener("wheel",this.onWheel,{passive:!1}),this.containerRef.addEventListener("gesturestart",this.onGestureStart)),this.props.disableAutomaticStylesInjection||(this.styleRef=this.currentDoc.createElement("style"),this.styleRef.setAttribute("type","text/css"),this.props.nonce&&this.styleRef.setAttribute("nonce",this.props.nonce),this.styleRef.innerHTML=Cs,this.currentDoc.head.appendChild(this.styleRef)),this.imageRef.current&&this.imageRef.current.complete&&this.onMediaLoad(),this.props.setImageRef&&this.props.setImageRef(this.imageRef),this.props.setVideoRef&&this.props.setVideoRef(this.videoRef))},f.prototype.componentWillUnmount=function(){var n,l;!this.currentDoc||!this.currentWindow||(typeof window.ResizeObserver=="undefined"&&this.currentWindow.removeEventListener("resize",this.computeSizes),(n=this.resizeObserver)===null||n===void 0||n.disconnect(),this.containerRef&&this.containerRef.removeEventListener("gesturestart",this.preventZoomSafari),this.styleRef&&((l=this.styleRef.parentNode)===null||l===void 0||l.removeChild(this.styleRef)),this.cleanEvents(),this.props.zoomWithScroll&&this.clearScrollEvent())},f.prototype.componentDidUpdate=function(n){var l,v,w,x,T,G,A,Q,gn;n.rotation!==this.props.rotation?(this.computeSizes(),this.recomputeCropPosition()):n.aspect!==this.props.aspect?this.computeSizes():n.zoom!==this.props.zoom?this.recomputeCropPosition():((l=n.cropSize)===null||l===void 0?void 0:l.height)!==((v=this.props.cropSize)===null||v===void 0?void 0:v.height)||((w=n.cropSize)===null||w===void 0?void 0:w.width)!==((x=this.props.cropSize)===null||x===void 0?void 0:x.width)?this.computeSizes():(((T=n.crop)===null||T===void 0?void 0:T.x)!==((G=this.props.crop)===null||G===void 0?void 0:G.x)||((A=n.crop)===null||A===void 0?void 0:A.y)!==((Q=this.props.crop)===null||Q===void 0?void 0:Q.y))&&this.emitCropAreaChange(),n.zoomWithScroll!==this.props.zoomWithScroll&&this.containerRef&&(this.props.zoomWithScroll?this.containerRef.addEventListener("wheel",this.onWheel,{passive:!1}):this.clearScrollEvent()),n.video!==this.props.video&&((gn=this.videoRef.current)===null||gn===void 0||gn.load())},f.prototype.getAspect=function(){var n=this.props,l=n.cropSize,v=n.aspect;return l?l.width/l.height:v},f.prototype.onPinchStart=function(n){var l=f.getTouchPoint(n.touches[0]),v=f.getTouchPoint(n.touches[1]);this.lastPinchDistance=h(l,v),this.lastPinchRotation=k(l,v),this.onDragStart(tn(l,v))},f.prototype.onPinchMove=function(n){var l=this;if(!(!this.currentDoc||!this.currentWindow)){var v=f.getTouchPoint(n.touches[0]),w=f.getTouchPoint(n.touches[1]),x=tn(v,w);this.onDrag(x),this.rafPinchTimeout&&this.currentWindow.cancelAnimationFrame(this.rafPinchTimeout),this.rafPinchTimeout=this.currentWindow.requestAnimationFrame(function(){var T=h(v,w),G=l.props.zoom*(T/l.lastPinchDistance);l.setNewZoom(G,x,{shouldUpdatePosition:!1}),l.lastPinchDistance=T;var A=k(v,w),Q=l.props.rotation+(A-l.lastPinchRotation);l.props.onRotationChange&&l.props.onRotationChange(Q),l.lastPinchRotation=A})}},f.prototype.render=function(){var n=this,l=this.props,v=l.image,w=l.video,x=l.mediaProps,T=l.transform,G=l.crop,A=G.x,Q=G.y,gn=l.rotation,un=l.zoom,Sn=l.cropShape,bn=l.showGrid,Un=l.style,Cn=Un.containerStyle,Wn=Un.cropAreaStyle,Nn=Un.mediaStyle,Bn=l.classes,Qn=Bn.containerClassName,ps=Bn.cropAreaClassName,_n=Bn.mediaClassName,Rn=l.objectFit;return R.a.createElement("div",{onMouseDown:this.onMouseDown,onTouchStart:this.onTouchStart,ref:function(Yn){return n.containerRef=Yn},"data-testid":"container",style:Cn,className:Dn("reactEasyCrop_Container",Qn)},v?R.a.createElement("img",s({alt:"",className:Dn("reactEasyCrop_Image",Rn==="contain"&&"reactEasyCrop_Contain",Rn==="horizontal-cover"&&"reactEasyCrop_Cover_Horizontal",Rn==="vertical-cover"&&"reactEasyCrop_Cover_Vertical",Rn==="auto-cover"&&(this.mediaSize.naturalWidth>this.mediaSize.naturalHeight?"reactEasyCrop_Cover_Horizontal":"reactEasyCrop_Cover_Vertical"),_n)},x,{src:v,ref:this.imageRef,style:s(s({},Nn),{transform:T||"translate(".concat(A,"px, ").concat(Q,"px) rotate(").concat(gn,"deg) scale(").concat(un,")")}),onLoad:this.onMediaLoad})):w&&R.a.createElement("video",s({autoPlay:!0,loop:!0,muted:!0,className:Dn("reactEasyCrop_Video",Rn==="contain"&&"reactEasyCrop_Contain",Rn==="horizontal-cover"&&"reactEasyCrop_Cover_Horizontal",Rn==="vertical-cover"&&"reactEasyCrop_Cover_Vertical",Rn==="auto-cover"&&(this.mediaSize.naturalWidth>this.mediaSize.naturalHeight?"reactEasyCrop_Cover_Horizontal":"reactEasyCrop_Cover_Vertical"),_n)},x,{ref:this.videoRef,onLoadedMetadata:this.onMediaLoad,style:s(s({},Nn),{transform:T||"translate(".concat(A,"px, ").concat(Q,"px) rotate(").concat(gn,"deg) scale(").concat(un,")")}),controls:!1}),(Array.isArray(w)?w:[{src:w}]).map(function(xn){return R.a.createElement("source",s({key:xn.src},xn))})),this.state.cropSize&&R.a.createElement("div",{style:s(s({},Wn),{width:this.state.cropSize.width,height:this.state.cropSize.height}),"data-testid":"cropper",className:Dn("reactEasyCrop_CropArea",Sn==="round"&&"reactEasyCrop_CropAreaRound",bn&&"reactEasyCrop_CropAreaGrid",ps)}))},f.defaultProps={zoom:1,rotation:0,aspect:4/3,maxZoom:Ps,minZoom:Os,cropShape:"rect",objectFit:"contain",showGrid:!0,style:{},classes:{},mediaProps:{},zoomSpeed:1,restrictPosition:!0,zoomWithScroll:!0},f.getMousePoint=function(n){return{x:Number(n.clientX),y:Number(n.clientY)}},f.getTouchPoint=function(n){return{x:Number(n.clientX),y:Number(n.clientY)}},f}(R.a.Component),ms=g(506);function Ls(r){if(r&&typeof window!="undefined"){var f=document.createElement("style");return f.setAttribute("media","screen"),f.innerHTML=r,document.head.appendChild(f),r}}const Vn="img-crop",gs=1,ts=.1,rs=0,ks=1,hs=-180,ys=180,Rs=Object(H.forwardRef)((r,f)=>{const{cropperRef:n,image:l,aspect:v,shape:w,grid:x,zoom:T,rotate:G,minZoom:A,maxZoom:Q,cropperProps:gn}=r,[un,Sn]=Object(H.useState)({x:0,y:0}),[bn,Un]=Object(H.useState)({width:0,height:0}),[Cn,Wn]=Object(H.useState)(gs),[Nn,Bn]=Object(H.useState)(rs),Qn=Object(H.useRef)({width:0,height:0,x:0,y:0}),ps=Object(H.useCallback)(Rn=>{const{width:xn,height:Yn}=Rn,os=Yn*v;xn>os?Un({width:os,height:Yn}):Un({width:xn,height:xn/v})},[v]),_n=Object(H.useCallback)((Rn,xn)=>{Qn.current=xn},[]);return Object(H.useImperativeHandle)(f,()=>({rotateVal:Nn,setZoomVal:Wn,setRotateVal:Bn,cropPixelsRef:Qn})),Object(N.jsxs)(N.Fragment,{children:[Object(N.jsx)(xs,Object.assign({},gn,{ref:n,image:l,crop:un,cropSize:bn,onCropChange:Sn,aspect:v,cropShape:w,showGrid:x,zoomWithScroll:T,zoom:Cn,rotation:Nn,onZoomChange:Wn,onRotationChange:Bn,minZoom:A,maxZoom:Q,onMediaLoaded:ps,onCropComplete:_n,classes:{containerClassName:`${Vn}-container`,mediaClassName:`${Vn}-media`}})),T&&Object(N.jsxs)("section",Object.assign({className:`${Vn}-control ${Vn}-control-zoom`},{children:[Object(N.jsx)("button",Object.assign({onClick:()=>Wn(Cn-ts),disabled:Cn-ts<A},{children:"\uFF0D"})),Object(N.jsx)(ms.a,{min:A,max:Q,step:ts,value:Cn,onChange:Wn}),Object(N.jsx)("button",Object.assign({onClick:()=>Wn(Cn+ts),disabled:Cn+ts>Q},{children:"\uFF0B"}))]})),G&&Object(N.jsxs)("section",Object.assign({className:`${Vn}-control ${Vn}-control-rotate`},{children:[Object(N.jsx)("button",Object.assign({onClick:()=>Bn(Nn-ks),disabled:Nn===hs},{children:"\u21BA"})),Object(N.jsx)(ms.a,{min:hs,max:ys,step:ks,value:Nn,onChange:Bn}),Object(N.jsx)("button",Object.assign({onClick:()=>Bn(Nn+ks),disabled:Nn===ys},{children:"\u21BB"}))]}))]})});var Es=Object(H.memo)(Rs);Ls(`.img-crop-modal .img-crop-container {
  position: relative;
  width: 100%;
  height: 40vh;
}
.img-crop-modal .img-crop-control {
  display: flex;
  align-items: center;
  width: 60%;
  margin-left: auto;
  margin-right: auto;
}
.img-crop-modal .img-crop-control:first-of-type {
  margin-top: 16px;
}
.img-crop-modal .img-crop-control:last-of-type {
  margin-bottom: -8px;
}
.img-crop-modal .img-crop-control button {
  display: flex;
  justify-content: center;
  align-items: center;
  width: 34px;
  height: 34px;
  padding: 0;
  font-style: normal;
  background: transparent;
  border: 0;
  outline: 0;
  cursor: pointer;
}
.img-crop-modal .img-crop-control button[disabled] {
  cursor: default;
}
.img-crop-modal .img-crop-control button + div:only-of-type {
  flex: 1;
  margin: 0 8px;
}
.img-crop-modal .img-crop-control-zoom button {
  font-size: 18px;
}
.img-crop-modal .img-crop-control-rotate button {
  font-size: 16px;
}
.img-crop-modal .img-crop-control-rotate button:first-of-type {
  transform: rotate(-20deg);
}
.img-crop-modal .img-crop-control-rotate button:last-of-type {
  transform: rotate(20deg);
}
`);const js=D(F.version,"4.23.0")===-1?{visible:!0}:{open:!0},As=Object(H.forwardRef)((r,f)=>{const{aspect:n=1,shape:l="rect",grid:v=!1,quality:w=.4,fillColor:x="white",zoom:T=!0,rotate:G=!1,minZoom:A=1,maxZoom:Q=3,modalTitle:gn,modalWidth:un,modalOk:Sn,modalCancel:bn,modalMaskTransitionName:Un,modalTransitionName:Cn,modalClassName:Wn,onModalOk:Nn,onModalCancel:Bn,beforeCrop:Qn,onUploadFail:ps,cropperProps:_n,children:Rn}=r,xn=Object(H.useRef)({});xn.current.onModalOk=Nn,xn.current.onModalCancel=Bn,xn.current.beforeCrop=Qn,xn.current.onUploadFail=ps;const[Yn,os]=Object(H.useState)(""),ws=Object(H.useRef)({}),ds=Object(H.useRef)(),us=Object(H.useRef)(()=>{}),fs=Object(H.useRef)(()=>{}),Fs=Object(H.useMemo)(()=>{const An=Array.isArray(Rn)?Rn[0]:Rn,zn=An.props,{beforeUpload:Fn,accept:In}=zn,ss=Object(sn.d)(zn,["beforeUpload","accept"]);return ds.current=Fn,Object.assign(Object.assign({},An),{props:Object.assign(Object.assign({},ss),{accept:In||"image/*",beforeUpload:(is,es)=>new Promise((Xn,$n)=>Object(sn.b)(void 0,void 0,void 0,function*(){if(xn.current.beforeCrop&&!(yield xn.current.beforeCrop(is,es)))return $n();ws.current=is,us.current=Jn=>{var Hn,Zn;(Zn=(Hn=xn.current).onModalOk)===null||Zn===void 0||Zn.call(Hn,Jn),Xn(Jn)},fs.current=Jn=>{var Hn,Zn;(Zn=(Hn=xn.current).onUploadFail)===null||Zn===void 0||Zn.call(Hn,Jn),$n()};const qn=new FileReader;qn.addEventListener("load",()=>{typeof qn.result=="string"&&os(qn.result)}),qn.readAsDataURL(is)}))})})},[Rn]),ns=Object(H.useRef)({}),Is=Object(H.useMemo)(()=>{const An={width:un,okText:Sn,cancelText:bn,maskTransitionName:Un,transitionName:Cn};return Object.keys(An).forEach(zn=>{const Fn=zn;An[Fn]===void 0&&delete An[Fn]}),An},[bn,Un,Sn,Cn,un]),vs=()=>{os(""),ns.current.setZoomVal(gs),ns.current.setRotateVal(rs)},Ts=Object(H.useCallback)(()=>{var An,zn;(zn=(An=xn.current).onModalCancel)===null||zn===void 0||zn.call(An),vs()},[]),Ds=Object(H.useCallback)(An=>Object(sn.b)(void 0,void 0,void 0,function*(){var zn;vs();const Fn=document.createElement("canvas"),In=Fn.getContext("2d"),ss=An.target,es=(((zn=ss==null?void 0:ss.getRootNode)===null||zn===void 0?void 0:zn.call(ss))||document).querySelector(`.${Vn}-media`),{width:Xn,height:$n,x:qn,y:Jn}=ns.current.cropPixelsRef.current;if(G&&ns.current.rotateVal!==rs){const{naturalWidth:Kn,naturalHeight:Mn}=es,as=ns.current.rotateVal*(Math.PI/180),Gn=Math.abs(Math.sin(as)),bs=Math.abs(Math.cos(as)),cs=Kn*bs+Mn*Gn,ls=Mn*bs+Kn*Gn;Fn.width=cs,Fn.height=ls,In.fillStyle=x,In.fillRect(0,0,cs,ls);const Us=cs/2,Ss=ls/2;In.translate(Us,Ss),In.rotate(as),In.translate(-Us,-Ss);const Ms=(cs-Kn)/2,Ws=(ls-Mn)/2;In.drawImage(es,0,0,Kn,Mn,Ms,Ws,Kn,Mn);const Zs=In.getImageData(0,0,cs,ls);Fn.width=Xn,Fn.height=$n,In.putImageData(Zs,-qn,-Jn)}else Fn.width=Xn,Fn.height=$n,In.fillStyle=x,In.fillRect(0,0,Xn,$n),In.drawImage(es,qn,Jn,Xn,$n,0,0,Xn,$n);const{type:Hn,name:Zn,uid:Bs}=ws.current;Fn.toBlob(Kn=>Object(sn.b)(void 0,void 0,void 0,function*(){const Mn=Object.assign(new File([Kn],Zn,{type:Hn}),{uid:Bs});if(!ds.current)return us.current(Mn);const as=Mn,Gn=yield ds.current(as,[as]);if(Gn===!0)return us.current(Mn);if(Gn===!1)return fs.current(new Error("beforeUpload return false"));if(delete Mn[S.a.LIST_IGNORE],Gn===S.a.LIST_IGNORE)return Object.defineProperty(Mn,S.a.LIST_IGNORE,{value:!0,configurable:!0}),fs.current(new Error("beforeUpload return LIST_IGNORE"));if(typeof Gn=="object"&&Gn!==null)return us.current(Gn)}),Hn,w)}),[x,w,G]),Ns=`${Vn}-modal${Wn?` ${Wn}`:""}`,zs=Object(H.useMemo)(()=>gn||((typeof window!="undefined"?window.navigator.language:"")==="zh-CN"?"\u7F16\u8F91\u56FE\u7247":"Edit image"),[gn]);return Object(N.jsxs)(N.Fragment,{children:[Fs,Yn&&Object(N.jsx)(O.default,Object.assign({},js,{wrapClassName:Ns,title:zs,onOk:Ds,onCancel:Ts,maskClosable:!1,destroyOnClose:!0},Is,{children:Object(N.jsx)(Es,{ref:ns,cropperRef:f,image:Yn,aspect:n,shape:l,grid:v,zoom:T,rotate:G,minZoom:A,maxZoom:Q,cropperProps:_n})}))]})})}}]);
